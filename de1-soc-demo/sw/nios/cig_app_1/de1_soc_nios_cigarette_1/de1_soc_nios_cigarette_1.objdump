
de1_soc_nios_cigarette_1.elf:     file format elf32-littlenios2
de1_soc_nios_cigarette_1.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04100224

Program Header:
    LOAD off    0x00001000 vaddr 0x04100000 paddr 0x04100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04100020 paddr 0x04100020 align 2**12
         filesz 0x000112f0 memsz 0x000112f0 flags r-x
    LOAD off    0x00012310 vaddr 0x04111310 paddr 0x04112fb8 align 2**12
         filesz 0x00001ca8 memsz 0x00001ca8 flags rw-
    LOAD off    0x00014c60 vaddr 0x04114c60 paddr 0x04114c60 align 2**12
         filesz 0x00000000 memsz 0x00000168 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04100000  04100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000204  04100020  04100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000109e8  04100224  04100224  00001224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000704  04110c0c  04110c0c  00011c0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001ca8  04111310  04112fb8  00012310  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000168  04114c60  04114c60  00014c60  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_controller_0 00000000  04114dc8  04114dc8  00013fb8  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  00013fb8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000010e0  00000000  00000000  00013fe8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002ef15  00000000  00000000  000150c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000bab0  00000000  00000000  00043fdd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00017614  00000000  00000000  0004fa8d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  000027b0  00000000  00000000  000670a4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    0000430c  00000000  00000000  00069854  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001e314  00000000  00000000  0006db60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000040  00000000  00000000  0008be74  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002460  00000000  00000000  0008beb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  00091b7b  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  00091b7e  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00091b8a  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00091b8b  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00091b8c  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00091b90  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00091b94  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  00091b98  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  00091ba3  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  00091bae  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000a  00000000  00000000  00091bb9  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000056  00000000  00000000  00091bc3  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04100000 l    d  .entry	00000000 .entry
04100020 l    d  .exceptions	00000000 .exceptions
04100224 l    d  .text	00000000 .text
04110c0c l    d  .rodata	00000000 .rodata
04111310 l    d  .rwdata	00000000 .rwdata
04114c60 l    d  .bss	00000000 .bss
04114dc8 l    d  .sdram_controller_0	00000000 .sdram_controller_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 d:/Fax/projektovanje_namjenskih_racunarski_struktura/pnrs-2023/de1-soc-demo/sw/nios/cig_app_1/de1_soc_nios_cigarette_1_bsp//obj/HAL/src/crt0.o
0410025c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 tobacco.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 vfprintf.c
04102728 l     F .text	000000c0 __sbprintf
04110cc0 l     O .rodata	00000010 blanks.1
04110cb0 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0410294c l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
041045c0 l     F .text	00000008 __fp_lock
041045d4 l     F .text	00000008 __fp_unlock
041045dc l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
04111310 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
04110d74 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
04106fec l     F .text	000000f4 __sprint_r.part.0
04108458 l     F .text	000000c0 __sbprintf
04110ea8 l     O .rodata	00000010 blanks.1
04110e98 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
04108710 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0410d628 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0410d740 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0410d7a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0410d8bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0410d9a8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0410db10 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0410dbfc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0410dddc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
04112f98 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0410e078 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0410e1b8 l     F .text	00000034 alt_dev_reg
0410e1ec l     F .text	0000003c alt_get_errno
0410e228 l     F .text	00000068 alt_avalon_mutex_reg
04111e50 l     O .rwdata	00001060 jtag_uart_0
04112eb0 l     O .rwdata	00000048 mailbox_1
04112ef8 l     O .rwdata	00000048 mailbox_4
04112f40 l     O .rwdata	00000010 mutex_0
04112f50 l     O .rwdata	00000010 mutex_1
04112f60 l     O .rwdata	00000010 mutex_2
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0410e588 l     F .text	0000020c altera_avalon_jtag_uart_irq
0410e794 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_mailbox_simple.c
0410edd8 l     F .text	0000008c altera_avalon_mailbox_identify
0410ee64 l     F .text	00000078 altera_avalon_mailbox_post
0410eedc l     F .text	0000013c altera_avalon_mailbox_simple_tx_isr
0410f018 l     F .text	000000ac altera_avalon_mailbox_simple_rx_isr
00000000 l    df *ABS*	00000000 altera_avalon_mutex.c
0410f73c l     F .text	0000003c alt_get_errno
0410f778 l     F .text	0000007c alt_mutex_trylock
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0410fcb8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
041101ac l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
041102fc l     F .text	0000003c alt_get_errno
04110338 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
04114c9c g     O .bss	00000004 alt_instruction_exception_handler
04106c70 g     F .text	00000070 _mprec_log10
0410f4b0 g     F .text	00000150 altera_avalon_mailbox_send
04106d5c g     F .text	00000060 __any_on
04109030 g     F .text	00000058 _isatty_r
04110d80 g     O .rodata	00000028 __mprec_tinytens
0410dd18 g     F .text	0000007c alt_main
04114cc8 g     O .bss	00000100 alt_irq
0410917c g     F .text	00000064 _lseek_r
04112fb8 g       *ABS*	00000000 __flash_rwdata_start
0410c108 g     F .text	00000080 .hidden __eqdf2
04114dc8 g       *ABS*	00000000 __alt_heap_start
0410a174 g     F .text	00000060 _kill_r
0410055c g     F .text	00000038 printf
04109b40 g     F .text	0000006c _wcrtomb_r
04109ce4 g     F .text	00000098 _signal_r
04106ef0 g     F .text	0000005c __sseek
04104924 g     F .text	00000010 __sinit
041099e0 g     F .text	00000148 __swbuf_r
04109088 g     F .text	00000074 _setlocale_r
04104744 g     F .text	00000078 __sfmoreglue
0410ddb8 g     F .text	00000024 __malloc_unlock
04109230 g     F .text	0000012c memmove
04104910 g     F .text	00000014 _cleanup
0410f8b4 g     F .text	00000040 altera_avalon_mutex_trylock
04105bcc g     F .text	000000a4 _Balloc
0410c188 g     F .text	000000e8 .hidden __gtdf2
04110720 g     F .text	00000024 altera_nios2_gen2_irq_init
04100000 g     F .entry	0000000c __reset
04104ec4 g     F .text	00000008 __localeconv_l
0410f948 g     F .text	00000074 altera_avalon_mutex_is_mine
04100020 g       *ABS*	00000000 __flash_exceptions_start
04108b08 g     F .text	00000060 _fstat_r
04114c7c g     O .bss	00000004 errno
04106e68 g     F .text	00000008 __seofread
04114c88 g     O .bss	00000004 alt_argv
0411af70 g       *ABS*	00000000 _gp
0410e048 g     F .text	00000030 usleep
0410f600 g     F .text	0000013c altera_avalon_mailbox_retrieve_poll
04114c68 g     O .bss	00000004 mbox_receive
0410d89c g     F .text	00000020 getpid
04111cd0 g     O .rwdata	00000180 alt_fd_list
0410fe64 g     F .text	00000090 alt_find_dev
041059dc g     F .text	00000100 memcpy
041045c8 g     F .text	0000000c _cleanup_r
0410d48c g     F .text	000000b8 .hidden __floatsidf
04110280 g     F .text	0000007c alt_io_redirect
0410c270 g     F .text	000000e8 .hidden __ltdf2
04110c0c g       *ABS*	00000000 __DTOR_END__
04110904 g     F .text	00000098 alt_exception_cause_generated_bad_addr
0410f0c4 g     F .text	00000078 altera_avalon_mailbox_simple_init
04106bcc g     F .text	000000a4 __ratio
0410843c g     F .text	0000001c __vfiprintf_internal
0410e990 g     F .text	00000220 altera_avalon_jtag_uart_read
0410052c g     F .text	00000030 _printf_r
0410046c g     F .text	00000064 .hidden __udivsi3
0410d8f8 g     F .text	000000b0 isatty
04109d7c g     F .text	000000c4 _raise_r
041085d4 g     F .text	00000064 __assert_func
04110dd0 g     O .rodata	000000c8 __mprec_tens
0410f438 g     F .text	00000078 altera_avalon_mailbox_status
0410f320 g     F .text	00000118 altera_avalon_mailbox_close
04114c78 g     O .bss	00000004 __malloc_top_pad
0410a1d4 g     F .text	00000004 _getpid_r
04104ecc g     F .text	0000000c _localeconv_r
04108b68 g     F .text	000004c8 __sfvwrite_r
0410603c g     F .text	000000b0 __i2b
04109e40 g     F .text	000000bc __sigtramp_r
04106dbc g     F .text	00000058 _sbrk_r
0410935c g     F .text	00000064 _read_r
04112f90 g     O .rwdata	00000004 alt_max_fd
041087d0 g     F .text	00000070 _fclose_r
0410453c g     F .text	00000084 fflush
04114c74 g     O .bss	00000004 __malloc_max_sbrked_mem
04114c60 g     O .bss	00000004 paper_mutex
0410aee8 g     F .text	000008f0 .hidden __adddf3
04106960 g     F .text	00000108 __b2d
0410a8fc g     F .text	000005c4 .hidden __umoddi3
0410dc38 g     F .text	000000e0 lseek
0410f9bc g     F .text	00000050 altera_avalon_mutex_first_lock
04000000 g       *ABS*	00000000 __alt_mem_sdram_controller_0
04112f70 g     O .rwdata	00000004 _global_impure_ptr
041093c0 g     F .text	00000564 _realloc_r
04114dc8 g       *ABS*	00000000 __bss_end
041100c4 g     F .text	000000e8 alt_iic_isr_register
04110618 g     F .text	00000108 alt_tick
0410a2dc g     F .text	00000620 .hidden __udivdi3
04108a6c g     F .text	00000024 _fputwc_r
04110da8 g     O .rodata	00000028 __mprec_bigtens
04105df0 g     F .text	00000138 __s2b
04109c70 g     F .text	00000018 abort
0410d544 g     F .text	00000090 .hidden __floatunsidf
04106680 g     F .text	00000058 __mcmp
04104944 g     F .text	00000014 __fp_lock_all
04110078 g     F .text	0000004c alt_ic_irq_enabled
04110574 g     F .text	000000a4 alt_alarm_stop
04114c90 g     O .bss	00000004 alt_irq_active
041000fc g     F .exceptions	000000c8 alt_irq_handler
04111ca8 g     O .rwdata	00000028 alt_dev_null
0410f7f4 g     F .text	00000054 altera_avalon_mutex_open
0410fc98 g     F .text	00000020 alt_dcache_flush_all
04105f28 g     F .text	00000064 __hi0bits
0410d40c g     F .text	00000080 .hidden __fixdfsi
04112fb8 g       *ABS*	00000000 __ram_rwdata_end
04112f88 g     O .rwdata	00000008 alt_dev_list
0410e0b4 g     F .text	00000104 write
04112fa4 g     O .rwdata	00000008 alt_mutex_list
04111310 g       *ABS*	00000000 __ram_rodata_end
0410d7e0 g     F .text	000000bc fstat
0410d9e4 g     F .text	0000012c kill
0410c270 g     F .text	000000e8 .hidden __ledf2
041063b0 g     F .text	00000148 __pow5mult
041070f8 g     F .text	00001344 ___vfiprintf_internal_r
041004d0 g     F .text	0000005c .hidden __umodsi3
04114dc8 g       *ABS*	00000000 end
0410e4c8 g     F .text	000000c0 altera_avalon_jtag_uart_init
041001c4 g     F .exceptions	00000060 alt_instruction_exception_entry
04110c0c g       *ABS*	00000000 __CTOR_LIST__
05000000 g       *ABS*	00000000 __alt_stack_pointer
0410d5d4 g     F .text	00000054 .hidden __clzsi2
0410ebb0 g     F .text	00000228 altera_avalon_jtag_uart_write
04104934 g     F .text	00000004 __sfp_lock_acquire
0410590c g     F .text	000000d0 memchr
04114c6c g     O .bss	00000004 mbox_send
04100608 g     F .text	00002104 ___vfprintf_internal_r
04104a88 g     F .text	000002fc _free_r
0411100c g     O .rodata	00000180 _ctype_b
041090fc g     F .text	0000000c __locale_mb_cur_max
04110aec g     F .text	00000120 __call_exitprocs
04112f78 g     O .rwdata	00000004 __malloc_sbrk_base
04100224 g     F .text	0000003c _start
04114c94 g     O .bss	00000004 _alt_tick_rate
041005a8 g     F .text	00000060 rand
041064f8 g     F .text	00000188 __lshift
04114c98 g     O .bss	00000004 _alt_nticks
04109fb8 g     F .text	000000a0 signal
0410de18 g     F .text	00000108 read
0410e2cc g     F .text	00000098 alt_sys_init
04110a5c g     F .text	00000090 __register_exitproc
0410f8f4 g     F .text	00000054 altera_avalon_mutex_unlock
041060ec g     F .text	000002c4 __multiply
0410e834 g     F .text	00000068 altera_avalon_jtag_uart_close
0410aec0 g     F .text	00000028 .hidden __mulsi3
04111310 g       *ABS*	00000000 __ram_rwdata_start
04110c0c g       *ABS*	00000000 __ram_rodata_start
04114ca0 g     O .bss	00000028 __malloc_current_mallinfo
04106a68 g     F .text	00000164 __d2b
0410e364 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0411084c g     F .text	000000b8 alt_get_fd
0410fb40 g     F .text	00000158 alt_busy_sleep
0410857c g     F .text	00000058 _close_r
041109e4 g     F .text	00000078 memcmp
0410e424 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
04114dc8 g       *ABS*	00000000 __alt_stack_base
0410e474 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
041027e8 g     F .text	00000164 __swsetup_r
0410b7d8 g     F .text	00000930 .hidden __divdf3
041047bc g     F .text	00000154 __sfp
04106ce0 g     F .text	0000007c __copybits
04111734 g     O .rwdata	00000408 __malloc_av_
04104940 g     F .text	00000004 __sinit_lock_release
0410c358 g     F .text	000007ac .hidden __muldf3
04106e14 g     F .text	00000054 __sread
04110744 g     F .text	00000108 alt_find_file
0410fcf4 g     F .text	000000a8 alt_dev_llist_insert
0410dd94 g     F .text	00000024 __malloc_lock
0410df90 g     F .text	000000b8 sbrk
041044dc g     F .text	00000060 _fflush_r
0410864c g     F .text	000000c4 _calloc_r
04114c60 g       *ABS*	00000000 __bss_start
04105adc g     F .text	000000f0 memset
04100260 g     F .text	00000118 main
04114c8c g     O .bss	00000004 alt_envp
04114c70 g     O .bss	00000004 __malloc_max_total_mem
0410e3c4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
04109b28 g     F .text	00000018 __swbuf
04100594 g     F .text	00000014 srand
04106f4c g     F .text	00000008 __sclose
05000000 g       *ABS*	00000000 __alt_heap_limit
04108840 g     F .text	00000070 fclose
0410f86c g     F .text	00000048 altera_avalon_mutex_lock
04102b6c g     F .text	00001748 _dtoa_r
0410512c g     F .text	000007e0 _malloc_r
04109c40 g     F .text	00000030 __ascii_wctomb
04112f94 g     O .rwdata	00000004 alt_errno
041088b0 g     F .text	00000020 _fiprintf_r
0410a058 g     F .text	00000060 _init_signal
04104d84 g     F .text	00000098 _fwalk
041091e0 g     F .text	0000000c _mbtowc_r
04100378 g     F .text	00000080 .hidden __divsi3
0410496c g     F .text	0000011c _malloc_trim_r
04110c0c g       *ABS*	00000000 __CTOR_END__
04109924 g     F .text	000000b8 strcmp
04110c0c g       *ABS*	00000000 __flash_rodata_start
04110c0c g       *ABS*	00000000 __DTOR_LIST__
0410c108 g     F .text	00000080 .hidden __nedf2
0410e290 g     F .text	0000003c alt_irq_init
0410df20 g     F .text	00000070 alt_release_fd
0411118c g     O .rodata	00000100 .hidden __clz_tab
04114c80 g     O .bss	00000004 _PathLocale
0411099c g     F .text	00000014 atexit
04108518 g     F .text	00000064 _write_r
04109108 g     F .text	00000074 setlocale
04112f74 g     O .rwdata	00000004 _impure_ptr
04114c84 g     O .bss	00000004 alt_argc
041042b4 g     F .text	00000228 __sflush_r
0410fe00 g     F .text	00000064 _do_dtors
04100020 g       .exceptions	00000000 alt_irq_entry
041091ec g     F .text	00000044 __ascii_mbtowc
04106904 g     F .text	0000005c __ulp
04104958 g     F .text	00000014 __fp_unlock_all
04112f80 g     O .rwdata	00000008 alt_fs_list
04100020 g       *ABS*	00000000 __ram_exceptions_start
04104ed8 g     F .text	0000000c localeconv
04105094 g     F .text	00000098 __swhatbuf_r
0410ff14 g     F .text	00000050 alt_ic_isr_register
04112fb8 g       *ABS*	00000000 _edata
04114dc8 g       *ABS*	00000000 _end
04108908 g     F .text	00000164 __fputwc
04100224 g       *ABS*	00000000 __ram_exceptions_end
0410e89c g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0410ffec g     F .text	0000008c alt_ic_irq_disable
04112f9c g     O .rwdata	00000008 alt_mailbox_simple_list
04106e70 g     F .text	00000080 __swrite
04112f7c g     O .rwdata	00000004 __malloc_trim_threshold
041109b0 g     F .text	00000034 exit
041088d0 g     F .text	00000038 fiprintf
041099dc g     F .text	00000004 _vfiprintf_r
04104e1c g     F .text	000000a8 _fwalk_reent
041066d8 g     F .text	0000022c __mdiff
041003f8 g     F .text	00000074 .hidden __modsi3
05000000 g       *ABS*	00000000 __alt_data_end
04100020 g     F .exceptions	00000000 alt_exception
04104938 g     F .text	00000004 __sfp_lock_release
04114c64 g     O .bss	00000004 matches_mutex
04110f08 g     O .rodata	00000101 _ctype_
0410d3b8 g     F .text	00000054 .hidden __unorddf2
0410f13c g     F .text	000001e4 altera_avalon_mailbox_open
0410d76c g     F .text	00000038 _exit
0410fa0c g     F .text	00000134 alt_alarm_start
0410a1d8 g     F .text	00000104 .hidden __muldi3
04104ee4 g     F .text	000001b0 __smakebuf_r
04106f54 g     F .text	00000098 strlen
04109c88 g     F .text	0000005c _init_signal_r
04110414 g     F .text	00000160 open
0410c188 g     F .text	000000e8 .hidden __gedf2
04108638 g     F .text	00000014 __assert
041070e0 g     F .text	00000018 __sprint_r
0410fef4 g     F .text	00000020 alt_icache_flush_all
04112fac g     O .rwdata	00000004 alt_priority_mask
0410ff64 g     F .text	00000088 alt_ic_irq_enable
0410270c g     F .text	0000001c __vfprintf_internal
0410f848 g     F .text	00000024 altera_avalon_mutex_close
04109c34 g     F .text	0000000c _wctomb_r
0410cb04 g     F .text	000008b4 .hidden __subdf3
04105f8c g     F .text	000000b0 __lo0bits
04112fb0 g     O .rwdata	00000008 alt_alarm_list
0410fd9c g     F .text	00000064 _do_ctors
0410a0b8 g     F .text	000000bc __sigtramp
04109bac g     F .text	00000088 wcrtomb
0410d664 g     F .text	000000dc close
04111b3c g     O .rwdata	0000016c __global_locale
0410db78 g     F .text	00000084 alt_load
04108a90 g     F .text	00000078 fputwc
04109efc g     F .text	000000bc raise
0410493c g     F .text	00000004 __sinit_lock_acquire
04105c94 g     F .text	0000015c __multadd
04105c70 g     F .text	00000024 _Bfree



Disassembly of section .entry:

04100000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4100000:	00410434 	movhi	at,1040
    ori r1, r1, %lo(_start)
 4100004:	08408914 	ori	at,at,548
    jmp r1
 4100008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

04100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 410002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 410003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 410004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 410005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 410006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 410007c:	10000326 	beq	r2,zero,410008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4100080:	20000226 	beq	r4,zero,410008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4100084:	41000fc0 	call	41000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4100088:	00000706 	br	41000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 410008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4100098:	41001c40 	call	41001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 410009c:	1000021e 	bne	r2,zero,41000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 41000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 41000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 41000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 41000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 41000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 41000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 41000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 41000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 41000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 41000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 41000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 41000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 41000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 41000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 41000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 41000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 41000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 41000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 41000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 41000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 41000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 41000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 41000f8:	ef80083a 	eret

041000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 41000fc:	defff904 	addi	sp,sp,-28
 4100100:	dfc00615 	stw	ra,24(sp)
 4100104:	df000515 	stw	fp,20(sp)
 4100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 410010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4100110:	0005313a 	rdctl	r2,ipending
 4100114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 4100118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 410011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 4100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4100124:	00800044 	movi	r2,1
 4100128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 410012c:	e0ffff17 	ldw	r3,-4(fp)
 4100130:	e0bffe17 	ldw	r2,-8(fp)
 4100134:	1884703a 	and	r2,r3,r2
 4100138:	10001126 	beq	r2,zero,4100180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 410013c:	e0bffd17 	ldw	r2,-12(fp)
 4100140:	100690fa 	slli	r3,r2,3
 4100144:	00810474 	movhi	r2,1041
 4100148:	1885883a 	add	r2,r3,r2
 410014c:	10d33217 	ldw	r3,19656(r2)
 4100150:	e0bffd17 	ldw	r2,-12(fp)
 4100154:	100890fa 	slli	r4,r2,3
 4100158:	00810474 	movhi	r2,1041
 410015c:	2085883a 	add	r2,r4,r2
 4100160:	10933317 	ldw	r2,19660(r2)
 4100164:	1009883a 	mov	r4,r2
 4100168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 410016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 4100170:	0005313a 	rdctl	r2,ipending
 4100174:	e0bffb15 	stw	r2,-20(fp)
  return active;
 4100178:	e0bffb17 	ldw	r2,-20(fp)
 410017c:	00000706 	br	410019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
 4100180:	e0bffe17 	ldw	r2,-8(fp)
 4100184:	1085883a 	add	r2,r2,r2
 4100188:	e0bffe15 	stw	r2,-8(fp)
      i++;
 410018c:	e0bffd17 	ldw	r2,-12(fp)
 4100190:	10800044 	addi	r2,r2,1
 4100194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 4100198:	003fe406 	br	410012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 410019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 41001a0:	e0bfff17 	ldw	r2,-4(fp)
 41001a4:	103fde1e 	bne	r2,zero,4100120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 41001a8:	0001883a 	nop
}
 41001ac:	0001883a 	nop
 41001b0:	e037883a 	mov	sp,fp
 41001b4:	dfc00117 	ldw	ra,4(sp)
 41001b8:	df000017 	ldw	fp,0(sp)
 41001bc:	dec00204 	addi	sp,sp,8
 41001c0:	f800283a 	ret

041001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 41001c4:	defffb04 	addi	sp,sp,-20
 41001c8:	dfc00415 	stw	ra,16(sp)
 41001cc:	df000315 	stw	fp,12(sp)
 41001d0:	df000304 	addi	fp,sp,12
 41001d4:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 41001d8:	00bfffc4 	movi	r2,-1
 41001dc:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
 41001e0:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 41001e4:	d0a74b17 	ldw	r2,-25300(gp)
 41001e8:	10000726 	beq	r2,zero,4100208 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 41001ec:	d0a74b17 	ldw	r2,-25300(gp)
 41001f0:	e0ffff17 	ldw	r3,-4(fp)
 41001f4:	e1bffe17 	ldw	r6,-8(fp)
 41001f8:	e17ffd17 	ldw	r5,-12(fp)
 41001fc:	1809883a 	mov	r4,r3
 4100200:	103ee83a 	callr	r2
 4100204:	00000206 	br	4100210 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4100208:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 410020c:	0005883a 	mov	r2,zero
}
 4100210:	e037883a 	mov	sp,fp
 4100214:	dfc00117 	ldw	ra,4(sp)
 4100218:	df000017 	ldw	fp,0(sp)
 410021c:	dec00204 	addi	sp,sp,8
 4100220:	f800283a 	ret

Disassembly of section .text:

04100224 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4100224:	06c14034 	movhi	sp,1280
    ori sp, sp, %lo(__alt_stack_pointer)
 4100228:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 410022c:	06810474 	movhi	gp,1041
    ori gp, gp, %lo(_gp)
 4100230:	d6abdc14 	ori	gp,gp,44912
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4100234:	00810474 	movhi	r2,1041
    ori r2, r2, %lo(__bss_start)
 4100238:	10931814 	ori	r2,r2,19552

    movhi r3, %hi(__bss_end)
 410023c:	00c10474 	movhi	r3,1041
    ori r3, r3, %lo(__bss_end)
 4100240:	18d37214 	ori	r3,r3,19912

    beq r2, r3, 1f
 4100244:	10c00326 	beq	r2,r3,4100254 <_start+0x30>

0:
    stw zero, (r2)
 4100248:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 410024c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 4100250:	10fffd36 	bltu	r2,r3,4100248 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4100254:	410db780 	call	410db78 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4100258:	410dd180 	call	410dd18 <alt_main>

0410025c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 410025c:	003fff06 	br	410025c <alt_after_alt_main>

04100260 <main>:
alt_mutex_dev* matches_mutex;
altera_avalon_mailbox_dev* mbox_receive;
altera_avalon_mailbox_dev* mbox_send;

int main(void)
{
 4100260:	defffa04 	addi	sp,sp,-24
 4100264:	dfc00515 	stw	ra,20(sp)
 4100268:	df000415 	stw	fp,16(sp)
 410026c:	df000404 	addi	fp,sp,16
	alt_u32 message[2];
	alt_u32 consume_time;
	alt_u32 send_msg = ALL_DONE;
 4100270:	00800384 	movi	r2,14
 4100274:	e0bffc15 	stw	r2,-16(fp)

	// Get hardware mutex handle for paper and matches
	paper_mutex = altera_avalon_mutex_open(MUTEX_0_NAME);
 4100278:	01010474 	movhi	r4,1041
 410027c:	21030304 	addi	r4,r4,3084
 4100280:	410f7f40 	call	410f7f4 <altera_avalon_mutex_open>
 4100284:	d0a73c15 	stw	r2,-25360(gp)
	matches_mutex = altera_avalon_mutex_open(MUTEX_2_NAME);
 4100288:	01010474 	movhi	r4,1041
 410028c:	21030704 	addi	r4,r4,3100
 4100290:	410f7f40 	call	410f7f4 <altera_avalon_mutex_open>
 4100294:	d0a73d15 	stw	r2,-25356(gp)

	// Init the mailbox hps to fpga
	mbox_receive = altera_avalon_mailbox_open(MAILBOX_1_NAME, NULL, NULL);
 4100298:	000d883a 	mov	r6,zero
 410029c:	000b883a 	mov	r5,zero
 41002a0:	01010474 	movhi	r4,1041
 41002a4:	21030b04 	addi	r4,r4,3116
 41002a8:	410f13c0 	call	410f13c <altera_avalon_mailbox_open>
 41002ac:	d0a73e15 	stw	r2,-25352(gp)

	// Init the mailbox fpga to hps
	mbox_send = altera_avalon_mailbox_open(MAILBOX_4_NAME, NULL, NULL);
 41002b0:	000d883a 	mov	r6,zero
 41002b4:	000b883a 	mov	r5,zero
 41002b8:	01010474 	movhi	r4,1041
 41002bc:	21030f04 	addi	r4,r4,3132
 41002c0:	410f13c0 	call	410f13c <altera_avalon_mailbox_open>
 41002c4:	d0a73f15 	stw	r2,-25348(gp)

	while(1)
	{
		altera_avalon_mailbox_retrieve_poll(mbox_receive, message, 100);
 41002c8:	d0a73e17 	ldw	r2,-25352(gp)
 41002cc:	e0fffd04 	addi	r3,fp,-12
 41002d0:	01801904 	movi	r6,100
 41002d4:	180b883a 	mov	r5,r3
 41002d8:	1009883a 	mov	r4,r2
 41002dc:	410f6000 	call	410f600 <altera_avalon_mailbox_retrieve_poll>

		// Can I smoke my cig
		if (message[0] == MY_NEEDS)
 41002e0:	e0bffd17 	ldw	r2,-12(fp)
 41002e4:	10800098 	cmpnei	r2,r2,2
 41002e8:	10001f1e 	bne	r2,zero,4100368 <main+0x108>
		{
			// Acquire the mutex, setting the value to one
			altera_avalon_mutex_trylock(paper_mutex, 2);
 41002ec:	d0a73c17 	ldw	r2,-25360(gp)
 41002f0:	01400084 	movi	r5,2
 41002f4:	1009883a 	mov	r4,r2
 41002f8:	410f8b40 	call	410f8b4 <altera_avalon_mutex_trylock>
			altera_avalon_mutex_trylock(matches_mutex, 2);
 41002fc:	d0a73d17 	ldw	r2,-25356(gp)
 4100300:	01400084 	movi	r5,2
 4100304:	1009883a 	mov	r4,r2
 4100308:	410f8b40 	call	410f8b4 <altera_avalon_mutex_trylock>

				// Smoking my cigarette
				consume_time = rand() % 10 + 1;
 410030c:	41005a80 	call	41005a8 <rand>
 4100310:	01400284 	movi	r5,10
 4100314:	1009883a 	mov	r4,r2
 4100318:	41003f80 	call	41003f8 <__modsi3>
 410031c:	10800044 	addi	r2,r2,1
 4100320:	e0bfff15 	stw	r2,-4(fp)
				printf("Smoker with tobacco, time: %ld\n", consume_time);
 4100324:	e17fff17 	ldw	r5,-4(fp)
 4100328:	01010474 	movhi	r4,1041
 410032c:	21031304 	addi	r4,r4,3148
 4100330:	410055c0 	call	410055c <printf>

			// Release the mutex
			altera_avalon_mutex_unlock(paper_mutex);
 4100334:	d0a73c17 	ldw	r2,-25360(gp)
 4100338:	1009883a 	mov	r4,r2
 410033c:	410f8f40 	call	410f8f4 <altera_avalon_mutex_unlock>
			altera_avalon_mutex_unlock(matches_mutex);
 4100340:	d0a73d17 	ldw	r2,-25356(gp)
 4100344:	1009883a 	mov	r4,r2
 4100348:	410f8f40 	call	410f8f4 <altera_avalon_mutex_unlock>

			// Telling the agent that I'm done smoking
			altera_avalon_mailbox_send(mbox_send, &send_msg, 0, POLL);
 410034c:	d0a73f17 	ldw	r2,-25348(gp)
 4100350:	e0fffc04 	addi	r3,fp,-16
 4100354:	01c00044 	movi	r7,1
 4100358:	000d883a 	mov	r6,zero
 410035c:	180b883a 	mov	r5,r3
 4100360:	1009883a 	mov	r4,r2
 4100364:	410f4b00 	call	410f4b0 <altera_avalon_mailbox_send>
		}

		usleep(1000010);
 4100368:	010003f4 	movhi	r4,15
 410036c:	21109284 	addi	r4,r4,16970
 4100370:	410e0480 	call	410e048 <usleep>
		altera_avalon_mailbox_retrieve_poll(mbox_receive, message, 100);
 4100374:	003fd406 	br	41002c8 <main+0x68>

04100378 <__divsi3>:
 4100378:	20001a16 	blt	r4,zero,41003e4 <__divsi3+0x6c>
 410037c:	000f883a 	mov	r7,zero
 4100380:	2800020e 	bge	r5,zero,410038c <__divsi3+0x14>
 4100384:	014bc83a 	sub	r5,zero,r5
 4100388:	39c0005c 	xori	r7,r7,1
 410038c:	200d883a 	mov	r6,r4
 4100390:	00c00044 	movi	r3,1
 4100394:	2900092e 	bgeu	r5,r4,41003bc <__divsi3+0x44>
 4100398:	00800804 	movi	r2,32
 410039c:	00c00044 	movi	r3,1
 41003a0:	00000106 	br	41003a8 <__divsi3+0x30>
 41003a4:	10001226 	beq	r2,zero,41003f0 <__divsi3+0x78>
 41003a8:	294b883a 	add	r5,r5,r5
 41003ac:	10bfffc4 	addi	r2,r2,-1
 41003b0:	18c7883a 	add	r3,r3,r3
 41003b4:	293ffb36 	bltu	r5,r4,41003a4 <__divsi3+0x2c>
 41003b8:	18000d26 	beq	r3,zero,41003f0 <__divsi3+0x78>
 41003bc:	0005883a 	mov	r2,zero
 41003c0:	31400236 	bltu	r6,r5,41003cc <__divsi3+0x54>
 41003c4:	314dc83a 	sub	r6,r6,r5
 41003c8:	10c4b03a 	or	r2,r2,r3
 41003cc:	1806d07a 	srli	r3,r3,1
 41003d0:	280ad07a 	srli	r5,r5,1
 41003d4:	183ffa1e 	bne	r3,zero,41003c0 <__divsi3+0x48>
 41003d8:	38000126 	beq	r7,zero,41003e0 <__divsi3+0x68>
 41003dc:	0085c83a 	sub	r2,zero,r2
 41003e0:	f800283a 	ret
 41003e4:	0109c83a 	sub	r4,zero,r4
 41003e8:	01c00044 	movi	r7,1
 41003ec:	003fe406 	br	4100380 <__divsi3+0x8>
 41003f0:	0005883a 	mov	r2,zero
 41003f4:	003ff806 	br	41003d8 <__divsi3+0x60>

041003f8 <__modsi3>:
 41003f8:	20001916 	blt	r4,zero,4100460 <__modsi3+0x68>
 41003fc:	000f883a 	mov	r7,zero
 4100400:	2005883a 	mov	r2,r4
 4100404:	2800010e 	bge	r5,zero,410040c <__modsi3+0x14>
 4100408:	014bc83a 	sub	r5,zero,r5
 410040c:	00c00044 	movi	r3,1
 4100410:	2900092e 	bgeu	r5,r4,4100438 <__modsi3+0x40>
 4100414:	01800804 	movi	r6,32
 4100418:	00c00044 	movi	r3,1
 410041c:	00000106 	br	4100424 <__modsi3+0x2c>
 4100420:	30000d26 	beq	r6,zero,4100458 <__modsi3+0x60>
 4100424:	294b883a 	add	r5,r5,r5
 4100428:	31bfffc4 	addi	r6,r6,-1
 410042c:	18c7883a 	add	r3,r3,r3
 4100430:	293ffb36 	bltu	r5,r4,4100420 <__modsi3+0x28>
 4100434:	18000826 	beq	r3,zero,4100458 <__modsi3+0x60>
 4100438:	1806d07a 	srli	r3,r3,1
 410043c:	11400136 	bltu	r2,r5,4100444 <__modsi3+0x4c>
 4100440:	1145c83a 	sub	r2,r2,r5
 4100444:	280ad07a 	srli	r5,r5,1
 4100448:	183ffb1e 	bne	r3,zero,4100438 <__modsi3+0x40>
 410044c:	38000126 	beq	r7,zero,4100454 <__modsi3+0x5c>
 4100450:	0085c83a 	sub	r2,zero,r2
 4100454:	f800283a 	ret
 4100458:	2005883a 	mov	r2,r4
 410045c:	003ffb06 	br	410044c <__modsi3+0x54>
 4100460:	0109c83a 	sub	r4,zero,r4
 4100464:	01c00044 	movi	r7,1
 4100468:	003fe506 	br	4100400 <__modsi3+0x8>

0410046c <__udivsi3>:
 410046c:	200d883a 	mov	r6,r4
 4100470:	2900152e 	bgeu	r5,r4,41004c8 <__udivsi3+0x5c>
 4100474:	28001416 	blt	r5,zero,41004c8 <__udivsi3+0x5c>
 4100478:	00800804 	movi	r2,32
 410047c:	00c00044 	movi	r3,1
 4100480:	00000206 	br	410048c <__udivsi3+0x20>
 4100484:	10000e26 	beq	r2,zero,41004c0 <__udivsi3+0x54>
 4100488:	28000516 	blt	r5,zero,41004a0 <__udivsi3+0x34>
 410048c:	294b883a 	add	r5,r5,r5
 4100490:	10bfffc4 	addi	r2,r2,-1
 4100494:	18c7883a 	add	r3,r3,r3
 4100498:	293ffa36 	bltu	r5,r4,4100484 <__udivsi3+0x18>
 410049c:	18000826 	beq	r3,zero,41004c0 <__udivsi3+0x54>
 41004a0:	0005883a 	mov	r2,zero
 41004a4:	31400236 	bltu	r6,r5,41004b0 <__udivsi3+0x44>
 41004a8:	314dc83a 	sub	r6,r6,r5
 41004ac:	10c4b03a 	or	r2,r2,r3
 41004b0:	1806d07a 	srli	r3,r3,1
 41004b4:	280ad07a 	srli	r5,r5,1
 41004b8:	183ffa1e 	bne	r3,zero,41004a4 <__udivsi3+0x38>
 41004bc:	f800283a 	ret
 41004c0:	0005883a 	mov	r2,zero
 41004c4:	f800283a 	ret
 41004c8:	00c00044 	movi	r3,1
 41004cc:	003ff406 	br	41004a0 <__udivsi3+0x34>

041004d0 <__umodsi3>:
 41004d0:	2005883a 	mov	r2,r4
 41004d4:	2900132e 	bgeu	r5,r4,4100524 <__umodsi3+0x54>
 41004d8:	28001216 	blt	r5,zero,4100524 <__umodsi3+0x54>
 41004dc:	01800804 	movi	r6,32
 41004e0:	00c00044 	movi	r3,1
 41004e4:	00000206 	br	41004f0 <__umodsi3+0x20>
 41004e8:	30000c26 	beq	r6,zero,410051c <__umodsi3+0x4c>
 41004ec:	28000516 	blt	r5,zero,4100504 <__umodsi3+0x34>
 41004f0:	294b883a 	add	r5,r5,r5
 41004f4:	31bfffc4 	addi	r6,r6,-1
 41004f8:	18c7883a 	add	r3,r3,r3
 41004fc:	293ffa36 	bltu	r5,r4,41004e8 <__umodsi3+0x18>
 4100500:	18000626 	beq	r3,zero,410051c <__umodsi3+0x4c>
 4100504:	1806d07a 	srli	r3,r3,1
 4100508:	11400136 	bltu	r2,r5,4100510 <__umodsi3+0x40>
 410050c:	1145c83a 	sub	r2,r2,r5
 4100510:	280ad07a 	srli	r5,r5,1
 4100514:	183ffb1e 	bne	r3,zero,4100504 <__umodsi3+0x34>
 4100518:	f800283a 	ret
 410051c:	2005883a 	mov	r2,r4
 4100520:	f800283a 	ret
 4100524:	00c00044 	movi	r3,1
 4100528:	003ff606 	br	4100504 <__umodsi3+0x34>

0410052c <_printf_r>:
 410052c:	defffd04 	addi	sp,sp,-12
 4100530:	2805883a 	mov	r2,r5
 4100534:	dfc00015 	stw	ra,0(sp)
 4100538:	d9800115 	stw	r6,4(sp)
 410053c:	d9c00215 	stw	r7,8(sp)
 4100540:	21400217 	ldw	r5,8(r4)
 4100544:	d9c00104 	addi	r7,sp,4
 4100548:	100d883a 	mov	r6,r2
 410054c:	41006080 	call	4100608 <___vfprintf_internal_r>
 4100550:	dfc00017 	ldw	ra,0(sp)
 4100554:	dec00304 	addi	sp,sp,12
 4100558:	f800283a 	ret

0410055c <printf>:
 410055c:	defffc04 	addi	sp,sp,-16
 4100560:	dfc00015 	stw	ra,0(sp)
 4100564:	d9400115 	stw	r5,4(sp)
 4100568:	d9800215 	stw	r6,8(sp)
 410056c:	d9c00315 	stw	r7,12(sp)
 4100570:	00810474 	movhi	r2,1041
 4100574:	108bdd17 	ldw	r2,12148(r2)
 4100578:	200b883a 	mov	r5,r4
 410057c:	d9800104 	addi	r6,sp,4
 4100580:	11000217 	ldw	r4,8(r2)
 4100584:	410270c0 	call	410270c <__vfprintf_internal>
 4100588:	dfc00017 	ldw	ra,0(sp)
 410058c:	dec00404 	addi	sp,sp,16
 4100590:	f800283a 	ret

04100594 <srand>:
 4100594:	00810474 	movhi	r2,1041
 4100598:	108bdd17 	ldw	r2,12148(r2)
 410059c:	11002915 	stw	r4,164(r2)
 41005a0:	10002a15 	stw	zero,168(r2)
 41005a4:	f800283a 	ret

041005a8 <rand>:
 41005a8:	defffe04 	addi	sp,sp,-8
 41005ac:	00810474 	movhi	r2,1041
 41005b0:	dc000015 	stw	r16,0(sp)
 41005b4:	140bdd17 	ldw	r16,12148(r2)
 41005b8:	dfc00115 	stw	ra,4(sp)
 41005bc:	01932574 	movhi	r6,19605
 41005c0:	81002917 	ldw	r4,164(r16)
 41005c4:	81402a17 	ldw	r5,168(r16)
 41005c8:	01d614b4 	movhi	r7,22610
 41005cc:	319fcb44 	addi	r6,r6,32557
 41005d0:	39fd0b44 	addi	r7,r7,-3027
 41005d4:	410a1d80 	call	410a1d8 <__muldi3>
 41005d8:	11400044 	addi	r5,r2,1
 41005dc:	2885803a 	cmpltu	r2,r5,r2
 41005e0:	01200034 	movhi	r4,32768
 41005e4:	10c5883a 	add	r2,r2,r3
 41005e8:	213fffc4 	addi	r4,r4,-1
 41005ec:	80802a15 	stw	r2,168(r16)
 41005f0:	1104703a 	and	r2,r2,r4
 41005f4:	81402915 	stw	r5,164(r16)
 41005f8:	dfc00117 	ldw	ra,4(sp)
 41005fc:	dc000017 	ldw	r16,0(sp)
 4100600:	dec00204 	addi	sp,sp,8
 4100604:	f800283a 	ret

04100608 <___vfprintf_internal_r>:
 4100608:	deffbf04 	addi	sp,sp,-260
 410060c:	dfc04015 	stw	ra,256(sp)
 4100610:	dd803d15 	stw	r22,244(sp)
 4100614:	dcc03a15 	stw	r19,232(sp)
 4100618:	dc803915 	stw	r18,228(sp)
 410061c:	2027883a 	mov	r19,r4
 4100620:	2825883a 	mov	r18,r5
 4100624:	302d883a 	mov	r22,r6
 4100628:	d9c00615 	stw	r7,24(sp)
 410062c:	df003f15 	stw	fp,252(sp)
 4100630:	ddc03e15 	stw	r23,248(sp)
 4100634:	dd403c15 	stw	r21,240(sp)
 4100638:	dd003b15 	stw	r20,236(sp)
 410063c:	dc403815 	stw	r17,224(sp)
 4100640:	dc003715 	stw	r16,220(sp)
 4100644:	4104ecc0 	call	4104ecc <_localeconv_r>
 4100648:	10800017 	ldw	r2,0(r2)
 410064c:	1009883a 	mov	r4,r2
 4100650:	d8800d15 	stw	r2,52(sp)
 4100654:	4106f540 	call	4106f54 <strlen>
 4100658:	d8800b15 	stw	r2,44(sp)
 410065c:	98000226 	beq	r19,zero,4100668 <___vfprintf_internal_r+0x60>
 4100660:	98800e17 	ldw	r2,56(r19)
 4100664:	1001e026 	beq	r2,zero,4100de8 <___vfprintf_internal_r+0x7e0>
 4100668:	9080030b 	ldhu	r2,12(r18)
 410066c:	10c8000c 	andi	r3,r2,8192
 4100670:	1800061e 	bne	r3,zero,410068c <___vfprintf_internal_r+0x84>
 4100674:	90c01917 	ldw	r3,100(r18)
 4100678:	0137ffc4 	movi	r4,-8193
 410067c:	10880014 	ori	r2,r2,8192
 4100680:	1906703a 	and	r3,r3,r4
 4100684:	9080030d 	sth	r2,12(r18)
 4100688:	90c01915 	stw	r3,100(r18)
 410068c:	10c0020c 	andi	r3,r2,8
 4100690:	1800fc26 	beq	r3,zero,4100a84 <___vfprintf_internal_r+0x47c>
 4100694:	90c00417 	ldw	r3,16(r18)
 4100698:	1800fa26 	beq	r3,zero,4100a84 <___vfprintf_internal_r+0x47c>
 410069c:	1080068c 	andi	r2,r2,26
 41006a0:	10800298 	cmpnei	r2,r2,10
 41006a4:	1000ff26 	beq	r2,zero,4100aa4 <___vfprintf_internal_r+0x49c>
 41006a8:	d8802704 	addi	r2,sp,156
 41006ac:	b02f883a 	mov	r23,r22
 41006b0:	d8801a15 	stw	r2,104(sp)
 41006b4:	d8001c15 	stw	zero,112(sp)
 41006b8:	d8001b15 	stw	zero,108(sp)
 41006bc:	d8000815 	stw	zero,32(sp)
 41006c0:	d8000915 	stw	zero,36(sp)
 41006c4:	d8000a15 	stw	zero,40(sp)
 41006c8:	d8000c15 	stw	zero,48(sp)
 41006cc:	d8001015 	stw	zero,64(sp)
 41006d0:	d8000515 	stw	zero,20(sp)
 41006d4:	102d883a 	mov	r22,r2
 41006d8:	b8800007 	ldb	r2,0(r23)
 41006dc:	1000d726 	beq	r2,zero,4100a3c <___vfprintf_internal_r+0x434>
 41006e0:	b821883a 	mov	r16,r23
 41006e4:	00000306 	br	41006f4 <___vfprintf_internal_r+0xec>
 41006e8:	80800047 	ldb	r2,1(r16)
 41006ec:	84000044 	addi	r16,r16,1
 41006f0:	10012226 	beq	r2,zero,4100b7c <___vfprintf_internal_r+0x574>
 41006f4:	10800958 	cmpnei	r2,r2,37
 41006f8:	103ffb1e 	bne	r2,zero,41006e8 <___vfprintf_internal_r+0xe0>
 41006fc:	85e3c83a 	sub	r17,r16,r23
 4100700:	85c1201e 	bne	r16,r23,4100b84 <___vfprintf_internal_r+0x57c>
 4100704:	80800003 	ldbu	r2,0(r16)
 4100708:	10803fcc 	andi	r2,r2,255
 410070c:	1080201c 	xori	r2,r2,128
 4100710:	10bfe004 	addi	r2,r2,-128
 4100714:	1000c926 	beq	r2,zero,4100a3c <___vfprintf_internal_r+0x434>
 4100718:	82c00047 	ldb	r11,1(r16)
 410071c:	85c00044 	addi	r23,r16,1
 4100720:	d8001345 	stb	zero,77(sp)
 4100724:	0009883a 	mov	r4,zero
 4100728:	000b883a 	mov	r5,zero
 410072c:	023fffc4 	movi	r8,-1
 4100730:	0021883a 	mov	r16,zero
 4100734:	0019883a 	mov	r12,zero
 4100738:	bdc00044 	addi	r23,r23,1
 410073c:	5839883a 	mov	fp,r11
 4100740:	e0bff804 	addi	r2,fp,-32
 4100744:	10c01668 	cmpgeui	r3,r2,89
 4100748:	18006c1e 	bne	r3,zero,41008fc <___vfprintf_internal_r+0x2f4>
 410074c:	100490ba 	slli	r2,r2,2
 4100750:	00c10434 	movhi	r3,1040
 4100754:	10c7883a 	add	r3,r2,r3
 4100758:	1881d817 	ldw	r2,1888(r3)
 410075c:	1000683a 	jmp	r2
 4100760:	041010b0 	cmpltui	r16,zero,16450
 4100764:	041008fc 	xorhi	r16,zero,16419
 4100768:	041008fc 	xorhi	r16,zero,16419
 410076c:	041010a4 	muli	r16,zero,16450
 4100770:	041008fc 	xorhi	r16,zero,16419
 4100774:	041008fc 	xorhi	r16,zero,16419
 4100778:	041008fc 	xorhi	r16,zero,16419
 410077c:	041008fc 	xorhi	r16,zero,16419
 4100780:	041008fc 	xorhi	r16,zero,16419
 4100784:	041008fc 	xorhi	r16,zero,16419
 4100788:	0410107c 	xorhi	r16,zero,16449
 410078c:	0410106c 	andhi	r16,zero,16449
 4100790:	041008fc 	xorhi	r16,zero,16419
 4100794:	04101054 	movui	r16,16449
 4100798:	04101008 	cmpgei	r16,zero,16448
 410079c:	041008fc 	xorhi	r16,zero,16419
 41007a0:	04100ffc 	xorhi	r16,zero,16447
 41007a4:	041008c4 	movi	r16,16419
 41007a8:	041008c4 	movi	r16,16419
 41007ac:	041008c4 	movi	r16,16419
 41007b0:	041008c4 	movi	r16,16419
 41007b4:	041008c4 	movi	r16,16419
 41007b8:	041008c4 	movi	r16,16419
 41007bc:	041008c4 	movi	r16,16419
 41007c0:	041008c4 	movi	r16,16419
 41007c4:	041008c4 	movi	r16,16419
 41007c8:	041008fc 	xorhi	r16,zero,16419
 41007cc:	041008fc 	xorhi	r16,zero,16419
 41007d0:	041008fc 	xorhi	r16,zero,16419
 41007d4:	041008fc 	xorhi	r16,zero,16419
 41007d8:	041008fc 	xorhi	r16,zero,16419
 41007dc:	041008fc 	xorhi	r16,zero,16419
 41007e0:	041008fc 	xorhi	r16,zero,16419
 41007e4:	041008fc 	xorhi	r16,zero,16419
 41007e8:	041008fc 	xorhi	r16,zero,16419
 41007ec:	041008fc 	xorhi	r16,zero,16419
 41007f0:	04100f14 	movui	r16,16444
 41007f4:	04100be0 	cmpeqi	r16,zero,16431
 41007f8:	041008fc 	xorhi	r16,zero,16419
 41007fc:	04100be0 	cmpeqi	r16,zero,16431
 4100800:	041008fc 	xorhi	r16,zero,16419
 4100804:	041008fc 	xorhi	r16,zero,16419
 4100808:	041008fc 	xorhi	r16,zero,16419
 410080c:	041008fc 	xorhi	r16,zero,16419
 4100810:	04100f08 	cmpgei	r16,zero,16444
 4100814:	041008fc 	xorhi	r16,zero,16419
 4100818:	041008fc 	xorhi	r16,zero,16419
 410081c:	04100b14 	movui	r16,16428
 4100820:	041008fc 	xorhi	r16,zero,16419
 4100824:	041008fc 	xorhi	r16,zero,16419
 4100828:	041008fc 	xorhi	r16,zero,16419
 410082c:	041008fc 	xorhi	r16,zero,16419
 4100830:	041008fc 	xorhi	r16,zero,16419
 4100834:	04100aec 	andhi	r16,zero,16427
 4100838:	041008fc 	xorhi	r16,zero,16419
 410083c:	041008fc 	xorhi	r16,zero,16419
 4100840:	04100ec0 	call	4100ec <__alt_mem_sdram_controller_0-0x3beff14>
 4100844:	041008fc 	xorhi	r16,zero,16419
 4100848:	041008fc 	xorhi	r16,zero,16419
 410084c:	041008fc 	xorhi	r16,zero,16419
 4100850:	041008fc 	xorhi	r16,zero,16419
 4100854:	041008fc 	xorhi	r16,zero,16419
 4100858:	041008fc 	xorhi	r16,zero,16419
 410085c:	041008fc 	xorhi	r16,zero,16419
 4100860:	041008fc 	xorhi	r16,zero,16419
 4100864:	041008fc 	xorhi	r16,zero,16419
 4100868:	041008fc 	xorhi	r16,zero,16419
 410086c:	04100e98 	cmpnei	r16,zero,16442
 4100870:	04100df4 	movhi	r16,16439
 4100874:	04100be0 	cmpeqi	r16,zero,16431
 4100878:	04100be0 	cmpeqi	r16,zero,16431
 410087c:	04100be0 	cmpeqi	r16,zero,16431
 4100880:	04100e8c 	andi	r16,zero,16442
 4100884:	04100df4 	movhi	r16,16439
 4100888:	041008fc 	xorhi	r16,zero,16419
 410088c:	041008fc 	xorhi	r16,zero,16419
 4100890:	04101204 	movi	r16,16456
 4100894:	041008fc 	xorhi	r16,zero,16419
 4100898:	041011c8 	cmpgei	r16,zero,16455
 410089c:	04100b18 	cmpnei	r16,zero,16428
 41008a0:	04101188 	cmpgei	r16,zero,16454
 41008a4:	0410117c 	xorhi	r16,zero,16453
 41008a8:	041008fc 	xorhi	r16,zero,16419
 41008ac:	04101124 	muli	r16,zero,16452
 41008b0:	041008fc 	xorhi	r16,zero,16419
 41008b4:	04100af0 	cmpltui	r16,zero,16427
 41008b8:	041008fc 	xorhi	r16,zero,16419
 41008bc:	041008fc 	xorhi	r16,zero,16419
 41008c0:	041010dc 	xori	r16,zero,16451
 41008c4:	0021883a 	mov	r16,zero
 41008c8:	e0fff404 	addi	r3,fp,-48
 41008cc:	800490ba 	slli	r2,r16,2
 41008d0:	bf000007 	ldb	fp,0(r23)
 41008d4:	bdc00044 	addi	r23,r23,1
 41008d8:	1421883a 	add	r16,r2,r16
 41008dc:	8421883a 	add	r16,r16,r16
 41008e0:	1c21883a 	add	r16,r3,r16
 41008e4:	e0fff404 	addi	r3,fp,-48
 41008e8:	188002b0 	cmpltui	r2,r3,10
 41008ec:	103ff71e 	bne	r2,zero,41008cc <___vfprintf_internal_r+0x2c4>
 41008f0:	e0bff804 	addi	r2,fp,-32
 41008f4:	10c01668 	cmpgeui	r3,r2,89
 41008f8:	183f9426 	beq	r3,zero,410074c <___vfprintf_internal_r+0x144>
 41008fc:	21003fcc 	andi	r4,r4,255
 4100900:	2006871e 	bne	r4,zero,4102320 <___vfprintf_internal_r+0x1d18>
 4100904:	e0004d26 	beq	fp,zero,4100a3c <___vfprintf_internal_r+0x434>
 4100908:	df001d05 	stb	fp,116(sp)
 410090c:	d8001345 	stb	zero,77(sp)
 4100910:	05000044 	movi	r20,1
 4100914:	05400044 	movi	r21,1
 4100918:	dc401d04 	addi	r17,sp,116
 410091c:	db000415 	stw	r12,16(sp)
 4100920:	0011883a 	mov	r8,zero
 4100924:	d8000715 	stw	zero,28(sp)
 4100928:	d8800417 	ldw	r2,16(sp)
 410092c:	1380008c 	andi	r14,r2,2
 4100930:	70000126 	beq	r14,zero,4100938 <___vfprintf_internal_r+0x330>
 4100934:	a5000084 	addi	r20,r20,2
 4100938:	d8800417 	ldw	r2,16(sp)
 410093c:	d8c01c17 	ldw	r3,112(sp)
 4100940:	1340210c 	andi	r13,r2,132
 4100944:	6800021e 	bne	r13,zero,4100950 <___vfprintf_internal_r+0x348>
 4100948:	850fc83a 	sub	r7,r16,r20
 410094c:	01c34516 	blt	zero,r7,4101664 <___vfprintf_internal_r+0x105c>
 4100950:	d8801347 	ldb	r2,77(sp)
 4100954:	10000c26 	beq	r2,zero,4100988 <___vfprintf_internal_r+0x380>
 4100958:	d8801b17 	ldw	r2,108(sp)
 410095c:	d9001344 	addi	r4,sp,77
 4100960:	18c00044 	addi	r3,r3,1
 4100964:	10800044 	addi	r2,r2,1
 4100968:	b1000015 	stw	r4,0(r22)
 410096c:	01000044 	movi	r4,1
 4100970:	d8801b15 	stw	r2,108(sp)
 4100974:	b1000115 	stw	r4,4(r22)
 4100978:	d8c01c15 	stw	r3,112(sp)
 410097c:	10800208 	cmpgei	r2,r2,8
 4100980:	1003791e 	bne	r2,zero,4101768 <___vfprintf_internal_r+0x1160>
 4100984:	b5800204 	addi	r22,r22,8
 4100988:	70000c26 	beq	r14,zero,41009bc <___vfprintf_internal_r+0x3b4>
 410098c:	d8801b17 	ldw	r2,108(sp)
 4100990:	d9001384 	addi	r4,sp,78
 4100994:	18c00084 	addi	r3,r3,2
 4100998:	10800044 	addi	r2,r2,1
 410099c:	b1000015 	stw	r4,0(r22)
 41009a0:	01000084 	movi	r4,2
 41009a4:	d8801b15 	stw	r2,108(sp)
 41009a8:	b1000115 	stw	r4,4(r22)
 41009ac:	d8c01c15 	stw	r3,112(sp)
 41009b0:	10800208 	cmpgei	r2,r2,8
 41009b4:	10037a1e 	bne	r2,zero,41017a0 <___vfprintf_internal_r+0x1198>
 41009b8:	b5800204 	addi	r22,r22,8
 41009bc:	6b402018 	cmpnei	r13,r13,128
 41009c0:	68025b26 	beq	r13,zero,4101330 <___vfprintf_internal_r+0xd28>
 41009c4:	4551c83a 	sub	r8,r8,r21
 41009c8:	02029316 	blt	zero,r8,4101418 <___vfprintf_internal_r+0xe10>
 41009cc:	d8800417 	ldw	r2,16(sp)
 41009d0:	1080400c 	andi	r2,r2,256
 41009d4:	1002101e 	bne	r2,zero,4101218 <___vfprintf_internal_r+0xc10>
 41009d8:	d8801b17 	ldw	r2,108(sp)
 41009dc:	1d47883a 	add	r3,r3,r21
 41009e0:	b4400015 	stw	r17,0(r22)
 41009e4:	10800044 	addi	r2,r2,1
 41009e8:	b5400115 	stw	r21,4(r22)
 41009ec:	d8801b15 	stw	r2,108(sp)
 41009f0:	d8c01c15 	stw	r3,112(sp)
 41009f4:	10800208 	cmpgei	r2,r2,8
 41009f8:	1003101e 	bne	r2,zero,410163c <___vfprintf_internal_r+0x1034>
 41009fc:	b5800204 	addi	r22,r22,8
 4100a00:	d8800417 	ldw	r2,16(sp)
 4100a04:	1440010c 	andi	r17,r2,4
 4100a08:	88000226 	beq	r17,zero,4100a14 <___vfprintf_internal_r+0x40c>
 4100a0c:	8523c83a 	sub	r17,r16,r20
 4100a10:	0440c616 	blt	zero,r17,4100d2c <___vfprintf_internal_r+0x724>
 4100a14:	8500010e 	bge	r16,r20,4100a1c <___vfprintf_internal_r+0x414>
 4100a18:	a021883a 	mov	r16,r20
 4100a1c:	d8800517 	ldw	r2,20(sp)
 4100a20:	1405883a 	add	r2,r2,r16
 4100a24:	d8800515 	stw	r2,20(sp)
 4100a28:	1802c21e 	bne	r3,zero,4101534 <___vfprintf_internal_r+0xf2c>
 4100a2c:	b8800007 	ldb	r2,0(r23)
 4100a30:	d8001b15 	stw	zero,108(sp)
 4100a34:	dd802704 	addi	r22,sp,156
 4100a38:	103f291e 	bne	r2,zero,41006e0 <___vfprintf_internal_r+0xd8>
 4100a3c:	d8801c17 	ldw	r2,112(sp)
 4100a40:	1006391e 	bne	r2,zero,4102328 <___vfprintf_internal_r+0x1d20>
 4100a44:	9080030b 	ldhu	r2,12(r18)
 4100a48:	1080100c 	andi	r2,r2,64
 4100a4c:	1006cf1e 	bne	r2,zero,410258c <___vfprintf_internal_r+0x1f84>
 4100a50:	d8800517 	ldw	r2,20(sp)
 4100a54:	dfc04017 	ldw	ra,256(sp)
 4100a58:	df003f17 	ldw	fp,252(sp)
 4100a5c:	ddc03e17 	ldw	r23,248(sp)
 4100a60:	dd803d17 	ldw	r22,244(sp)
 4100a64:	dd403c17 	ldw	r21,240(sp)
 4100a68:	dd003b17 	ldw	r20,236(sp)
 4100a6c:	dcc03a17 	ldw	r19,232(sp)
 4100a70:	dc803917 	ldw	r18,228(sp)
 4100a74:	dc403817 	ldw	r17,224(sp)
 4100a78:	dc003717 	ldw	r16,220(sp)
 4100a7c:	dec04104 	addi	sp,sp,260
 4100a80:	f800283a 	ret
 4100a84:	900b883a 	mov	r5,r18
 4100a88:	9809883a 	mov	r4,r19
 4100a8c:	41027e80 	call	41027e8 <__swsetup_r>
 4100a90:	1006be1e 	bne	r2,zero,410258c <___vfprintf_internal_r+0x1f84>
 4100a94:	9080030b 	ldhu	r2,12(r18)
 4100a98:	1080068c 	andi	r2,r2,26
 4100a9c:	10800298 	cmpnei	r2,r2,10
 4100aa0:	103f011e 	bne	r2,zero,41006a8 <___vfprintf_internal_r+0xa0>
 4100aa4:	9080038f 	ldh	r2,14(r18)
 4100aa8:	103eff16 	blt	r2,zero,41006a8 <___vfprintf_internal_r+0xa0>
 4100aac:	d9c00617 	ldw	r7,24(sp)
 4100ab0:	b00d883a 	mov	r6,r22
 4100ab4:	900b883a 	mov	r5,r18
 4100ab8:	9809883a 	mov	r4,r19
 4100abc:	dfc04017 	ldw	ra,256(sp)
 4100ac0:	df003f17 	ldw	fp,252(sp)
 4100ac4:	ddc03e17 	ldw	r23,248(sp)
 4100ac8:	dd803d17 	ldw	r22,244(sp)
 4100acc:	dd403c17 	ldw	r21,240(sp)
 4100ad0:	dd003b17 	ldw	r20,236(sp)
 4100ad4:	dcc03a17 	ldw	r19,232(sp)
 4100ad8:	dc803917 	ldw	r18,228(sp)
 4100adc:	dc403817 	ldw	r17,224(sp)
 4100ae0:	dc003717 	ldw	r16,220(sp)
 4100ae4:	dec04104 	addi	sp,sp,260
 4100ae8:	41027281 	jmpi	4102728 <__sbprintf>
 4100aec:	63000414 	ori	r12,r12,16
 4100af0:	6080080c 	andi	r2,r12,32
 4100af4:	10008126 	beq	r2,zero,4100cfc <___vfprintf_internal_r+0x6f4>
 4100af8:	d8c00617 	ldw	r3,24(sp)
 4100afc:	00800044 	movi	r2,1
 4100b00:	1d000017 	ldw	r20,0(r3)
 4100b04:	1d400117 	ldw	r21,4(r3)
 4100b08:	18c00204 	addi	r3,r3,8
 4100b0c:	d8c00615 	stw	r3,24(sp)
 4100b10:	00000906 	br	4100b38 <___vfprintf_internal_r+0x530>
 4100b14:	63000414 	ori	r12,r12,16
 4100b18:	6080080c 	andi	r2,r12,32
 4100b1c:	10006b26 	beq	r2,zero,4100ccc <___vfprintf_internal_r+0x6c4>
 4100b20:	d8c00617 	ldw	r3,24(sp)
 4100b24:	0005883a 	mov	r2,zero
 4100b28:	1d000017 	ldw	r20,0(r3)
 4100b2c:	1d400117 	ldw	r21,4(r3)
 4100b30:	18c00204 	addi	r3,r3,8
 4100b34:	d8c00615 	stw	r3,24(sp)
 4100b38:	d8001345 	stb	zero,77(sp)
 4100b3c:	40ffffe0 	cmpeqi	r3,r8,-1
 4100b40:	001b883a 	mov	r13,zero
 4100b44:	18010e1e 	bne	r3,zero,4100f80 <___vfprintf_internal_r+0x978>
 4100b48:	047fdfc4 	movi	r17,-129
 4100b4c:	6448703a 	and	r4,r12,r17
 4100b50:	a546b03a 	or	r3,r20,r21
 4100b54:	d9000415 	stw	r4,16(sp)
 4100b58:	1802c01e 	bne	r3,zero,410165c <___vfprintf_internal_r+0x1054>
 4100b5c:	40025f1e 	bne	r8,zero,41014dc <___vfprintf_internal_r+0xed4>
 4100b60:	1003751e 	bne	r2,zero,4101938 <___vfprintf_internal_r+0x1330>
 4100b64:	6540004c 	andi	r21,r12,1
 4100b68:	a803b026 	beq	r21,zero,4101a2c <___vfprintf_internal_r+0x1424>
 4100b6c:	00800c04 	movi	r2,48
 4100b70:	d88026c5 	stb	r2,155(sp)
 4100b74:	dc4026c4 	addi	r17,sp,155
 4100b78:	0000ba06 	br	4100e64 <___vfprintf_internal_r+0x85c>
 4100b7c:	85e3c83a 	sub	r17,r16,r23
 4100b80:	85ffae26 	beq	r16,r23,4100a3c <___vfprintf_internal_r+0x434>
 4100b84:	d8c01c17 	ldw	r3,112(sp)
 4100b88:	d8801b17 	ldw	r2,108(sp)
 4100b8c:	b5c00015 	stw	r23,0(r22)
 4100b90:	1c47883a 	add	r3,r3,r17
 4100b94:	10800044 	addi	r2,r2,1
 4100b98:	d8801b15 	stw	r2,108(sp)
 4100b9c:	b4400115 	stw	r17,4(r22)
 4100ba0:	d8c01c15 	stw	r3,112(sp)
 4100ba4:	10800208 	cmpgei	r2,r2,8
 4100ba8:	1000061e 	bne	r2,zero,4100bc4 <___vfprintf_internal_r+0x5bc>
 4100bac:	b5800204 	addi	r22,r22,8
 4100bb0:	d8c00517 	ldw	r3,20(sp)
 4100bb4:	80800003 	ldbu	r2,0(r16)
 4100bb8:	1c47883a 	add	r3,r3,r17
 4100bbc:	d8c00515 	stw	r3,20(sp)
 4100bc0:	003ed106 	br	4100708 <___vfprintf_internal_r+0x100>
 4100bc4:	d9801a04 	addi	r6,sp,104
 4100bc8:	900b883a 	mov	r5,r18
 4100bcc:	9809883a 	mov	r4,r19
 4100bd0:	41070e00 	call	41070e0 <__sprint_r>
 4100bd4:	103f9b1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4100bd8:	dd802704 	addi	r22,sp,156
 4100bdc:	003ff406 	br	4100bb0 <___vfprintf_internal_r+0x5a8>
 4100be0:	21003fcc 	andi	r4,r4,255
 4100be4:	2006671e 	bne	r4,zero,4102584 <___vfprintf_internal_r+0x1f7c>
 4100be8:	d8c00617 	ldw	r3,24(sp)
 4100bec:	6080020c 	andi	r2,r12,8
 4100bf0:	19000204 	addi	r4,r3,8
 4100bf4:	d9000e15 	stw	r4,56(sp)
 4100bf8:	1003a71e 	bne	r2,zero,4101a98 <___vfprintf_internal_r+0x1490>
 4100bfc:	d8800617 	ldw	r2,24(sp)
 4100c00:	10c00017 	ldw	r3,0(r2)
 4100c04:	10800117 	ldw	r2,4(r2)
 4100c08:	d8c00915 	stw	r3,36(sp)
 4100c0c:	d8800a15 	stw	r2,40(sp)
 4100c10:	dd400a17 	ldw	r21,40(sp)
 4100c14:	dd000917 	ldw	r20,36(sp)
 4100c18:	00a00034 	movhi	r2,32768
 4100c1c:	10bfffc4 	addi	r2,r2,-1
 4100c20:	a8a2703a 	and	r17,r21,r2
 4100c24:	01dffc34 	movhi	r7,32752
 4100c28:	01bfffc4 	movi	r6,-1
 4100c2c:	39ffffc4 	addi	r7,r7,-1
 4100c30:	a009883a 	mov	r4,r20
 4100c34:	880b883a 	mov	r5,r17
 4100c38:	da000615 	stw	r8,24(sp)
 4100c3c:	db000415 	stw	r12,16(sp)
 4100c40:	410d3b80 	call	410d3b8 <__unorddf2>
 4100c44:	db000417 	ldw	r12,16(sp)
 4100c48:	da000617 	ldw	r8,24(sp)
 4100c4c:	1004641e 	bne	r2,zero,4101de0 <___vfprintf_internal_r+0x17d8>
 4100c50:	01dffc34 	movhi	r7,32752
 4100c54:	01bfffc4 	movi	r6,-1
 4100c58:	39ffffc4 	addi	r7,r7,-1
 4100c5c:	a009883a 	mov	r4,r20
 4100c60:	880b883a 	mov	r5,r17
 4100c64:	410c2700 	call	410c270 <__ledf2>
 4100c68:	db000417 	ldw	r12,16(sp)
 4100c6c:	da000617 	ldw	r8,24(sp)
 4100c70:	00845b0e 	bge	zero,r2,4101de0 <___vfprintf_internal_r+0x17d8>
 4100c74:	000d883a 	mov	r6,zero
 4100c78:	000f883a 	mov	r7,zero
 4100c7c:	a009883a 	mov	r4,r20
 4100c80:	a80b883a 	mov	r5,r21
 4100c84:	410c2700 	call	410c270 <__ledf2>
 4100c88:	db000417 	ldw	r12,16(sp)
 4100c8c:	10059116 	blt	r2,zero,41022d4 <___vfprintf_internal_r+0x1ccc>
 4100c90:	db401343 	ldbu	r13,77(sp)
 4100c94:	e0801210 	cmplti	r2,fp,72
 4100c98:	1005391e 	bne	r2,zero,4102180 <___vfprintf_internal_r+0x1b78>
 4100c9c:	04410474 	movhi	r17,1041
 4100ca0:	8c431c04 	addi	r17,r17,3184
 4100ca4:	00bfdfc4 	movi	r2,-129
 4100ca8:	6084703a 	and	r2,r12,r2
 4100cac:	d8800415 	stw	r2,16(sp)
 4100cb0:	d8800e17 	ldw	r2,56(sp)
 4100cb4:	050000c4 	movi	r20,3
 4100cb8:	054000c4 	movi	r21,3
 4100cbc:	d8800615 	stw	r2,24(sp)
 4100cc0:	0011883a 	mov	r8,zero
 4100cc4:	d8000715 	stw	zero,28(sp)
 4100cc8:	00006a06 	br	4100e74 <___vfprintf_internal_r+0x86c>
 4100ccc:	d9000617 	ldw	r4,24(sp)
 4100cd0:	6080040c 	andi	r2,r12,16
 4100cd4:	20c00104 	addi	r3,r4,4
 4100cd8:	10036a1e 	bne	r2,zero,4101a84 <___vfprintf_internal_r+0x147c>
 4100cdc:	6080100c 	andi	r2,r12,64
 4100ce0:	10052126 	beq	r2,zero,4102168 <___vfprintf_internal_r+0x1b60>
 4100ce4:	d8800617 	ldw	r2,24(sp)
 4100ce8:	002b883a 	mov	r21,zero
 4100cec:	d8c00615 	stw	r3,24(sp)
 4100cf0:	1500000b 	ldhu	r20,0(r2)
 4100cf4:	0005883a 	mov	r2,zero
 4100cf8:	003f8f06 	br	4100b38 <___vfprintf_internal_r+0x530>
 4100cfc:	d9000617 	ldw	r4,24(sp)
 4100d00:	6080040c 	andi	r2,r12,16
 4100d04:	20c00104 	addi	r3,r4,4
 4100d08:	1003501e 	bne	r2,zero,4101a4c <___vfprintf_internal_r+0x1444>
 4100d0c:	6080100c 	andi	r2,r12,64
 4100d10:	10055926 	beq	r2,zero,4102278 <___vfprintf_internal_r+0x1c70>
 4100d14:	d8800617 	ldw	r2,24(sp)
 4100d18:	002b883a 	mov	r21,zero
 4100d1c:	d8c00615 	stw	r3,24(sp)
 4100d20:	1500000b 	ldhu	r20,0(r2)
 4100d24:	00800044 	movi	r2,1
 4100d28:	003f8306 	br	4100b38 <___vfprintf_internal_r+0x530>
 4100d2c:	03010474 	movhi	r12,1041
 4100d30:	89000450 	cmplti	r4,r17,17
 4100d34:	d8801b17 	ldw	r2,108(sp)
 4100d38:	63033004 	addi	r12,r12,3264
 4100d3c:	20001b1e 	bne	r4,zero,4100dac <___vfprintf_internal_r+0x7a4>
 4100d40:	05400404 	movi	r21,16
 4100d44:	6039883a 	mov	fp,r12
 4100d48:	00000406 	br	4100d5c <___vfprintf_internal_r+0x754>
 4100d4c:	8c7ffc04 	addi	r17,r17,-16
 4100d50:	89000448 	cmpgei	r4,r17,17
 4100d54:	b5800204 	addi	r22,r22,8
 4100d58:	20001326 	beq	r4,zero,4100da8 <___vfprintf_internal_r+0x7a0>
 4100d5c:	10800044 	addi	r2,r2,1
 4100d60:	18c00404 	addi	r3,r3,16
 4100d64:	b7000015 	stw	fp,0(r22)
 4100d68:	b5400115 	stw	r21,4(r22)
 4100d6c:	d8c01c15 	stw	r3,112(sp)
 4100d70:	d8801b15 	stw	r2,108(sp)
 4100d74:	11000208 	cmpgei	r4,r2,8
 4100d78:	203ff426 	beq	r4,zero,4100d4c <___vfprintf_internal_r+0x744>
 4100d7c:	d9801a04 	addi	r6,sp,104
 4100d80:	900b883a 	mov	r5,r18
 4100d84:	9809883a 	mov	r4,r19
 4100d88:	41070e00 	call	41070e0 <__sprint_r>
 4100d8c:	103f2d1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4100d90:	8c7ffc04 	addi	r17,r17,-16
 4100d94:	89000448 	cmpgei	r4,r17,17
 4100d98:	d8c01c17 	ldw	r3,112(sp)
 4100d9c:	d8801b17 	ldw	r2,108(sp)
 4100da0:	dd802704 	addi	r22,sp,156
 4100da4:	203fed1e 	bne	r4,zero,4100d5c <___vfprintf_internal_r+0x754>
 4100da8:	e019883a 	mov	r12,fp
 4100dac:	10800044 	addi	r2,r2,1
 4100db0:	1c47883a 	add	r3,r3,r17
 4100db4:	d8801b15 	stw	r2,108(sp)
 4100db8:	b3000015 	stw	r12,0(r22)
 4100dbc:	b4400115 	stw	r17,4(r22)
 4100dc0:	d8c01c15 	stw	r3,112(sp)
 4100dc4:	10800210 	cmplti	r2,r2,8
 4100dc8:	103f121e 	bne	r2,zero,4100a14 <___vfprintf_internal_r+0x40c>
 4100dcc:	d9801a04 	addi	r6,sp,104
 4100dd0:	900b883a 	mov	r5,r18
 4100dd4:	9809883a 	mov	r4,r19
 4100dd8:	41070e00 	call	41070e0 <__sprint_r>
 4100ddc:	103f191e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4100de0:	d8c01c17 	ldw	r3,112(sp)
 4100de4:	003f0b06 	br	4100a14 <___vfprintf_internal_r+0x40c>
 4100de8:	9809883a 	mov	r4,r19
 4100dec:	41049240 	call	4104924 <__sinit>
 4100df0:	003e1d06 	br	4100668 <___vfprintf_internal_r+0x60>
 4100df4:	21003fcc 	andi	r4,r4,255
 4100df8:	2005de1e 	bne	r4,zero,4102574 <___vfprintf_internal_r+0x1f6c>
 4100dfc:	6080080c 	andi	r2,r12,32
 4100e00:	10004926 	beq	r2,zero,4100f28 <___vfprintf_internal_r+0x920>
 4100e04:	d8c00617 	ldw	r3,24(sp)
 4100e08:	18800117 	ldw	r2,4(r3)
 4100e0c:	1d000017 	ldw	r20,0(r3)
 4100e10:	18c00204 	addi	r3,r3,8
 4100e14:	d8c00615 	stw	r3,24(sp)
 4100e18:	102b883a 	mov	r21,r2
 4100e1c:	10004e16 	blt	r2,zero,4100f58 <___vfprintf_internal_r+0x950>
 4100e20:	40bfffd8 	cmpnei	r2,r8,-1
 4100e24:	db401343 	ldbu	r13,77(sp)
 4100e28:	10000626 	beq	r2,zero,4100e44 <___vfprintf_internal_r+0x83c>
 4100e2c:	047fdfc4 	movi	r17,-129
 4100e30:	6446703a 	and	r3,r12,r17
 4100e34:	a544b03a 	or	r2,r20,r21
 4100e38:	d8c00415 	stw	r3,16(sp)
 4100e3c:	1002bd26 	beq	r2,zero,4101934 <___vfprintf_internal_r+0x132c>
 4100e40:	db000417 	ldw	r12,16(sp)
 4100e44:	a803701e 	bne	r21,zero,4101c08 <___vfprintf_internal_r+0x1600>
 4100e48:	a08002a8 	cmpgeui	r2,r20,10
 4100e4c:	10036e1e 	bne	r2,zero,4101c08 <___vfprintf_internal_r+0x1600>
 4100e50:	a5000c04 	addi	r20,r20,48
 4100e54:	dd0026c5 	stb	r20,155(sp)
 4100e58:	db000415 	stw	r12,16(sp)
 4100e5c:	05400044 	movi	r21,1
 4100e60:	dc4026c4 	addi	r17,sp,155
 4100e64:	4029883a 	mov	r20,r8
 4100e68:	4540010e 	bge	r8,r21,4100e70 <___vfprintf_internal_r+0x868>
 4100e6c:	a829883a 	mov	r20,r21
 4100e70:	d8000715 	stw	zero,28(sp)
 4100e74:	6b403fcc 	andi	r13,r13,255
 4100e78:	6b40201c 	xori	r13,r13,128
 4100e7c:	6b7fe004 	addi	r13,r13,-128
 4100e80:	683ea926 	beq	r13,zero,4100928 <___vfprintf_internal_r+0x320>
 4100e84:	a5000044 	addi	r20,r20,1
 4100e88:	003ea706 	br	4100928 <___vfprintf_internal_r+0x320>
 4100e8c:	bac00007 	ldb	r11,0(r23)
 4100e90:	63001014 	ori	r12,r12,64
 4100e94:	003e2806 	br	4100738 <___vfprintf_internal_r+0x130>
 4100e98:	d8c00617 	ldw	r3,24(sp)
 4100e9c:	d8001345 	stb	zero,77(sp)
 4100ea0:	05000044 	movi	r20,1
 4100ea4:	18800017 	ldw	r2,0(r3)
 4100ea8:	18c00104 	addi	r3,r3,4
 4100eac:	d8c00615 	stw	r3,24(sp)
 4100eb0:	d8801d05 	stb	r2,116(sp)
 4100eb4:	05400044 	movi	r21,1
 4100eb8:	dc401d04 	addi	r17,sp,116
 4100ebc:	003e9706 	br	410091c <___vfprintf_internal_r+0x314>
 4100ec0:	21003fcc 	andi	r4,r4,255
 4100ec4:	2005a71e 	bne	r4,zero,4102564 <___vfprintf_internal_r+0x1f5c>
 4100ec8:	00810474 	movhi	r2,1041
 4100ecc:	10832404 	addi	r2,r2,3216
 4100ed0:	d8800c15 	stw	r2,48(sp)
 4100ed4:	6080080c 	andi	r2,r12,32
 4100ed8:	10008726 	beq	r2,zero,41010f8 <___vfprintf_internal_r+0xaf0>
 4100edc:	d8800617 	ldw	r2,24(sp)
 4100ee0:	15000017 	ldw	r20,0(r2)
 4100ee4:	15400117 	ldw	r21,4(r2)
 4100ee8:	10800204 	addi	r2,r2,8
 4100eec:	d8800615 	stw	r2,24(sp)
 4100ef0:	6080004c 	andi	r2,r12,1
 4100ef4:	10000226 	beq	r2,zero,4100f00 <___vfprintf_internal_r+0x8f8>
 4100ef8:	a544b03a 	or	r2,r20,r21
 4100efc:	1002cd1e 	bne	r2,zero,4101a34 <___vfprintf_internal_r+0x142c>
 4100f00:	00800084 	movi	r2,2
 4100f04:	003f0c06 	br	4100b38 <___vfprintf_internal_r+0x530>
 4100f08:	bac00007 	ldb	r11,0(r23)
 4100f0c:	63000214 	ori	r12,r12,8
 4100f10:	003e0906 	br	4100738 <___vfprintf_internal_r+0x130>
 4100f14:	21003fcc 	andi	r4,r4,255
 4100f18:	2005981e 	bne	r4,zero,410257c <___vfprintf_internal_r+0x1f74>
 4100f1c:	63000414 	ori	r12,r12,16
 4100f20:	6080080c 	andi	r2,r12,32
 4100f24:	103fb71e 	bne	r2,zero,4100e04 <___vfprintf_internal_r+0x7fc>
 4100f28:	d9000617 	ldw	r4,24(sp)
 4100f2c:	6080040c 	andi	r2,r12,16
 4100f30:	20c00104 	addi	r3,r4,4
 4100f34:	1002dd1e 	bne	r2,zero,4101aac <___vfprintf_internal_r+0x14a4>
 4100f38:	6080100c 	andi	r2,r12,64
 4100f3c:	10048426 	beq	r2,zero,4102150 <___vfprintf_internal_r+0x1b48>
 4100f40:	d8800617 	ldw	r2,24(sp)
 4100f44:	d8c00615 	stw	r3,24(sp)
 4100f48:	1500000f 	ldh	r20,0(r2)
 4100f4c:	a02bd7fa 	srai	r21,r20,31
 4100f50:	a805883a 	mov	r2,r21
 4100f54:	103fb20e 	bge	r2,zero,4100e20 <___vfprintf_internal_r+0x818>
 4100f58:	a004c03a 	cmpne	r2,r20,zero
 4100f5c:	056bc83a 	sub	r21,zero,r21
 4100f60:	a8abc83a 	sub	r21,r21,r2
 4100f64:	00800b44 	movi	r2,45
 4100f68:	d8801345 	stb	r2,77(sp)
 4100f6c:	40ffffe0 	cmpeqi	r3,r8,-1
 4100f70:	0529c83a 	sub	r20,zero,r20
 4100f74:	03400b44 	movi	r13,45
 4100f78:	00800044 	movi	r2,1
 4100f7c:	183ef226 	beq	r3,zero,4100b48 <___vfprintf_internal_r+0x540>
 4100f80:	10c00060 	cmpeqi	r3,r2,1
 4100f84:	183faf1e 	bne	r3,zero,4100e44 <___vfprintf_internal_r+0x83c>
 4100f88:	108000a0 	cmpeqi	r2,r2,2
 4100f8c:	1001581e 	bne	r2,zero,41014f0 <___vfprintf_internal_r+0xee8>
 4100f90:	dc402704 	addi	r17,sp,156
 4100f94:	a006d0fa 	srli	r3,r20,3
 4100f98:	a808977a 	slli	r4,r21,29
 4100f9c:	a82ad0fa 	srli	r21,r21,3
 4100fa0:	a50001cc 	andi	r20,r20,7
 4100fa4:	a0800c04 	addi	r2,r20,48
 4100fa8:	20e8b03a 	or	r20,r4,r3
 4100fac:	88bfffc5 	stb	r2,-1(r17)
 4100fb0:	a546b03a 	or	r3,r20,r21
 4100fb4:	880b883a 	mov	r5,r17
 4100fb8:	8c7fffc4 	addi	r17,r17,-1
 4100fbc:	183ff51e 	bne	r3,zero,4100f94 <___vfprintf_internal_r+0x98c>
 4100fc0:	60c0004c 	andi	r3,r12,1
 4100fc4:	18015726 	beq	r3,zero,4101524 <___vfprintf_internal_r+0xf1c>
 4100fc8:	10803fcc 	andi	r2,r2,255
 4100fcc:	1080201c 	xori	r2,r2,128
 4100fd0:	10bfe004 	addi	r2,r2,-128
 4100fd4:	10800c18 	cmpnei	r2,r2,48
 4100fd8:	10015226 	beq	r2,zero,4101524 <___vfprintf_internal_r+0xf1c>
 4100fdc:	00800c04 	movi	r2,48
 4100fe0:	297fff84 	addi	r5,r5,-2
 4100fe4:	88bfffc5 	stb	r2,-1(r17)
 4100fe8:	d8802704 	addi	r2,sp,156
 4100fec:	116bc83a 	sub	r21,r2,r5
 4100ff0:	db000415 	stw	r12,16(sp)
 4100ff4:	2823883a 	mov	r17,r5
 4100ff8:	003f9a06 	br	4100e64 <___vfprintf_internal_r+0x85c>
 4100ffc:	bac00007 	ldb	r11,0(r23)
 4101000:	63002014 	ori	r12,r12,128
 4101004:	003dcc06 	br	4100738 <___vfprintf_internal_r+0x130>
 4101008:	bf000007 	ldb	fp,0(r23)
 410100c:	b8800044 	addi	r2,r23,1
 4101010:	e0c00aa0 	cmpeqi	r3,fp,42
 4101014:	1805b11e 	bne	r3,zero,41026dc <___vfprintf_internal_r+0x20d4>
 4101018:	e0fff404 	addi	r3,fp,-48
 410101c:	198002b0 	cmpltui	r6,r3,10
 4101020:	102f883a 	mov	r23,r2
 4101024:	0011883a 	mov	r8,zero
 4101028:	303dc526 	beq	r6,zero,4100740 <___vfprintf_internal_r+0x138>
 410102c:	400490ba 	slli	r2,r8,2
 4101030:	bf000007 	ldb	fp,0(r23)
 4101034:	bdc00044 	addi	r23,r23,1
 4101038:	1211883a 	add	r8,r2,r8
 410103c:	4211883a 	add	r8,r8,r8
 4101040:	40d1883a 	add	r8,r8,r3
 4101044:	e0fff404 	addi	r3,fp,-48
 4101048:	188002b0 	cmpltui	r2,r3,10
 410104c:	103ff71e 	bne	r2,zero,410102c <___vfprintf_internal_r+0xa24>
 4101050:	003dbb06 	br	4100740 <___vfprintf_internal_r+0x138>
 4101054:	bf000003 	ldbu	fp,0(r23)
 4101058:	e2c03fcc 	andi	r11,fp,255
 410105c:	5ac0201c 	xori	r11,r11,128
 4101060:	63000114 	ori	r12,r12,4
 4101064:	5affe004 	addi	r11,r11,-128
 4101068:	003db306 	br	4100738 <___vfprintf_internal_r+0x130>
 410106c:	bac00007 	ldb	r11,0(r23)
 4101070:	01000044 	movi	r4,1
 4101074:	01400ac4 	movi	r5,43
 4101078:	003daf06 	br	4100738 <___vfprintf_internal_r+0x130>
 410107c:	d8800617 	ldw	r2,24(sp)
 4101080:	bf000003 	ldbu	fp,0(r23)
 4101084:	14000017 	ldw	r16,0(r2)
 4101088:	10800104 	addi	r2,r2,4
 410108c:	80028c16 	blt	r16,zero,4101ac0 <___vfprintf_internal_r+0x14b8>
 4101090:	d8800615 	stw	r2,24(sp)
 4101094:	e2c03fcc 	andi	r11,fp,255
 4101098:	5ac0201c 	xori	r11,r11,128
 410109c:	5affe004 	addi	r11,r11,-128
 41010a0:	003da506 	br	4100738 <___vfprintf_internal_r+0x130>
 41010a4:	bac00007 	ldb	r11,0(r23)
 41010a8:	63000054 	ori	r12,r12,1
 41010ac:	003da206 	br	4100738 <___vfprintf_internal_r+0x130>
 41010b0:	28803fcc 	andi	r2,r5,255
 41010b4:	1080201c 	xori	r2,r2,128
 41010b8:	10bfe004 	addi	r2,r2,-128
 41010bc:	bf000003 	ldbu	fp,0(r23)
 41010c0:	103ff41e 	bne	r2,zero,4101094 <___vfprintf_internal_r+0xa8c>
 41010c4:	e2c03fcc 	andi	r11,fp,255
 41010c8:	5ac0201c 	xori	r11,r11,128
 41010cc:	01000044 	movi	r4,1
 41010d0:	01400804 	movi	r5,32
 41010d4:	5affe004 	addi	r11,r11,-128
 41010d8:	003d9706 	br	4100738 <___vfprintf_internal_r+0x130>
 41010dc:	21003fcc 	andi	r4,r4,255
 41010e0:	20051e1e 	bne	r4,zero,410255c <___vfprintf_internal_r+0x1f54>
 41010e4:	00810474 	movhi	r2,1041
 41010e8:	10831f04 	addi	r2,r2,3196
 41010ec:	d8800c15 	stw	r2,48(sp)
 41010f0:	6080080c 	andi	r2,r12,32
 41010f4:	103f791e 	bne	r2,zero,4100edc <___vfprintf_internal_r+0x8d4>
 41010f8:	d9000617 	ldw	r4,24(sp)
 41010fc:	6080040c 	andi	r2,r12,16
 4101100:	20c00104 	addi	r3,r4,4
 4101104:	10025b1e 	bne	r2,zero,4101a74 <___vfprintf_internal_r+0x146c>
 4101108:	6080100c 	andi	r2,r12,64
 410110c:	10046026 	beq	r2,zero,4102290 <___vfprintf_internal_r+0x1c88>
 4101110:	d8800617 	ldw	r2,24(sp)
 4101114:	002b883a 	mov	r21,zero
 4101118:	d8c00615 	stw	r3,24(sp)
 410111c:	1500000b 	ldhu	r20,0(r2)
 4101120:	003f7306 	br	4100ef0 <___vfprintf_internal_r+0x8e8>
 4101124:	d8800617 	ldw	r2,24(sp)
 4101128:	d8001345 	stb	zero,77(sp)
 410112c:	14400017 	ldw	r17,0(r2)
 4101130:	10c00104 	addi	r3,r2,4
 4101134:	88028e26 	beq	r17,zero,4101b70 <___vfprintf_internal_r+0x1568>
 4101138:	40bfffe0 	cmpeqi	r2,r8,-1
 410113c:	1003c01e 	bne	r2,zero,4102040 <___vfprintf_internal_r+0x1a38>
 4101140:	400d883a 	mov	r6,r8
 4101144:	000b883a 	mov	r5,zero
 4101148:	8809883a 	mov	r4,r17
 410114c:	d8c00715 	stw	r3,28(sp)
 4101150:	db000615 	stw	r12,24(sp)
 4101154:	da000415 	stw	r8,16(sp)
 4101158:	410590c0 	call	410590c <memchr>
 410115c:	da000417 	ldw	r8,16(sp)
 4101160:	db000617 	ldw	r12,24(sp)
 4101164:	d8c00717 	ldw	r3,28(sp)
 4101168:	1004ec26 	beq	r2,zero,410251c <___vfprintf_internal_r+0x1f14>
 410116c:	146bc83a 	sub	r21,r2,r17
 4101170:	a829883a 	mov	r20,r21
 4101174:	d8c00615 	stw	r3,24(sp)
 4101178:	003de806 	br	410091c <___vfprintf_internal_r+0x314>
 410117c:	bac00007 	ldb	r11,0(r23)
 4101180:	63000814 	ori	r12,r12,32
 4101184:	003d6c06 	br	4100738 <___vfprintf_internal_r+0x130>
 4101188:	d8c00617 	ldw	r3,24(sp)
 410118c:	00800c04 	movi	r2,48
 4101190:	d8801385 	stb	r2,78(sp)
 4101194:	00801e04 	movi	r2,120
 4101198:	01010474 	movhi	r4,1041
 410119c:	d88013c5 	stb	r2,79(sp)
 41011a0:	18800104 	addi	r2,r3,4
 41011a4:	d8800615 	stw	r2,24(sp)
 41011a8:	20831f04 	addi	r2,r4,3196
 41011ac:	d8800c15 	stw	r2,48(sp)
 41011b0:	1d000017 	ldw	r20,0(r3)
 41011b4:	002b883a 	mov	r21,zero
 41011b8:	63000094 	ori	r12,r12,2
 41011bc:	00800084 	movi	r2,2
 41011c0:	07001e04 	movi	fp,120
 41011c4:	003e5c06 	br	4100b38 <___vfprintf_internal_r+0x530>
 41011c8:	21003fcc 	andi	r4,r4,255
 41011cc:	2004e71e 	bne	r4,zero,410256c <___vfprintf_internal_r+0x1f64>
 41011d0:	d9000617 	ldw	r4,24(sp)
 41011d4:	6080080c 	andi	r2,r12,32
 41011d8:	20c00017 	ldw	r3,0(r4)
 41011dc:	21000104 	addi	r4,r4,4
 41011e0:	d9000615 	stw	r4,24(sp)
 41011e4:	10021e1e 	bne	r2,zero,4101a60 <___vfprintf_internal_r+0x1458>
 41011e8:	6080040c 	andi	r2,r12,16
 41011ec:	1002ae1e 	bne	r2,zero,4101ca8 <___vfprintf_internal_r+0x16a0>
 41011f0:	6300100c 	andi	r12,r12,64
 41011f4:	6002ac26 	beq	r12,zero,4101ca8 <___vfprintf_internal_r+0x16a0>
 41011f8:	d8800517 	ldw	r2,20(sp)
 41011fc:	1880000d 	sth	r2,0(r3)
 4101200:	003d3506 	br	41006d8 <___vfprintf_internal_r+0xd0>
 4101204:	bac00007 	ldb	r11,0(r23)
 4101208:	58801b18 	cmpnei	r2,r11,108
 410120c:	10024926 	beq	r2,zero,4101b34 <___vfprintf_internal_r+0x152c>
 4101210:	63000414 	ori	r12,r12,16
 4101214:	003d4806 	br	4100738 <___vfprintf_internal_r+0x130>
 4101218:	e2c01990 	cmplti	r11,fp,102
 410121c:	5800cb1e 	bne	r11,zero,410154c <___vfprintf_internal_r+0xf44>
 4101220:	d9000917 	ldw	r4,36(sp)
 4101224:	d9400a17 	ldw	r5,40(sp)
 4101228:	000d883a 	mov	r6,zero
 410122c:	000f883a 	mov	r7,zero
 4101230:	d8c00e15 	stw	r3,56(sp)
 4101234:	410c1080 	call	410c108 <__eqdf2>
 4101238:	d8c00e17 	ldw	r3,56(sp)
 410123c:	1001641e 	bne	r2,zero,41017d0 <___vfprintf_internal_r+0x11c8>
 4101240:	d8801b17 	ldw	r2,108(sp)
 4101244:	01010474 	movhi	r4,1041
 4101248:	21032b04 	addi	r4,r4,3244
 410124c:	10800044 	addi	r2,r2,1
 4101250:	18c00044 	addi	r3,r3,1
 4101254:	b1000015 	stw	r4,0(r22)
 4101258:	01000044 	movi	r4,1
 410125c:	d8801b15 	stw	r2,108(sp)
 4101260:	b1000115 	stw	r4,4(r22)
 4101264:	d8c01c15 	stw	r3,112(sp)
 4101268:	10800208 	cmpgei	r2,r2,8
 410126c:	1003621e 	bne	r2,zero,4101ff8 <___vfprintf_internal_r+0x19f0>
 4101270:	b5800204 	addi	r22,r22,8
 4101274:	d8801417 	ldw	r2,80(sp)
 4101278:	d9000817 	ldw	r4,32(sp)
 410127c:	1101e70e 	bge	r2,r4,4101a1c <___vfprintf_internal_r+0x1414>
 4101280:	d8800d17 	ldw	r2,52(sp)
 4101284:	d9000b17 	ldw	r4,44(sp)
 4101288:	b0800015 	stw	r2,0(r22)
 410128c:	d8801b17 	ldw	r2,108(sp)
 4101290:	1907883a 	add	r3,r3,r4
 4101294:	b1000115 	stw	r4,4(r22)
 4101298:	10800044 	addi	r2,r2,1
 410129c:	d8801b15 	stw	r2,108(sp)
 41012a0:	d8c01c15 	stw	r3,112(sp)
 41012a4:	10800208 	cmpgei	r2,r2,8
 41012a8:	1002291e 	bne	r2,zero,4101b50 <___vfprintf_internal_r+0x1548>
 41012ac:	b5800204 	addi	r22,r22,8
 41012b0:	d8800817 	ldw	r2,32(sp)
 41012b4:	157fffc4 	addi	r21,r2,-1
 41012b8:	057dd10e 	bge	zero,r21,4100a00 <___vfprintf_internal_r+0x3f8>
 41012bc:	01c10474 	movhi	r7,1041
 41012c0:	a9000450 	cmplti	r4,r21,17
 41012c4:	d8801b17 	ldw	r2,108(sp)
 41012c8:	39c32c04 	addi	r7,r7,3248
 41012cc:	2003461e 	bne	r4,zero,4101fe8 <___vfprintf_internal_r+0x19e0>
 41012d0:	07000404 	movi	fp,16
 41012d4:	3823883a 	mov	r17,r7
 41012d8:	00000406 	br	41012ec <___vfprintf_internal_r+0xce4>
 41012dc:	b5800204 	addi	r22,r22,8
 41012e0:	ad7ffc04 	addi	r21,r21,-16
 41012e4:	a9000448 	cmpgei	r4,r21,17
 41012e8:	20033e26 	beq	r4,zero,4101fe4 <___vfprintf_internal_r+0x19dc>
 41012ec:	10800044 	addi	r2,r2,1
 41012f0:	18c00404 	addi	r3,r3,16
 41012f4:	b4400015 	stw	r17,0(r22)
 41012f8:	b7000115 	stw	fp,4(r22)
 41012fc:	d8c01c15 	stw	r3,112(sp)
 4101300:	d8801b15 	stw	r2,108(sp)
 4101304:	11000208 	cmpgei	r4,r2,8
 4101308:	203ff426 	beq	r4,zero,41012dc <___vfprintf_internal_r+0xcd4>
 410130c:	d9801a04 	addi	r6,sp,104
 4101310:	900b883a 	mov	r5,r18
 4101314:	9809883a 	mov	r4,r19
 4101318:	41070e00 	call	41070e0 <__sprint_r>
 410131c:	103dc91e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101320:	d8c01c17 	ldw	r3,112(sp)
 4101324:	d8801b17 	ldw	r2,108(sp)
 4101328:	dd802704 	addi	r22,sp,156
 410132c:	003fec06 	br	41012e0 <___vfprintf_internal_r+0xcd8>
 4101330:	8519c83a 	sub	r12,r16,r20
 4101334:	033da30e 	bge	zero,r12,41009c4 <___vfprintf_internal_r+0x3bc>
 4101338:	01c10474 	movhi	r7,1041
 410133c:	61000450 	cmplti	r4,r12,17
 4101340:	d8801b17 	ldw	r2,108(sp)
 4101344:	39c32c04 	addi	r7,r7,3248
 4101348:	2000281e 	bne	r4,zero,41013ec <___vfprintf_internal_r+0xde4>
 410134c:	dc400e15 	stw	r17,56(sp)
 4101350:	dc000f15 	stw	r16,60(sp)
 4101354:	b009883a 	mov	r4,r22
 4101358:	03400404 	movi	r13,16
 410135c:	a02d883a 	mov	r22,r20
 4101360:	6021883a 	mov	r16,r12
 4101364:	4029883a 	mov	r20,r8
 4101368:	3823883a 	mov	r17,r7
 410136c:	00000406 	br	4101380 <___vfprintf_internal_r+0xd78>
 4101370:	843ffc04 	addi	r16,r16,-16
 4101374:	81400448 	cmpgei	r5,r16,17
 4101378:	21000204 	addi	r4,r4,8
 410137c:	28001426 	beq	r5,zero,41013d0 <___vfprintf_internal_r+0xdc8>
 4101380:	10800044 	addi	r2,r2,1
 4101384:	18c00404 	addi	r3,r3,16
 4101388:	24400015 	stw	r17,0(r4)
 410138c:	23400115 	stw	r13,4(r4)
 4101390:	d8c01c15 	stw	r3,112(sp)
 4101394:	d8801b15 	stw	r2,108(sp)
 4101398:	11400208 	cmpgei	r5,r2,8
 410139c:	283ff426 	beq	r5,zero,4101370 <___vfprintf_internal_r+0xd68>
 41013a0:	d9801a04 	addi	r6,sp,104
 41013a4:	900b883a 	mov	r5,r18
 41013a8:	9809883a 	mov	r4,r19
 41013ac:	41070e00 	call	41070e0 <__sprint_r>
 41013b0:	103da41e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 41013b4:	843ffc04 	addi	r16,r16,-16
 41013b8:	81400448 	cmpgei	r5,r16,17
 41013bc:	d8c01c17 	ldw	r3,112(sp)
 41013c0:	d8801b17 	ldw	r2,108(sp)
 41013c4:	d9002704 	addi	r4,sp,156
 41013c8:	03400404 	movi	r13,16
 41013cc:	283fec1e 	bne	r5,zero,4101380 <___vfprintf_internal_r+0xd78>
 41013d0:	8019883a 	mov	r12,r16
 41013d4:	880f883a 	mov	r7,r17
 41013d8:	dc000f17 	ldw	r16,60(sp)
 41013dc:	dc400e17 	ldw	r17,56(sp)
 41013e0:	a011883a 	mov	r8,r20
 41013e4:	b029883a 	mov	r20,r22
 41013e8:	202d883a 	mov	r22,r4
 41013ec:	10800044 	addi	r2,r2,1
 41013f0:	1b07883a 	add	r3,r3,r12
 41013f4:	d8801b15 	stw	r2,108(sp)
 41013f8:	b1c00015 	stw	r7,0(r22)
 41013fc:	b3000115 	stw	r12,4(r22)
 4101400:	d8c01c15 	stw	r3,112(sp)
 4101404:	10800208 	cmpgei	r2,r2,8
 4101408:	1003031e 	bne	r2,zero,4102018 <___vfprintf_internal_r+0x1a10>
 410140c:	4551c83a 	sub	r8,r8,r21
 4101410:	b5800204 	addi	r22,r22,8
 4101414:	023d6d0e 	bge	zero,r8,41009cc <___vfprintf_internal_r+0x3c4>
 4101418:	01c10474 	movhi	r7,1041
 410141c:	41000450 	cmplti	r4,r8,17
 4101420:	d8801b17 	ldw	r2,108(sp)
 4101424:	39c32c04 	addi	r7,r7,3248
 4101428:	2000221e 	bne	r4,zero,41014b4 <___vfprintf_internal_r+0xeac>
 410142c:	dc400e15 	stw	r17,56(sp)
 4101430:	dc000f15 	stw	r16,60(sp)
 4101434:	03000404 	movi	r12,16
 4101438:	4021883a 	mov	r16,r8
 410143c:	3823883a 	mov	r17,r7
 4101440:	00000406 	br	4101454 <___vfprintf_internal_r+0xe4c>
 4101444:	843ffc04 	addi	r16,r16,-16
 4101448:	81000448 	cmpgei	r4,r16,17
 410144c:	b5800204 	addi	r22,r22,8
 4101450:	20001426 	beq	r4,zero,41014a4 <___vfprintf_internal_r+0xe9c>
 4101454:	10800044 	addi	r2,r2,1
 4101458:	18c00404 	addi	r3,r3,16
 410145c:	b4400015 	stw	r17,0(r22)
 4101460:	b3000115 	stw	r12,4(r22)
 4101464:	d8c01c15 	stw	r3,112(sp)
 4101468:	d8801b15 	stw	r2,108(sp)
 410146c:	11000208 	cmpgei	r4,r2,8
 4101470:	203ff426 	beq	r4,zero,4101444 <___vfprintf_internal_r+0xe3c>
 4101474:	d9801a04 	addi	r6,sp,104
 4101478:	900b883a 	mov	r5,r18
 410147c:	9809883a 	mov	r4,r19
 4101480:	41070e00 	call	41070e0 <__sprint_r>
 4101484:	103d6f1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101488:	843ffc04 	addi	r16,r16,-16
 410148c:	81000448 	cmpgei	r4,r16,17
 4101490:	d8c01c17 	ldw	r3,112(sp)
 4101494:	d8801b17 	ldw	r2,108(sp)
 4101498:	dd802704 	addi	r22,sp,156
 410149c:	03000404 	movi	r12,16
 41014a0:	203fec1e 	bne	r4,zero,4101454 <___vfprintf_internal_r+0xe4c>
 41014a4:	8011883a 	mov	r8,r16
 41014a8:	880f883a 	mov	r7,r17
 41014ac:	dc000f17 	ldw	r16,60(sp)
 41014b0:	dc400e17 	ldw	r17,56(sp)
 41014b4:	10800044 	addi	r2,r2,1
 41014b8:	1a07883a 	add	r3,r3,r8
 41014bc:	d8801b15 	stw	r2,108(sp)
 41014c0:	b1c00015 	stw	r7,0(r22)
 41014c4:	b2000115 	stw	r8,4(r22)
 41014c8:	d8c01c15 	stw	r3,112(sp)
 41014cc:	10800208 	cmpgei	r2,r2,8
 41014d0:	10014a1e 	bne	r2,zero,41019fc <___vfprintf_internal_r+0x13f4>
 41014d4:	b5800204 	addi	r22,r22,8
 41014d8:	003d3c06 	br	41009cc <___vfprintf_internal_r+0x3c4>
 41014dc:	10c00060 	cmpeqi	r3,r2,1
 41014e0:	1803bc1e 	bne	r3,zero,41023d4 <___vfprintf_internal_r+0x1dcc>
 41014e4:	108000a0 	cmpeqi	r2,r2,2
 41014e8:	db000417 	ldw	r12,16(sp)
 41014ec:	103ea826 	beq	r2,zero,4100f90 <___vfprintf_internal_r+0x988>
 41014f0:	d9000c17 	ldw	r4,48(sp)
 41014f4:	dc402704 	addi	r17,sp,156
 41014f8:	a08003cc 	andi	r2,r20,15
 41014fc:	a806973a 	slli	r3,r21,28
 4101500:	a028d13a 	srli	r20,r20,4
 4101504:	2085883a 	add	r2,r4,r2
 4101508:	10800003 	ldbu	r2,0(r2)
 410150c:	a82ad13a 	srli	r21,r21,4
 4101510:	1d28b03a 	or	r20,r3,r20
 4101514:	88bfffc5 	stb	r2,-1(r17)
 4101518:	a544b03a 	or	r2,r20,r21
 410151c:	8c7fffc4 	addi	r17,r17,-1
 4101520:	103ff51e 	bne	r2,zero,41014f8 <___vfprintf_internal_r+0xef0>
 4101524:	d8802704 	addi	r2,sp,156
 4101528:	146bc83a 	sub	r21,r2,r17
 410152c:	db000415 	stw	r12,16(sp)
 4101530:	003e4c06 	br	4100e64 <___vfprintf_internal_r+0x85c>
 4101534:	d9801a04 	addi	r6,sp,104
 4101538:	900b883a 	mov	r5,r18
 410153c:	9809883a 	mov	r4,r19
 4101540:	41070e00 	call	41070e0 <__sprint_r>
 4101544:	103d3926 	beq	r2,zero,4100a2c <___vfprintf_internal_r+0x424>
 4101548:	003d3e06 	br	4100a44 <___vfprintf_internal_r+0x43c>
 410154c:	d8800817 	ldw	r2,32(sp)
 4101550:	da001b17 	ldw	r8,108(sp)
 4101554:	18c00044 	addi	r3,r3,1
 4101558:	10800088 	cmpgei	r2,r2,2
 410155c:	45400044 	addi	r21,r8,1
 4101560:	b7000204 	addi	fp,r22,8
 4101564:	1000f826 	beq	r2,zero,4101948 <___vfprintf_internal_r+0x1340>
 4101568:	00800044 	movi	r2,1
 410156c:	b0800115 	stw	r2,4(r22)
 4101570:	b4400015 	stw	r17,0(r22)
 4101574:	d8c01c15 	stw	r3,112(sp)
 4101578:	dd401b15 	stw	r21,108(sp)
 410157c:	a8800210 	cmplti	r2,r21,8
 4101580:	1001cc26 	beq	r2,zero,4101cb4 <___vfprintf_internal_r+0x16ac>
 4101584:	d8800b17 	ldw	r2,44(sp)
 4101588:	d9000d17 	ldw	r4,52(sp)
 410158c:	ad400044 	addi	r21,r21,1
 4101590:	1887883a 	add	r3,r3,r2
 4101594:	e0800115 	stw	r2,4(fp)
 4101598:	e1000015 	stw	r4,0(fp)
 410159c:	d8c01c15 	stw	r3,112(sp)
 41015a0:	dd401b15 	stw	r21,108(sp)
 41015a4:	a8800208 	cmpgei	r2,r21,8
 41015a8:	1001cb1e 	bne	r2,zero,4101cd8 <___vfprintf_internal_r+0x16d0>
 41015ac:	e7000204 	addi	fp,fp,8
 41015b0:	d9000917 	ldw	r4,36(sp)
 41015b4:	d9400a17 	ldw	r5,40(sp)
 41015b8:	aa000044 	addi	r8,r21,1
 41015bc:	000d883a 	mov	r6,zero
 41015c0:	000f883a 	mov	r7,zero
 41015c4:	d8c00e15 	stw	r3,56(sp)
 41015c8:	da000715 	stw	r8,28(sp)
 41015cc:	410c1080 	call	410c108 <__eqdf2>
 41015d0:	d8c00817 	ldw	r3,32(sp)
 41015d4:	da000717 	ldw	r8,28(sp)
 41015d8:	e5800204 	addi	r22,fp,8
 41015dc:	1affffc4 	addi	r11,r3,-1
 41015e0:	d8c00e17 	ldw	r3,56(sp)
 41015e4:	1000e526 	beq	r2,zero,410197c <___vfprintf_internal_r+0x1374>
 41015e8:	8a400044 	addi	r9,r17,1
 41015ec:	1ac7883a 	add	r3,r3,r11
 41015f0:	da001b15 	stw	r8,108(sp)
 41015f4:	e2400015 	stw	r9,0(fp)
 41015f8:	e2c00115 	stw	r11,4(fp)
 41015fc:	d8c01c15 	stw	r3,112(sp)
 4101600:	42000208 	cmpgei	r8,r8,8
 4101604:	40013e1e 	bne	r8,zero,4101b00 <___vfprintf_internal_r+0x14f8>
 4101608:	e0800404 	addi	r2,fp,16
 410160c:	aa000084 	addi	r8,r21,2
 4101610:	b039883a 	mov	fp,r22
 4101614:	102d883a 	mov	r22,r2
 4101618:	d9001017 	ldw	r4,64(sp)
 410161c:	d8801644 	addi	r2,sp,89
 4101620:	da001b15 	stw	r8,108(sp)
 4101624:	20c7883a 	add	r3,r4,r3
 4101628:	e0800015 	stw	r2,0(fp)
 410162c:	e1000115 	stw	r4,4(fp)
 4101630:	d8c01c15 	stw	r3,112(sp)
 4101634:	42000210 	cmplti	r8,r8,8
 4101638:	403cf11e 	bne	r8,zero,4100a00 <___vfprintf_internal_r+0x3f8>
 410163c:	d9801a04 	addi	r6,sp,104
 4101640:	900b883a 	mov	r5,r18
 4101644:	9809883a 	mov	r4,r19
 4101648:	41070e00 	call	41070e0 <__sprint_r>
 410164c:	103cfd1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101650:	d8c01c17 	ldw	r3,112(sp)
 4101654:	dd802704 	addi	r22,sp,156
 4101658:	003ce906 	br	4100a00 <___vfprintf_internal_r+0x3f8>
 410165c:	db000417 	ldw	r12,16(sp)
 4101660:	003e4706 	br	4100f80 <___vfprintf_internal_r+0x978>
 4101664:	03010474 	movhi	r12,1041
 4101668:	39000450 	cmplti	r4,r7,17
 410166c:	d8801b17 	ldw	r2,108(sp)
 4101670:	63033004 	addi	r12,r12,3264
 4101674:	2000321e 	bne	r4,zero,4101740 <___vfprintf_internal_r+0x1138>
 4101678:	dc401115 	stw	r17,68(sp)
 410167c:	b009883a 	mov	r4,r22
 4101680:	9023883a 	mov	r17,r18
 4101684:	a82d883a 	mov	r22,r21
 4101688:	ddc01215 	stw	r23,72(sp)
 410168c:	03c00404 	movi	r15,16
 4101690:	a02f883a 	mov	r23,r20
 4101694:	db800e15 	stw	r14,56(sp)
 4101698:	8029883a 	mov	r20,r16
 410169c:	db400f15 	stw	r13,60(sp)
 41016a0:	402b883a 	mov	r21,r8
 41016a4:	3821883a 	mov	r16,r7
 41016a8:	6025883a 	mov	r18,r12
 41016ac:	00000406 	br	41016c0 <___vfprintf_internal_r+0x10b8>
 41016b0:	843ffc04 	addi	r16,r16,-16
 41016b4:	81800448 	cmpgei	r6,r16,17
 41016b8:	21000204 	addi	r4,r4,8
 41016bc:	30001426 	beq	r6,zero,4101710 <___vfprintf_internal_r+0x1108>
 41016c0:	10800044 	addi	r2,r2,1
 41016c4:	18c00404 	addi	r3,r3,16
 41016c8:	24800015 	stw	r18,0(r4)
 41016cc:	23c00115 	stw	r15,4(r4)
 41016d0:	d8c01c15 	stw	r3,112(sp)
 41016d4:	d8801b15 	stw	r2,108(sp)
 41016d8:	11800208 	cmpgei	r6,r2,8
 41016dc:	303ff426 	beq	r6,zero,41016b0 <___vfprintf_internal_r+0x10a8>
 41016e0:	d9801a04 	addi	r6,sp,104
 41016e4:	880b883a 	mov	r5,r17
 41016e8:	9809883a 	mov	r4,r19
 41016ec:	41070e00 	call	41070e0 <__sprint_r>
 41016f0:	1001b91e 	bne	r2,zero,4101dd8 <___vfprintf_internal_r+0x17d0>
 41016f4:	843ffc04 	addi	r16,r16,-16
 41016f8:	81800448 	cmpgei	r6,r16,17
 41016fc:	d8c01c17 	ldw	r3,112(sp)
 4101700:	d8801b17 	ldw	r2,108(sp)
 4101704:	d9002704 	addi	r4,sp,156
 4101708:	03c00404 	movi	r15,16
 410170c:	303fec1e 	bne	r6,zero,41016c0 <___vfprintf_internal_r+0x10b8>
 4101710:	800f883a 	mov	r7,r16
 4101714:	9019883a 	mov	r12,r18
 4101718:	a021883a 	mov	r16,r20
 410171c:	8825883a 	mov	r18,r17
 4101720:	b829883a 	mov	r20,r23
 4101724:	db800e17 	ldw	r14,56(sp)
 4101728:	db400f17 	ldw	r13,60(sp)
 410172c:	ddc01217 	ldw	r23,72(sp)
 4101730:	dc401117 	ldw	r17,68(sp)
 4101734:	a811883a 	mov	r8,r21
 4101738:	b02b883a 	mov	r21,r22
 410173c:	202d883a 	mov	r22,r4
 4101740:	10800044 	addi	r2,r2,1
 4101744:	19c7883a 	add	r3,r3,r7
 4101748:	d8801b15 	stw	r2,108(sp)
 410174c:	b3000015 	stw	r12,0(r22)
 4101750:	b1c00115 	stw	r7,4(r22)
 4101754:	d8c01c15 	stw	r3,112(sp)
 4101758:	10800208 	cmpgei	r2,r2,8
 410175c:	1001671e 	bne	r2,zero,4101cfc <___vfprintf_internal_r+0x16f4>
 4101760:	b5800204 	addi	r22,r22,8
 4101764:	003c7a06 	br	4100950 <___vfprintf_internal_r+0x348>
 4101768:	d9801a04 	addi	r6,sp,104
 410176c:	900b883a 	mov	r5,r18
 4101770:	9809883a 	mov	r4,r19
 4101774:	da001115 	stw	r8,68(sp)
 4101778:	db400f15 	stw	r13,60(sp)
 410177c:	db800e15 	stw	r14,56(sp)
 4101780:	41070e00 	call	41070e0 <__sprint_r>
 4101784:	103caf1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101788:	d8c01c17 	ldw	r3,112(sp)
 410178c:	da001117 	ldw	r8,68(sp)
 4101790:	db400f17 	ldw	r13,60(sp)
 4101794:	db800e17 	ldw	r14,56(sp)
 4101798:	dd802704 	addi	r22,sp,156
 410179c:	003c7a06 	br	4100988 <___vfprintf_internal_r+0x380>
 41017a0:	d9801a04 	addi	r6,sp,104
 41017a4:	900b883a 	mov	r5,r18
 41017a8:	9809883a 	mov	r4,r19
 41017ac:	da000f15 	stw	r8,60(sp)
 41017b0:	db400e15 	stw	r13,56(sp)
 41017b4:	41070e00 	call	41070e0 <__sprint_r>
 41017b8:	103ca21e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 41017bc:	d8c01c17 	ldw	r3,112(sp)
 41017c0:	da000f17 	ldw	r8,60(sp)
 41017c4:	db400e17 	ldw	r13,56(sp)
 41017c8:	dd802704 	addi	r22,sp,156
 41017cc:	003c7b06 	br	41009bc <___vfprintf_internal_r+0x3b4>
 41017d0:	d9401417 	ldw	r5,80(sp)
 41017d4:	0141570e 	bge	zero,r5,4101d34 <___vfprintf_internal_r+0x172c>
 41017d8:	d8800717 	ldw	r2,28(sp)
 41017dc:	d9000817 	ldw	r4,32(sp)
 41017e0:	102b883a 	mov	r21,r2
 41017e4:	2080b916 	blt	r4,r2,4101acc <___vfprintf_internal_r+0x14c4>
 41017e8:	05400a0e 	bge	zero,r21,4101814 <___vfprintf_internal_r+0x120c>
 41017ec:	d8801b17 	ldw	r2,108(sp)
 41017f0:	1d47883a 	add	r3,r3,r21
 41017f4:	b4400015 	stw	r17,0(r22)
 41017f8:	10800044 	addi	r2,r2,1
 41017fc:	d8801b15 	stw	r2,108(sp)
 4101800:	b5400115 	stw	r21,4(r22)
 4101804:	d8c01c15 	stw	r3,112(sp)
 4101808:	10800208 	cmpgei	r2,r2,8
 410180c:	10032d1e 	bne	r2,zero,41024c4 <___vfprintf_internal_r+0x1ebc>
 4101810:	b5800204 	addi	r22,r22,8
 4101814:	a800c516 	blt	r21,zero,4101b2c <___vfprintf_internal_r+0x1524>
 4101818:	d8800717 	ldw	r2,28(sp)
 410181c:	156bc83a 	sub	r21,r2,r21
 4101820:	0540db16 	blt	zero,r21,4101b90 <___vfprintf_internal_r+0x1588>
 4101824:	dd401417 	ldw	r21,80(sp)
 4101828:	d8800817 	ldw	r2,32(sp)
 410182c:	a880aa0e 	bge	r21,r2,4101ad8 <___vfprintf_internal_r+0x14d0>
 4101830:	d8800d17 	ldw	r2,52(sp)
 4101834:	d9000b17 	ldw	r4,44(sp)
 4101838:	b0800015 	stw	r2,0(r22)
 410183c:	d8801b17 	ldw	r2,108(sp)
 4101840:	1907883a 	add	r3,r3,r4
 4101844:	b1000115 	stw	r4,4(r22)
 4101848:	10800044 	addi	r2,r2,1
 410184c:	d8801b15 	stw	r2,108(sp)
 4101850:	d8c01c15 	stw	r3,112(sp)
 4101854:	10800208 	cmpgei	r2,r2,8
 4101858:	1003111e 	bne	r2,zero,41024a0 <___vfprintf_internal_r+0x1e98>
 410185c:	b5800204 	addi	r22,r22,8
 4101860:	d9000817 	ldw	r4,32(sp)
 4101864:	d9400717 	ldw	r5,28(sp)
 4101868:	2545c83a 	sub	r2,r4,r21
 410186c:	2149c83a 	sub	r4,r4,r5
 4101870:	102b883a 	mov	r21,r2
 4101874:	2080010e 	bge	r4,r2,410187c <___vfprintf_internal_r+0x1274>
 4101878:	202b883a 	mov	r21,r4
 410187c:	05400c0e 	bge	zero,r21,41018b0 <___vfprintf_internal_r+0x12a8>
 4101880:	d9000717 	ldw	r4,28(sp)
 4101884:	1d47883a 	add	r3,r3,r21
 4101888:	b5400115 	stw	r21,4(r22)
 410188c:	8913883a 	add	r9,r17,r4
 4101890:	d9001b17 	ldw	r4,108(sp)
 4101894:	b2400015 	stw	r9,0(r22)
 4101898:	d8c01c15 	stw	r3,112(sp)
 410189c:	21000044 	addi	r4,r4,1
 41018a0:	d9001b15 	stw	r4,108(sp)
 41018a4:	21000208 	cmpgei	r4,r4,8
 41018a8:	2003111e 	bne	r4,zero,41024f0 <___vfprintf_internal_r+0x1ee8>
 41018ac:	b5800204 	addi	r22,r22,8
 41018b0:	a800010e 	bge	r21,zero,41018b8 <___vfprintf_internal_r+0x12b0>
 41018b4:	002b883a 	mov	r21,zero
 41018b8:	156bc83a 	sub	r21,r2,r21
 41018bc:	057c500e 	bge	zero,r21,4100a00 <___vfprintf_internal_r+0x3f8>
 41018c0:	01c10474 	movhi	r7,1041
 41018c4:	a9000450 	cmplti	r4,r21,17
 41018c8:	d8801b17 	ldw	r2,108(sp)
 41018cc:	39c32c04 	addi	r7,r7,3248
 41018d0:	2001c51e 	bne	r4,zero,4101fe8 <___vfprintf_internal_r+0x19e0>
 41018d4:	07000404 	movi	fp,16
 41018d8:	3823883a 	mov	r17,r7
 41018dc:	00000406 	br	41018f0 <___vfprintf_internal_r+0x12e8>
 41018e0:	b5800204 	addi	r22,r22,8
 41018e4:	ad7ffc04 	addi	r21,r21,-16
 41018e8:	a9000448 	cmpgei	r4,r21,17
 41018ec:	2001bd26 	beq	r4,zero,4101fe4 <___vfprintf_internal_r+0x19dc>
 41018f0:	10800044 	addi	r2,r2,1
 41018f4:	18c00404 	addi	r3,r3,16
 41018f8:	b4400015 	stw	r17,0(r22)
 41018fc:	b7000115 	stw	fp,4(r22)
 4101900:	d8c01c15 	stw	r3,112(sp)
 4101904:	d8801b15 	stw	r2,108(sp)
 4101908:	11000208 	cmpgei	r4,r2,8
 410190c:	203ff426 	beq	r4,zero,41018e0 <___vfprintf_internal_r+0x12d8>
 4101910:	d9801a04 	addi	r6,sp,104
 4101914:	900b883a 	mov	r5,r18
 4101918:	9809883a 	mov	r4,r19
 410191c:	41070e00 	call	41070e0 <__sprint_r>
 4101920:	103c481e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101924:	d8c01c17 	ldw	r3,112(sp)
 4101928:	d8801b17 	ldw	r2,108(sp)
 410192c:	dd802704 	addi	r22,sp,156
 4101930:	003fec06 	br	41018e4 <___vfprintf_internal_r+0x12dc>
 4101934:	4002a71e 	bne	r8,zero,41023d4 <___vfprintf_internal_r+0x1dcc>
 4101938:	0011883a 	mov	r8,zero
 410193c:	002b883a 	mov	r21,zero
 4101940:	dc402704 	addi	r17,sp,156
 4101944:	003d4706 	br	4100e64 <___vfprintf_internal_r+0x85c>
 4101948:	d8800417 	ldw	r2,16(sp)
 410194c:	1080004c 	andi	r2,r2,1
 4101950:	103f051e 	bne	r2,zero,4101568 <___vfprintf_internal_r+0xf60>
 4101954:	00800044 	movi	r2,1
 4101958:	dd401b15 	stw	r21,108(sp)
 410195c:	b4400015 	stw	r17,0(r22)
 4101960:	b0800115 	stw	r2,4(r22)
 4101964:	d8c01c15 	stw	r3,112(sp)
 4101968:	ad400208 	cmpgei	r21,r21,8
 410196c:	a800641e 	bne	r21,zero,4101b00 <___vfprintf_internal_r+0x14f8>
 4101970:	42000084 	addi	r8,r8,2
 4101974:	b5800404 	addi	r22,r22,16
 4101978:	003f2706 	br	4101618 <___vfprintf_internal_r+0x1010>
 410197c:	02ff260e 	bge	zero,r11,4101618 <___vfprintf_internal_r+0x1010>
 4101980:	58800450 	cmplti	r2,r11,17
 4101984:	01c10474 	movhi	r7,1041
 4101988:	10034c1e 	bne	r2,zero,41026bc <___vfprintf_internal_r+0x20b4>
 410198c:	39c32c04 	addi	r7,r7,3248
 4101990:	dc000715 	stw	r16,28(sp)
 4101994:	05800404 	movi	r22,16
 4101998:	5823883a 	mov	r17,r11
 410199c:	402b883a 	mov	r21,r8
 41019a0:	3821883a 	mov	r16,r7
 41019a4:	00000506 	br	41019bc <___vfprintf_internal_r+0x13b4>
 41019a8:	e7000204 	addi	fp,fp,8
 41019ac:	8c7ffc04 	addi	r17,r17,-16
 41019b0:	88800448 	cmpgei	r2,r17,17
 41019b4:	1001d626 	beq	r2,zero,4102110 <___vfprintf_internal_r+0x1b08>
 41019b8:	ad400044 	addi	r21,r21,1
 41019bc:	18c00404 	addi	r3,r3,16
 41019c0:	e4000015 	stw	r16,0(fp)
 41019c4:	e5800115 	stw	r22,4(fp)
 41019c8:	d8c01c15 	stw	r3,112(sp)
 41019cc:	dd401b15 	stw	r21,108(sp)
 41019d0:	a8800208 	cmpgei	r2,r21,8
 41019d4:	103ff426 	beq	r2,zero,41019a8 <___vfprintf_internal_r+0x13a0>
 41019d8:	d9801a04 	addi	r6,sp,104
 41019dc:	900b883a 	mov	r5,r18
 41019e0:	9809883a 	mov	r4,r19
 41019e4:	41070e00 	call	41070e0 <__sprint_r>
 41019e8:	103c161e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 41019ec:	dd401b17 	ldw	r21,108(sp)
 41019f0:	d8c01c17 	ldw	r3,112(sp)
 41019f4:	df002704 	addi	fp,sp,156
 41019f8:	003fec06 	br	41019ac <___vfprintf_internal_r+0x13a4>
 41019fc:	d9801a04 	addi	r6,sp,104
 4101a00:	900b883a 	mov	r5,r18
 4101a04:	9809883a 	mov	r4,r19
 4101a08:	41070e00 	call	41070e0 <__sprint_r>
 4101a0c:	103c0d1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101a10:	d8c01c17 	ldw	r3,112(sp)
 4101a14:	dd802704 	addi	r22,sp,156
 4101a18:	003bec06 	br	41009cc <___vfprintf_internal_r+0x3c4>
 4101a1c:	d8800417 	ldw	r2,16(sp)
 4101a20:	1080004c 	andi	r2,r2,1
 4101a24:	103bf626 	beq	r2,zero,4100a00 <___vfprintf_internal_r+0x3f8>
 4101a28:	003e1506 	br	4101280 <___vfprintf_internal_r+0xc78>
 4101a2c:	dc402704 	addi	r17,sp,156
 4101a30:	003d0c06 	br	4100e64 <___vfprintf_internal_r+0x85c>
 4101a34:	00800c04 	movi	r2,48
 4101a38:	d8801385 	stb	r2,78(sp)
 4101a3c:	df0013c5 	stb	fp,79(sp)
 4101a40:	63000094 	ori	r12,r12,2
 4101a44:	00800084 	movi	r2,2
 4101a48:	003c3b06 	br	4100b38 <___vfprintf_internal_r+0x530>
 4101a4c:	25000017 	ldw	r20,0(r4)
 4101a50:	002b883a 	mov	r21,zero
 4101a54:	d8c00615 	stw	r3,24(sp)
 4101a58:	00800044 	movi	r2,1
 4101a5c:	003c3606 	br	4100b38 <___vfprintf_internal_r+0x530>
 4101a60:	d9000517 	ldw	r4,20(sp)
 4101a64:	2005d7fa 	srai	r2,r4,31
 4101a68:	19000015 	stw	r4,0(r3)
 4101a6c:	18800115 	stw	r2,4(r3)
 4101a70:	003b1906 	br	41006d8 <___vfprintf_internal_r+0xd0>
 4101a74:	25000017 	ldw	r20,0(r4)
 4101a78:	002b883a 	mov	r21,zero
 4101a7c:	d8c00615 	stw	r3,24(sp)
 4101a80:	003d1b06 	br	4100ef0 <___vfprintf_internal_r+0x8e8>
 4101a84:	25000017 	ldw	r20,0(r4)
 4101a88:	002b883a 	mov	r21,zero
 4101a8c:	d8c00615 	stw	r3,24(sp)
 4101a90:	0005883a 	mov	r2,zero
 4101a94:	003c2806 	br	4100b38 <___vfprintf_internal_r+0x530>
 4101a98:	18800017 	ldw	r2,0(r3)
 4101a9c:	d8800915 	stw	r2,36(sp)
 4101aa0:	18800117 	ldw	r2,4(r3)
 4101aa4:	d8800a15 	stw	r2,40(sp)
 4101aa8:	003c5906 	br	4100c10 <___vfprintf_internal_r+0x608>
 4101aac:	25000017 	ldw	r20,0(r4)
 4101ab0:	d8c00615 	stw	r3,24(sp)
 4101ab4:	a02bd7fa 	srai	r21,r20,31
 4101ab8:	a805883a 	mov	r2,r21
 4101abc:	003cd706 	br	4100e1c <___vfprintf_internal_r+0x814>
 4101ac0:	0421c83a 	sub	r16,zero,r16
 4101ac4:	d8800615 	stw	r2,24(sp)
 4101ac8:	003d6306 	br	4101058 <___vfprintf_internal_r+0xa50>
 4101acc:	202b883a 	mov	r21,r4
 4101ad0:	057f4616 	blt	zero,r21,41017ec <___vfprintf_internal_r+0x11e4>
 4101ad4:	003f4f06 	br	4101814 <___vfprintf_internal_r+0x120c>
 4101ad8:	d8800417 	ldw	r2,16(sp)
 4101adc:	1080004c 	andi	r2,r2,1
 4101ae0:	103f531e 	bne	r2,zero,4101830 <___vfprintf_internal_r+0x1228>
 4101ae4:	d9000817 	ldw	r4,32(sp)
 4101ae8:	d9400717 	ldw	r5,28(sp)
 4101aec:	2545c83a 	sub	r2,r4,r21
 4101af0:	216bc83a 	sub	r21,r4,r5
 4101af4:	157f6e0e 	bge	r2,r21,41018b0 <___vfprintf_internal_r+0x12a8>
 4101af8:	102b883a 	mov	r21,r2
 4101afc:	003f6c06 	br	41018b0 <___vfprintf_internal_r+0x12a8>
 4101b00:	d9801a04 	addi	r6,sp,104
 4101b04:	900b883a 	mov	r5,r18
 4101b08:	9809883a 	mov	r4,r19
 4101b0c:	41070e00 	call	41070e0 <__sprint_r>
 4101b10:	103bcc1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101b14:	da001b17 	ldw	r8,108(sp)
 4101b18:	d8c01c17 	ldw	r3,112(sp)
 4101b1c:	dd802904 	addi	r22,sp,164
 4101b20:	42000044 	addi	r8,r8,1
 4101b24:	df002704 	addi	fp,sp,156
 4101b28:	003ebb06 	br	4101618 <___vfprintf_internal_r+0x1010>
 4101b2c:	002b883a 	mov	r21,zero
 4101b30:	003f3906 	br	4101818 <___vfprintf_internal_r+0x1210>
 4101b34:	bf000043 	ldbu	fp,1(r23)
 4101b38:	63000814 	ori	r12,r12,32
 4101b3c:	bdc00044 	addi	r23,r23,1
 4101b40:	e2c03fcc 	andi	r11,fp,255
 4101b44:	5ac0201c 	xori	r11,r11,128
 4101b48:	5affe004 	addi	r11,r11,-128
 4101b4c:	003afa06 	br	4100738 <___vfprintf_internal_r+0x130>
 4101b50:	d9801a04 	addi	r6,sp,104
 4101b54:	900b883a 	mov	r5,r18
 4101b58:	9809883a 	mov	r4,r19
 4101b5c:	41070e00 	call	41070e0 <__sprint_r>
 4101b60:	103bb81e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101b64:	d8c01c17 	ldw	r3,112(sp)
 4101b68:	dd802704 	addi	r22,sp,156
 4101b6c:	003dd006 	br	41012b0 <___vfprintf_internal_r+0xca8>
 4101b70:	408001f0 	cmpltui	r2,r8,7
 4101b74:	402b883a 	mov	r21,r8
 4101b78:	1001e726 	beq	r2,zero,4102318 <___vfprintf_internal_r+0x1d10>
 4101b7c:	04410474 	movhi	r17,1041
 4101b80:	a829883a 	mov	r20,r21
 4101b84:	d8c00615 	stw	r3,24(sp)
 4101b88:	8c432904 	addi	r17,r17,3236
 4101b8c:	003b6306 	br	410091c <___vfprintf_internal_r+0x314>
 4101b90:	01c10474 	movhi	r7,1041
 4101b94:	a9000450 	cmplti	r4,r21,17
 4101b98:	d8801b17 	ldw	r2,108(sp)
 4101b9c:	39c32c04 	addi	r7,r7,3248
 4101ba0:	2001c21e 	bne	r4,zero,41022ac <___vfprintf_internal_r+0x1ca4>
 4101ba4:	dc000e15 	stw	r16,56(sp)
 4101ba8:	07000404 	movi	fp,16
 4101bac:	3821883a 	mov	r16,r7
 4101bb0:	00000406 	br	4101bc4 <___vfprintf_internal_r+0x15bc>
 4101bb4:	b5800204 	addi	r22,r22,8
 4101bb8:	ad7ffc04 	addi	r21,r21,-16
 4101bbc:	a9000448 	cmpgei	r4,r21,17
 4101bc0:	2001b826 	beq	r4,zero,41022a4 <___vfprintf_internal_r+0x1c9c>
 4101bc4:	10800044 	addi	r2,r2,1
 4101bc8:	18c00404 	addi	r3,r3,16
 4101bcc:	b4000015 	stw	r16,0(r22)
 4101bd0:	b7000115 	stw	fp,4(r22)
 4101bd4:	d8c01c15 	stw	r3,112(sp)
 4101bd8:	d8801b15 	stw	r2,108(sp)
 4101bdc:	11000208 	cmpgei	r4,r2,8
 4101be0:	203ff426 	beq	r4,zero,4101bb4 <___vfprintf_internal_r+0x15ac>
 4101be4:	d9801a04 	addi	r6,sp,104
 4101be8:	900b883a 	mov	r5,r18
 4101bec:	9809883a 	mov	r4,r19
 4101bf0:	41070e00 	call	41070e0 <__sprint_r>
 4101bf4:	103b931e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101bf8:	d8c01c17 	ldw	r3,112(sp)
 4101bfc:	d8801b17 	ldw	r2,108(sp)
 4101c00:	dd802704 	addi	r22,sp,156
 4101c04:	003fec06 	br	4101bb8 <___vfprintf_internal_r+0x15b0>
 4101c08:	dc402704 	addi	r17,sp,156
 4101c0c:	a805883a 	mov	r2,r21
 4101c10:	dc000715 	stw	r16,28(sp)
 4101c14:	902b883a 	mov	r21,r18
 4101c18:	8821883a 	mov	r16,r17
 4101c1c:	db000415 	stw	r12,16(sp)
 4101c20:	a023883a 	mov	r17,r20
 4101c24:	da000e15 	stw	r8,56(sp)
 4101c28:	9829883a 	mov	r20,r19
 4101c2c:	1025883a 	mov	r18,r2
 4101c30:	6827883a 	mov	r19,r13
 4101c34:	8809883a 	mov	r4,r17
 4101c38:	900b883a 	mov	r5,r18
 4101c3c:	01800284 	movi	r6,10
 4101c40:	000f883a 	mov	r7,zero
 4101c44:	410a8fc0 	call	410a8fc <__umoddi3>
 4101c48:	10800c04 	addi	r2,r2,48
 4101c4c:	8809883a 	mov	r4,r17
 4101c50:	900b883a 	mov	r5,r18
 4101c54:	01800284 	movi	r6,10
 4101c58:	000f883a 	mov	r7,zero
 4101c5c:	80bfffc5 	stb	r2,-1(r16)
 4101c60:	410a2dc0 	call	410a2dc <__udivdi3>
 4101c64:	900d883a 	mov	r6,r18
 4101c68:	880f883a 	mov	r7,r17
 4101c6c:	843fffc4 	addi	r16,r16,-1
 4101c70:	1023883a 	mov	r17,r2
 4101c74:	1825883a 	mov	r18,r3
 4101c78:	303fee1e 	bne	r6,zero,4101c34 <___vfprintf_internal_r+0x162c>
 4101c7c:	39c002a8 	cmpgeui	r7,r7,10
 4101c80:	383fec1e 	bne	r7,zero,4101c34 <___vfprintf_internal_r+0x162c>
 4101c84:	8023883a 	mov	r17,r16
 4101c88:	d8802704 	addi	r2,sp,156
 4101c8c:	981b883a 	mov	r13,r19
 4101c90:	a825883a 	mov	r18,r21
 4101c94:	dc000717 	ldw	r16,28(sp)
 4101c98:	da000e17 	ldw	r8,56(sp)
 4101c9c:	a027883a 	mov	r19,r20
 4101ca0:	146bc83a 	sub	r21,r2,r17
 4101ca4:	003c6f06 	br	4100e64 <___vfprintf_internal_r+0x85c>
 4101ca8:	d8800517 	ldw	r2,20(sp)
 4101cac:	18800015 	stw	r2,0(r3)
 4101cb0:	003a8906 	br	41006d8 <___vfprintf_internal_r+0xd0>
 4101cb4:	d9801a04 	addi	r6,sp,104
 4101cb8:	900b883a 	mov	r5,r18
 4101cbc:	9809883a 	mov	r4,r19
 4101cc0:	41070e00 	call	41070e0 <__sprint_r>
 4101cc4:	103b5f1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101cc8:	d8c01c17 	ldw	r3,112(sp)
 4101ccc:	dd401b17 	ldw	r21,108(sp)
 4101cd0:	df002704 	addi	fp,sp,156
 4101cd4:	003e2b06 	br	4101584 <___vfprintf_internal_r+0xf7c>
 4101cd8:	d9801a04 	addi	r6,sp,104
 4101cdc:	900b883a 	mov	r5,r18
 4101ce0:	9809883a 	mov	r4,r19
 4101ce4:	41070e00 	call	41070e0 <__sprint_r>
 4101ce8:	103b561e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101cec:	d8c01c17 	ldw	r3,112(sp)
 4101cf0:	dd401b17 	ldw	r21,108(sp)
 4101cf4:	df002704 	addi	fp,sp,156
 4101cf8:	003e2d06 	br	41015b0 <___vfprintf_internal_r+0xfa8>
 4101cfc:	d9801a04 	addi	r6,sp,104
 4101d00:	900b883a 	mov	r5,r18
 4101d04:	9809883a 	mov	r4,r19
 4101d08:	da001115 	stw	r8,68(sp)
 4101d0c:	db400f15 	stw	r13,60(sp)
 4101d10:	db800e15 	stw	r14,56(sp)
 4101d14:	41070e00 	call	41070e0 <__sprint_r>
 4101d18:	103b4a1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4101d1c:	d8c01c17 	ldw	r3,112(sp)
 4101d20:	da001117 	ldw	r8,68(sp)
 4101d24:	db400f17 	ldw	r13,60(sp)
 4101d28:	db800e17 	ldw	r14,56(sp)
 4101d2c:	dd802704 	addi	r22,sp,156
 4101d30:	003b0706 	br	4100950 <___vfprintf_internal_r+0x348>
 4101d34:	d8801b17 	ldw	r2,108(sp)
 4101d38:	01010474 	movhi	r4,1041
 4101d3c:	21032b04 	addi	r4,r4,3244
 4101d40:	10800044 	addi	r2,r2,1
 4101d44:	18c00044 	addi	r3,r3,1
 4101d48:	b1000015 	stw	r4,0(r22)
 4101d4c:	01000044 	movi	r4,1
 4101d50:	d8801b15 	stw	r2,108(sp)
 4101d54:	b1000115 	stw	r4,4(r22)
 4101d58:	d8c01c15 	stw	r3,112(sp)
 4101d5c:	10800208 	cmpgei	r2,r2,8
 4101d60:	1001641e 	bne	r2,zero,41022f4 <___vfprintf_internal_r+0x1cec>
 4101d64:	b5800204 	addi	r22,r22,8
 4101d68:	2800bd1e 	bne	r5,zero,4102060 <___vfprintf_internal_r+0x1a58>
 4101d6c:	d8800417 	ldw	r2,16(sp)
 4101d70:	d9000817 	ldw	r4,32(sp)
 4101d74:	1080004c 	andi	r2,r2,1
 4101d78:	1104b03a 	or	r2,r2,r4
 4101d7c:	103b2026 	beq	r2,zero,4100a00 <___vfprintf_internal_r+0x3f8>
 4101d80:	d8800d17 	ldw	r2,52(sp)
 4101d84:	d9000b17 	ldw	r4,44(sp)
 4101d88:	b0800015 	stw	r2,0(r22)
 4101d8c:	d8801b17 	ldw	r2,108(sp)
 4101d90:	20c7883a 	add	r3,r4,r3
 4101d94:	b1000115 	stw	r4,4(r22)
 4101d98:	10800044 	addi	r2,r2,1
 4101d9c:	d8c01c15 	stw	r3,112(sp)
 4101da0:	d8801b15 	stw	r2,108(sp)
 4101da4:	11000208 	cmpgei	r4,r2,8
 4101da8:	2001771e 	bne	r4,zero,4102388 <___vfprintf_internal_r+0x1d80>
 4101dac:	b5800204 	addi	r22,r22,8
 4101db0:	d9000817 	ldw	r4,32(sp)
 4101db4:	10800044 	addi	r2,r2,1
 4101db8:	d8801b15 	stw	r2,108(sp)
 4101dbc:	20c7883a 	add	r3,r4,r3
 4101dc0:	b4400015 	stw	r17,0(r22)
 4101dc4:	b1000115 	stw	r4,4(r22)
 4101dc8:	d8c01c15 	stw	r3,112(sp)
 4101dcc:	10800208 	cmpgei	r2,r2,8
 4101dd0:	103b0a26 	beq	r2,zero,41009fc <___vfprintf_internal_r+0x3f4>
 4101dd4:	003e1906 	br	410163c <___vfprintf_internal_r+0x1034>
 4101dd8:	8825883a 	mov	r18,r17
 4101ddc:	003b1906 	br	4100a44 <___vfprintf_internal_r+0x43c>
 4101de0:	d9000917 	ldw	r4,36(sp)
 4101de4:	d9400a17 	ldw	r5,40(sp)
 4101de8:	da000615 	stw	r8,24(sp)
 4101dec:	200d883a 	mov	r6,r4
 4101df0:	280f883a 	mov	r7,r5
 4101df4:	db000415 	stw	r12,16(sp)
 4101df8:	410d3b80 	call	410d3b8 <__unorddf2>
 4101dfc:	db000417 	ldw	r12,16(sp)
 4101e00:	da000617 	ldw	r8,24(sp)
 4101e04:	1002061e 	bne	r2,zero,4102620 <___vfprintf_internal_r+0x2018>
 4101e08:	057ff7c4 	movi	r21,-33
 4101e0c:	40bfffe0 	cmpeqi	r2,r8,-1
 4101e10:	e56a703a 	and	r21,fp,r21
 4101e14:	1001b41e 	bne	r2,zero,41024e8 <___vfprintf_internal_r+0x1ee0>
 4101e18:	a88011d8 	cmpnei	r2,r21,71
 4101e1c:	10015726 	beq	r2,zero,410237c <___vfprintf_internal_r+0x1d74>
 4101e20:	60804014 	ori	r2,r12,256
 4101e24:	d8800415 	stw	r2,16(sp)
 4101e28:	d8800a17 	ldw	r2,40(sp)
 4101e2c:	10012d16 	blt	r2,zero,41022e4 <___vfprintf_internal_r+0x1cdc>
 4101e30:	dd000a17 	ldw	r20,40(sp)
 4101e34:	d8000605 	stb	zero,24(sp)
 4101e38:	e08019a0 	cmpeqi	r2,fp,102
 4101e3c:	d8800f15 	stw	r2,60(sp)
 4101e40:	1000d21e 	bne	r2,zero,410218c <___vfprintf_internal_r+0x1b84>
 4101e44:	e08011a0 	cmpeqi	r2,fp,70
 4101e48:	1000d01e 	bne	r2,zero,410218c <___vfprintf_internal_r+0x1b84>
 4101e4c:	a8801158 	cmpnei	r2,r21,69
 4101e50:	10016226 	beq	r2,zero,41023dc <___vfprintf_internal_r+0x1dd4>
 4101e54:	d8801804 	addi	r2,sp,96
 4101e58:	d8800315 	stw	r2,12(sp)
 4101e5c:	d9400917 	ldw	r5,36(sp)
 4101e60:	d8801504 	addi	r2,sp,84
 4101e64:	d8800215 	stw	r2,8(sp)
 4101e68:	d8801404 	addi	r2,sp,80
 4101e6c:	da000015 	stw	r8,0(sp)
 4101e70:	9809883a 	mov	r4,r19
 4101e74:	d8800115 	stw	r2,4(sp)
 4101e78:	01c00084 	movi	r7,2
 4101e7c:	a00d883a 	mov	r6,r20
 4101e80:	db000815 	stw	r12,32(sp)
 4101e84:	da000715 	stw	r8,28(sp)
 4101e88:	4102b6c0 	call	4102b6c <_dtoa_r>
 4101e8c:	da000717 	ldw	r8,28(sp)
 4101e90:	e10019d8 	cmpnei	r4,fp,103
 4101e94:	db000817 	ldw	r12,32(sp)
 4101e98:	1023883a 	mov	r17,r2
 4101e9c:	4007883a 	mov	r3,r8
 4101ea0:	2001621e 	bne	r4,zero,410242c <___vfprintf_internal_r+0x1e24>
 4101ea4:	6080004c 	andi	r2,r12,1
 4101ea8:	1001621e 	bne	r2,zero,4102434 <___vfprintf_internal_r+0x1e2c>
 4101eac:	d8801417 	ldw	r2,80(sp)
 4101eb0:	ad4011e0 	cmpeqi	r21,r21,71
 4101eb4:	d8800715 	stw	r2,28(sp)
 4101eb8:	d8801817 	ldw	r2,96(sp)
 4101ebc:	1445c83a 	sub	r2,r2,r17
 4101ec0:	d8800815 	stw	r2,32(sp)
 4101ec4:	a8000526 	beq	r21,zero,4101edc <___vfprintf_internal_r+0x18d4>
 4101ec8:	d8c00717 	ldw	r3,28(sp)
 4101ecc:	18bfff50 	cmplti	r2,r3,-3
 4101ed0:	1000011e 	bne	r2,zero,4101ed8 <___vfprintf_internal_r+0x18d0>
 4101ed4:	40c1670e 	bge	r8,r3,4102474 <___vfprintf_internal_r+0x1e6c>
 4101ed8:	e73fff84 	addi	fp,fp,-2
 4101edc:	d8800717 	ldw	r2,28(sp)
 4101ee0:	df001645 	stb	fp,89(sp)
 4101ee4:	157fffc4 	addi	r21,r2,-1
 4101ee8:	dd401415 	stw	r21,80(sp)
 4101eec:	a801d416 	blt	r21,zero,4102640 <___vfprintf_internal_r+0x2038>
 4101ef0:	00800ac4 	movi	r2,43
 4101ef4:	d8801685 	stb	r2,90(sp)
 4101ef8:	a8800290 	cmplti	r2,r21,10
 4101efc:	1001c11e 	bne	r2,zero,4102604 <___vfprintf_internal_r+0x1ffc>
 4101f00:	d98019c4 	addi	r6,sp,103
 4101f04:	9029883a 	mov	r20,r18
 4101f08:	dc400715 	stw	r17,28(sp)
 4101f0c:	8025883a 	mov	r18,r16
 4101f10:	db000f15 	stw	r12,60(sp)
 4101f14:	3021883a 	mov	r16,r6
 4101f18:	a809883a 	mov	r4,r21
 4101f1c:	01400284 	movi	r5,10
 4101f20:	41003f80 	call	41003f8 <__modsi3>
 4101f24:	10800c04 	addi	r2,r2,48
 4101f28:	a809883a 	mov	r4,r21
 4101f2c:	80bfffc5 	stb	r2,-1(r16)
 4101f30:	01400284 	movi	r5,10
 4101f34:	41003780 	call	4100378 <__divsi3>
 4101f38:	a9001908 	cmpgei	r4,r21,100
 4101f3c:	8023883a 	mov	r17,r16
 4101f40:	102b883a 	mov	r21,r2
 4101f44:	843fffc4 	addi	r16,r16,-1
 4101f48:	203ff31e 	bne	r4,zero,4101f18 <___vfprintf_internal_r+0x1910>
 4101f4c:	800d883a 	mov	r6,r16
 4101f50:	11000c04 	addi	r4,r2,48
 4101f54:	9021883a 	mov	r16,r18
 4101f58:	a025883a 	mov	r18,r20
 4101f5c:	8829883a 	mov	r20,r17
 4101f60:	a0bfff84 	addi	r2,r20,-2
 4101f64:	313fffc5 	stb	r4,-1(r6)
 4101f68:	d8c019c4 	addi	r3,sp,103
 4101f6c:	db000f17 	ldw	r12,60(sp)
 4101f70:	dc400717 	ldw	r17,28(sp)
 4101f74:	10c1d62e 	bgeu	r2,r3,41026d0 <___vfprintf_internal_r+0x20c8>
 4101f78:	d8c016c4 	addi	r3,sp,91
 4101f7c:	00000106 	br	4101f84 <___vfprintf_internal_r+0x197c>
 4101f80:	11000003 	ldbu	r4,0(r2)
 4101f84:	19000005 	stb	r4,0(r3)
 4101f88:	10800044 	addi	r2,r2,1
 4101f8c:	d90019c4 	addi	r4,sp,103
 4101f90:	18c00044 	addi	r3,r3,1
 4101f94:	113ffa1e 	bne	r2,r4,4101f80 <___vfprintf_internal_r+0x1978>
 4101f98:	d8801a44 	addi	r2,sp,105
 4101f9c:	d8c016c4 	addi	r3,sp,91
 4101fa0:	1505c83a 	sub	r2,r2,r20
 4101fa4:	1885883a 	add	r2,r3,r2
 4101fa8:	d8c01644 	addi	r3,sp,89
 4101fac:	10c5c83a 	sub	r2,r2,r3
 4101fb0:	d8801015 	stw	r2,64(sp)
 4101fb4:	d8c00817 	ldw	r3,32(sp)
 4101fb8:	d9001017 	ldw	r4,64(sp)
 4101fbc:	18800088 	cmpgei	r2,r3,2
 4101fc0:	192b883a 	add	r21,r3,r4
 4101fc4:	1001aa26 	beq	r2,zero,4102670 <___vfprintf_internal_r+0x2068>
 4101fc8:	d8800b17 	ldw	r2,44(sp)
 4101fcc:	a8ab883a 	add	r21,r21,r2
 4101fd0:	a829883a 	mov	r20,r21
 4101fd4:	a800010e 	bge	r21,zero,4101fdc <___vfprintf_internal_r+0x19d4>
 4101fd8:	0029883a 	mov	r20,zero
 4101fdc:	d8000715 	stw	zero,28(sp)
 4101fe0:	00009d06 	br	4102258 <___vfprintf_internal_r+0x1c50>
 4101fe4:	880f883a 	mov	r7,r17
 4101fe8:	10800044 	addi	r2,r2,1
 4101fec:	1d47883a 	add	r3,r3,r21
 4101ff0:	b1c00015 	stw	r7,0(r22)
 4101ff4:	003a7c06 	br	41009e8 <___vfprintf_internal_r+0x3e0>
 4101ff8:	d9801a04 	addi	r6,sp,104
 4101ffc:	900b883a 	mov	r5,r18
 4102000:	9809883a 	mov	r4,r19
 4102004:	41070e00 	call	41070e0 <__sprint_r>
 4102008:	103a8e1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 410200c:	d8c01c17 	ldw	r3,112(sp)
 4102010:	dd802704 	addi	r22,sp,156
 4102014:	003c9706 	br	4101274 <___vfprintf_internal_r+0xc6c>
 4102018:	d9801a04 	addi	r6,sp,104
 410201c:	900b883a 	mov	r5,r18
 4102020:	9809883a 	mov	r4,r19
 4102024:	da000e15 	stw	r8,56(sp)
 4102028:	41070e00 	call	41070e0 <__sprint_r>
 410202c:	103a851e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4102030:	d8c01c17 	ldw	r3,112(sp)
 4102034:	da000e17 	ldw	r8,56(sp)
 4102038:	dd802704 	addi	r22,sp,156
 410203c:	003a6106 	br	41009c4 <___vfprintf_internal_r+0x3bc>
 4102040:	8809883a 	mov	r4,r17
 4102044:	db000415 	stw	r12,16(sp)
 4102048:	d8c00615 	stw	r3,24(sp)
 410204c:	4106f540 	call	4106f54 <strlen>
 4102050:	db000417 	ldw	r12,16(sp)
 4102054:	102b883a 	mov	r21,r2
 4102058:	1029883a 	mov	r20,r2
 410205c:	003a2f06 	br	410091c <___vfprintf_internal_r+0x314>
 4102060:	d8800d17 	ldw	r2,52(sp)
 4102064:	d9000b17 	ldw	r4,44(sp)
 4102068:	b0800015 	stw	r2,0(r22)
 410206c:	d8801b17 	ldw	r2,108(sp)
 4102070:	20c7883a 	add	r3,r4,r3
 4102074:	b1000115 	stw	r4,4(r22)
 4102078:	10800044 	addi	r2,r2,1
 410207c:	d8c01c15 	stw	r3,112(sp)
 4102080:	d8801b15 	stw	r2,108(sp)
 4102084:	11000208 	cmpgei	r4,r2,8
 4102088:	2000bf1e 	bne	r4,zero,4102388 <___vfprintf_internal_r+0x1d80>
 410208c:	b5800204 	addi	r22,r22,8
 4102090:	283f470e 	bge	r5,zero,4101db0 <___vfprintf_internal_r+0x17a8>
 4102094:	01c10474 	movhi	r7,1041
 4102098:	293ffc08 	cmpgei	r4,r5,-16
 410209c:	39c32c04 	addi	r7,r7,3248
 41020a0:	0179c83a 	sub	fp,zero,r5
 41020a4:	20013f1e 	bne	r4,zero,41025a4 <___vfprintf_internal_r+0x1f9c>
 41020a8:	dc000715 	stw	r16,28(sp)
 41020ac:	05400404 	movi	r21,16
 41020b0:	9021883a 	mov	r16,r18
 41020b4:	3825883a 	mov	r18,r7
 41020b8:	00000406 	br	41020cc <___vfprintf_internal_r+0x1ac4>
 41020bc:	b5800204 	addi	r22,r22,8
 41020c0:	e73ffc04 	addi	fp,fp,-16
 41020c4:	e1800448 	cmpgei	r6,fp,17
 41020c8:	30013326 	beq	r6,zero,4102598 <___vfprintf_internal_r+0x1f90>
 41020cc:	10800044 	addi	r2,r2,1
 41020d0:	18c00404 	addi	r3,r3,16
 41020d4:	b4800015 	stw	r18,0(r22)
 41020d8:	b5400115 	stw	r21,4(r22)
 41020dc:	d8c01c15 	stw	r3,112(sp)
 41020e0:	d8801b15 	stw	r2,108(sp)
 41020e4:	11800208 	cmpgei	r6,r2,8
 41020e8:	303ff426 	beq	r6,zero,41020bc <___vfprintf_internal_r+0x1ab4>
 41020ec:	d9801a04 	addi	r6,sp,104
 41020f0:	800b883a 	mov	r5,r16
 41020f4:	9809883a 	mov	r4,r19
 41020f8:	41070e00 	call	41070e0 <__sprint_r>
 41020fc:	1001721e 	bne	r2,zero,41026c8 <___vfprintf_internal_r+0x20c0>
 4102100:	d8c01c17 	ldw	r3,112(sp)
 4102104:	d8801b17 	ldw	r2,108(sp)
 4102108:	dd802704 	addi	r22,sp,156
 410210c:	003fec06 	br	41020c0 <___vfprintf_internal_r+0x1ab8>
 4102110:	800f883a 	mov	r7,r16
 4102114:	dc000717 	ldw	r16,28(sp)
 4102118:	8817883a 	mov	r11,r17
 410211c:	aa000044 	addi	r8,r21,1
 4102120:	e0800204 	addi	r2,fp,8
 4102124:	1ac7883a 	add	r3,r3,r11
 4102128:	e1c00015 	stw	r7,0(fp)
 410212c:	e2c00115 	stw	r11,4(fp)
 4102130:	d8c01c15 	stw	r3,112(sp)
 4102134:	da001b15 	stw	r8,108(sp)
 4102138:	41000208 	cmpgei	r4,r8,8
 410213c:	203e701e 	bne	r4,zero,4101b00 <___vfprintf_internal_r+0x14f8>
 4102140:	42000044 	addi	r8,r8,1
 4102144:	15800204 	addi	r22,r2,8
 4102148:	1039883a 	mov	fp,r2
 410214c:	003d3206 	br	4101618 <___vfprintf_internal_r+0x1010>
 4102150:	d8800617 	ldw	r2,24(sp)
 4102154:	d8c00615 	stw	r3,24(sp)
 4102158:	15000017 	ldw	r20,0(r2)
 410215c:	a02bd7fa 	srai	r21,r20,31
 4102160:	a805883a 	mov	r2,r21
 4102164:	003b2d06 	br	4100e1c <___vfprintf_internal_r+0x814>
 4102168:	d8800617 	ldw	r2,24(sp)
 410216c:	002b883a 	mov	r21,zero
 4102170:	d8c00615 	stw	r3,24(sp)
 4102174:	15000017 	ldw	r20,0(r2)
 4102178:	0005883a 	mov	r2,zero
 410217c:	003a6e06 	br	4100b38 <___vfprintf_internal_r+0x530>
 4102180:	04410474 	movhi	r17,1041
 4102184:	8c431b04 	addi	r17,r17,3180
 4102188:	003ac606 	br	4100ca4 <___vfprintf_internal_r+0x69c>
 410218c:	d8801804 	addi	r2,sp,96
 4102190:	d8800315 	stw	r2,12(sp)
 4102194:	d9400917 	ldw	r5,36(sp)
 4102198:	d8801504 	addi	r2,sp,84
 410219c:	d8800215 	stw	r2,8(sp)
 41021a0:	d8801404 	addi	r2,sp,80
 41021a4:	da000015 	stw	r8,0(sp)
 41021a8:	d8800115 	stw	r2,4(sp)
 41021ac:	01c000c4 	movi	r7,3
 41021b0:	a00d883a 	mov	r6,r20
 41021b4:	9809883a 	mov	r4,r19
 41021b8:	db000815 	stw	r12,32(sp)
 41021bc:	da000715 	stw	r8,28(sp)
 41021c0:	4102b6c0 	call	4102b6c <_dtoa_r>
 41021c4:	da000717 	ldw	r8,28(sp)
 41021c8:	1023883a 	mov	r17,r2
 41021cc:	db000817 	ldw	r12,32(sp)
 41021d0:	1207883a 	add	r3,r2,r8
 41021d4:	88800007 	ldb	r2,0(r17)
 41021d8:	10800c20 	cmpeqi	r2,r2,48
 41021dc:	1000571e 	bne	r2,zero,410233c <___vfprintf_internal_r+0x1d34>
 41021e0:	d8801417 	ldw	r2,80(sp)
 41021e4:	1893883a 	add	r9,r3,r2
 41021e8:	d9000917 	ldw	r4,36(sp)
 41021ec:	000d883a 	mov	r6,zero
 41021f0:	000f883a 	mov	r7,zero
 41021f4:	a00b883a 	mov	r5,r20
 41021f8:	da401115 	stw	r9,68(sp)
 41021fc:	da000815 	stw	r8,32(sp)
 4102200:	db000715 	stw	r12,28(sp)
 4102204:	410c1080 	call	410c108 <__eqdf2>
 4102208:	db000717 	ldw	r12,28(sp)
 410220c:	da000817 	ldw	r8,32(sp)
 4102210:	da401117 	ldw	r9,68(sp)
 4102214:	1000891e 	bne	r2,zero,410243c <___vfprintf_internal_r+0x1e34>
 4102218:	4805883a 	mov	r2,r9
 410221c:	d8c01417 	ldw	r3,80(sp)
 4102220:	1445c83a 	sub	r2,r2,r17
 4102224:	ad4011d8 	cmpnei	r21,r21,71
 4102228:	d8c00715 	stw	r3,28(sp)
 410222c:	d8800815 	stw	r2,32(sp)
 4102230:	a83f2526 	beq	r21,zero,4101ec8 <___vfprintf_internal_r+0x18c0>
 4102234:	d8800f17 	ldw	r2,60(sp)
 4102238:	103f2826 	beq	r2,zero,4101edc <___vfprintf_internal_r+0x18d4>
 410223c:	d8c00717 	ldw	r3,28(sp)
 4102240:	6080004c 	andi	r2,r12,1
 4102244:	1204b03a 	or	r2,r2,r8
 4102248:	00c1140e 	bge	zero,r3,410269c <___vfprintf_internal_r+0x2094>
 410224c:	1001011e 	bne	r2,zero,4102654 <___vfprintf_internal_r+0x204c>
 4102250:	dd400717 	ldw	r21,28(sp)
 4102254:	a829883a 	mov	r20,r21
 4102258:	d8800607 	ldb	r2,24(sp)
 410225c:	10008026 	beq	r2,zero,4102460 <___vfprintf_internal_r+0x1e58>
 4102260:	00800b44 	movi	r2,45
 4102264:	d8801345 	stb	r2,77(sp)
 4102268:	d8800e17 	ldw	r2,56(sp)
 410226c:	0011883a 	mov	r8,zero
 4102270:	d8800615 	stw	r2,24(sp)
 4102274:	003b0306 	br	4100e84 <___vfprintf_internal_r+0x87c>
 4102278:	d8800617 	ldw	r2,24(sp)
 410227c:	002b883a 	mov	r21,zero
 4102280:	d8c00615 	stw	r3,24(sp)
 4102284:	15000017 	ldw	r20,0(r2)
 4102288:	00800044 	movi	r2,1
 410228c:	003a2a06 	br	4100b38 <___vfprintf_internal_r+0x530>
 4102290:	d8800617 	ldw	r2,24(sp)
 4102294:	002b883a 	mov	r21,zero
 4102298:	d8c00615 	stw	r3,24(sp)
 410229c:	15000017 	ldw	r20,0(r2)
 41022a0:	003b1306 	br	4100ef0 <___vfprintf_internal_r+0x8e8>
 41022a4:	800f883a 	mov	r7,r16
 41022a8:	dc000e17 	ldw	r16,56(sp)
 41022ac:	10800044 	addi	r2,r2,1
 41022b0:	1d47883a 	add	r3,r3,r21
 41022b4:	d8801b15 	stw	r2,108(sp)
 41022b8:	b1c00015 	stw	r7,0(r22)
 41022bc:	b5400115 	stw	r21,4(r22)
 41022c0:	d8c01c15 	stw	r3,112(sp)
 41022c4:	10800208 	cmpgei	r2,r2,8
 41022c8:	10003a1e 	bne	r2,zero,41023b4 <___vfprintf_internal_r+0x1dac>
 41022cc:	b5800204 	addi	r22,r22,8
 41022d0:	003d5406 	br	4101824 <___vfprintf_internal_r+0x121c>
 41022d4:	00800b44 	movi	r2,45
 41022d8:	d8801345 	stb	r2,77(sp)
 41022dc:	03400b44 	movi	r13,45
 41022e0:	003a6c06 	br	4100c94 <___vfprintf_internal_r+0x68c>
 41022e4:	1520003c 	xorhi	r20,r2,32768
 41022e8:	00800b44 	movi	r2,45
 41022ec:	d8800605 	stb	r2,24(sp)
 41022f0:	003ed106 	br	4101e38 <___vfprintf_internal_r+0x1830>
 41022f4:	d9801a04 	addi	r6,sp,104
 41022f8:	900b883a 	mov	r5,r18
 41022fc:	9809883a 	mov	r4,r19
 4102300:	41070e00 	call	41070e0 <__sprint_r>
 4102304:	1039cf1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4102308:	d9401417 	ldw	r5,80(sp)
 410230c:	d8c01c17 	ldw	r3,112(sp)
 4102310:	dd802704 	addi	r22,sp,156
 4102314:	003e9406 	br	4101d68 <___vfprintf_internal_r+0x1760>
 4102318:	05400184 	movi	r21,6
 410231c:	003e1706 	br	4101b7c <___vfprintf_internal_r+0x1574>
 4102320:	d9401345 	stb	r5,77(sp)
 4102324:	00397706 	br	4100904 <___vfprintf_internal_r+0x2fc>
 4102328:	d9801a04 	addi	r6,sp,104
 410232c:	900b883a 	mov	r5,r18
 4102330:	9809883a 	mov	r4,r19
 4102334:	41070e00 	call	41070e0 <__sprint_r>
 4102338:	0039c206 	br	4100a44 <___vfprintf_internal_r+0x43c>
 410233c:	d9000917 	ldw	r4,36(sp)
 4102340:	000d883a 	mov	r6,zero
 4102344:	000f883a 	mov	r7,zero
 4102348:	a00b883a 	mov	r5,r20
 410234c:	d8c01115 	stw	r3,68(sp)
 4102350:	da000815 	stw	r8,32(sp)
 4102354:	db000715 	stw	r12,28(sp)
 4102358:	410c1080 	call	410c108 <__eqdf2>
 410235c:	db000717 	ldw	r12,28(sp)
 4102360:	da000817 	ldw	r8,32(sp)
 4102364:	d8c01117 	ldw	r3,68(sp)
 4102368:	103f9d26 	beq	r2,zero,41021e0 <___vfprintf_internal_r+0x1bd8>
 410236c:	00800044 	movi	r2,1
 4102370:	1205c83a 	sub	r2,r2,r8
 4102374:	d8801415 	stw	r2,80(sp)
 4102378:	003f9a06 	br	41021e4 <___vfprintf_internal_r+0x1bdc>
 410237c:	403ea81e 	bne	r8,zero,4101e20 <___vfprintf_internal_r+0x1818>
 4102380:	02000044 	movi	r8,1
 4102384:	003ea606 	br	4101e20 <___vfprintf_internal_r+0x1818>
 4102388:	d9801a04 	addi	r6,sp,104
 410238c:	900b883a 	mov	r5,r18
 4102390:	9809883a 	mov	r4,r19
 4102394:	41070e00 	call	41070e0 <__sprint_r>
 4102398:	1039aa1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 410239c:	d9401417 	ldw	r5,80(sp)
 41023a0:	d8c01c17 	ldw	r3,112(sp)
 41023a4:	d8801b17 	ldw	r2,108(sp)
 41023a8:	dd802704 	addi	r22,sp,156
 41023ac:	283e800e 	bge	r5,zero,4101db0 <___vfprintf_internal_r+0x17a8>
 41023b0:	003f3806 	br	4102094 <___vfprintf_internal_r+0x1a8c>
 41023b4:	d9801a04 	addi	r6,sp,104
 41023b8:	900b883a 	mov	r5,r18
 41023bc:	9809883a 	mov	r4,r19
 41023c0:	41070e00 	call	41070e0 <__sprint_r>
 41023c4:	10399f1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 41023c8:	d8c01c17 	ldw	r3,112(sp)
 41023cc:	dd802704 	addi	r22,sp,156
 41023d0:	003d1406 	br	4101824 <___vfprintf_internal_r+0x121c>
 41023d4:	db000417 	ldw	r12,16(sp)
 41023d8:	003a9d06 	br	4100e50 <___vfprintf_internal_r+0x848>
 41023dc:	d8801804 	addi	r2,sp,96
 41023e0:	d8800315 	stw	r2,12(sp)
 41023e4:	d9400917 	ldw	r5,36(sp)
 41023e8:	d8801504 	addi	r2,sp,84
 41023ec:	40c00044 	addi	r3,r8,1
 41023f0:	d8800215 	stw	r2,8(sp)
 41023f4:	d8801404 	addi	r2,sp,80
 41023f8:	d8c00015 	stw	r3,0(sp)
 41023fc:	d8800115 	stw	r2,4(sp)
 4102400:	01c00084 	movi	r7,2
 4102404:	a00d883a 	mov	r6,r20
 4102408:	9809883a 	mov	r4,r19
 410240c:	db001115 	stw	r12,68(sp)
 4102410:	da000815 	stw	r8,32(sp)
 4102414:	d8c00715 	stw	r3,28(sp)
 4102418:	4102b6c0 	call	4102b6c <_dtoa_r>
 410241c:	d8c00717 	ldw	r3,28(sp)
 4102420:	da000817 	ldw	r8,32(sp)
 4102424:	db001117 	ldw	r12,68(sp)
 4102428:	1023883a 	mov	r17,r2
 410242c:	e08011d8 	cmpnei	r2,fp,71
 4102430:	103e9c26 	beq	r2,zero,4101ea4 <___vfprintf_internal_r+0x189c>
 4102434:	88d3883a 	add	r9,r17,r3
 4102438:	003f6b06 	br	41021e8 <___vfprintf_internal_r+0x1be0>
 410243c:	d8801817 	ldw	r2,96(sp)
 4102440:	127f762e 	bgeu	r2,r9,410221c <___vfprintf_internal_r+0x1c14>
 4102444:	01000c04 	movi	r4,48
 4102448:	10c00044 	addi	r3,r2,1
 410244c:	d8c01815 	stw	r3,96(sp)
 4102450:	11000005 	stb	r4,0(r2)
 4102454:	d8801817 	ldw	r2,96(sp)
 4102458:	127ffb36 	bltu	r2,r9,4102448 <___vfprintf_internal_r+0x1e40>
 410245c:	003f6f06 	br	410221c <___vfprintf_internal_r+0x1c14>
 4102460:	d8800e17 	ldw	r2,56(sp)
 4102464:	db401343 	ldbu	r13,77(sp)
 4102468:	0011883a 	mov	r8,zero
 410246c:	d8800615 	stw	r2,24(sp)
 4102470:	003a8006 	br	4100e74 <___vfprintf_internal_r+0x86c>
 4102474:	d8800717 	ldw	r2,28(sp)
 4102478:	d8c00817 	ldw	r3,32(sp)
 410247c:	10c02b16 	blt	r2,r3,410252c <___vfprintf_internal_r+0x1f24>
 4102480:	6300004c 	andi	r12,r12,1
 4102484:	6000581e 	bne	r12,zero,41025e8 <___vfprintf_internal_r+0x1fe0>
 4102488:	1029883a 	mov	r20,r2
 410248c:	1000010e 	bge	r2,zero,4102494 <___vfprintf_internal_r+0x1e8c>
 4102490:	0029883a 	mov	r20,zero
 4102494:	dd400717 	ldw	r21,28(sp)
 4102498:	070019c4 	movi	fp,103
 410249c:	003f6e06 	br	4102258 <___vfprintf_internal_r+0x1c50>
 41024a0:	d9801a04 	addi	r6,sp,104
 41024a4:	900b883a 	mov	r5,r18
 41024a8:	9809883a 	mov	r4,r19
 41024ac:	41070e00 	call	41070e0 <__sprint_r>
 41024b0:	1039641e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 41024b4:	dd401417 	ldw	r21,80(sp)
 41024b8:	d8c01c17 	ldw	r3,112(sp)
 41024bc:	dd802704 	addi	r22,sp,156
 41024c0:	003ce706 	br	4101860 <___vfprintf_internal_r+0x1258>
 41024c4:	d9801a04 	addi	r6,sp,104
 41024c8:	900b883a 	mov	r5,r18
 41024cc:	9809883a 	mov	r4,r19
 41024d0:	41070e00 	call	41070e0 <__sprint_r>
 41024d4:	10395b1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 41024d8:	d8c01c17 	ldw	r3,112(sp)
 41024dc:	dd802704 	addi	r22,sp,156
 41024e0:	a83ccd0e 	bge	r21,zero,4101818 <___vfprintf_internal_r+0x1210>
 41024e4:	003d9106 	br	4101b2c <___vfprintf_internal_r+0x1524>
 41024e8:	02000184 	movi	r8,6
 41024ec:	003e4c06 	br	4101e20 <___vfprintf_internal_r+0x1818>
 41024f0:	d9801a04 	addi	r6,sp,104
 41024f4:	900b883a 	mov	r5,r18
 41024f8:	9809883a 	mov	r4,r19
 41024fc:	41070e00 	call	41070e0 <__sprint_r>
 4102500:	1039501e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 4102504:	d8801417 	ldw	r2,80(sp)
 4102508:	d9000817 	ldw	r4,32(sp)
 410250c:	d8c01c17 	ldw	r3,112(sp)
 4102510:	dd802704 	addi	r22,sp,156
 4102514:	2085c83a 	sub	r2,r4,r2
 4102518:	003ce506 	br	41018b0 <___vfprintf_internal_r+0x12a8>
 410251c:	4029883a 	mov	r20,r8
 4102520:	d8c00615 	stw	r3,24(sp)
 4102524:	402b883a 	mov	r21,r8
 4102528:	0038fc06 	br	410091c <___vfprintf_internal_r+0x314>
 410252c:	d8800817 	ldw	r2,32(sp)
 4102530:	d8c00b17 	ldw	r3,44(sp)
 4102534:	10eb883a 	add	r21,r2,r3
 4102538:	d8800717 	ldw	r2,28(sp)
 410253c:	00800316 	blt	zero,r2,410254c <___vfprintf_internal_r+0x1f44>
 4102540:	d8800717 	ldw	r2,28(sp)
 4102544:	a8abc83a 	sub	r21,r21,r2
 4102548:	ad400044 	addi	r21,r21,1
 410254c:	a829883a 	mov	r20,r21
 4102550:	a8002a16 	blt	r21,zero,41025fc <___vfprintf_internal_r+0x1ff4>
 4102554:	070019c4 	movi	fp,103
 4102558:	003f3f06 	br	4102258 <___vfprintf_internal_r+0x1c50>
 410255c:	d9401345 	stb	r5,77(sp)
 4102560:	003ae006 	br	41010e4 <___vfprintf_internal_r+0xadc>
 4102564:	d9401345 	stb	r5,77(sp)
 4102568:	003a5706 	br	4100ec8 <___vfprintf_internal_r+0x8c0>
 410256c:	d9401345 	stb	r5,77(sp)
 4102570:	003b1706 	br	41011d0 <___vfprintf_internal_r+0xbc8>
 4102574:	d9401345 	stb	r5,77(sp)
 4102578:	003a2006 	br	4100dfc <___vfprintf_internal_r+0x7f4>
 410257c:	d9401345 	stb	r5,77(sp)
 4102580:	003a6606 	br	4100f1c <___vfprintf_internal_r+0x914>
 4102584:	d9401345 	stb	r5,77(sp)
 4102588:	00399706 	br	4100be8 <___vfprintf_internal_r+0x5e0>
 410258c:	00bfffc4 	movi	r2,-1
 4102590:	d8800515 	stw	r2,20(sp)
 4102594:	00392e06 	br	4100a50 <___vfprintf_internal_r+0x448>
 4102598:	900f883a 	mov	r7,r18
 410259c:	8025883a 	mov	r18,r16
 41025a0:	dc000717 	ldw	r16,28(sp)
 41025a4:	10800044 	addi	r2,r2,1
 41025a8:	1f07883a 	add	r3,r3,fp
 41025ac:	b1c00015 	stw	r7,0(r22)
 41025b0:	b7000115 	stw	fp,4(r22)
 41025b4:	d8c01c15 	stw	r3,112(sp)
 41025b8:	d8801b15 	stw	r2,108(sp)
 41025bc:	11000208 	cmpgei	r4,r2,8
 41025c0:	203dfa26 	beq	r4,zero,4101dac <___vfprintf_internal_r+0x17a4>
 41025c4:	d9801a04 	addi	r6,sp,104
 41025c8:	900b883a 	mov	r5,r18
 41025cc:	9809883a 	mov	r4,r19
 41025d0:	41070e00 	call	41070e0 <__sprint_r>
 41025d4:	10391b1e 	bne	r2,zero,4100a44 <___vfprintf_internal_r+0x43c>
 41025d8:	d8c01c17 	ldw	r3,112(sp)
 41025dc:	d8801b17 	ldw	r2,108(sp)
 41025e0:	dd802704 	addi	r22,sp,156
 41025e4:	003df206 	br	4101db0 <___vfprintf_internal_r+0x17a8>
 41025e8:	d8800717 	ldw	r2,28(sp)
 41025ec:	d8c00b17 	ldw	r3,44(sp)
 41025f0:	10eb883a 	add	r21,r2,r3
 41025f4:	a829883a 	mov	r20,r21
 41025f8:	a83fd60e 	bge	r21,zero,4102554 <___vfprintf_internal_r+0x1f4c>
 41025fc:	0029883a 	mov	r20,zero
 4102600:	003fd406 	br	4102554 <___vfprintf_internal_r+0x1f4c>
 4102604:	00800c04 	movi	r2,48
 4102608:	ad400c04 	addi	r21,r21,48
 410260c:	d88016c5 	stb	r2,91(sp)
 4102610:	00800104 	movi	r2,4
 4102614:	dd401705 	stb	r21,92(sp)
 4102618:	d8801015 	stw	r2,64(sp)
 410261c:	003e6506 	br	4101fb4 <___vfprintf_internal_r+0x19ac>
 4102620:	d8800a17 	ldw	r2,40(sp)
 4102624:	10001916 	blt	r2,zero,410268c <___vfprintf_internal_r+0x2084>
 4102628:	db401343 	ldbu	r13,77(sp)
 410262c:	e0801210 	cmplti	r2,fp,72
 4102630:	1000131e 	bne	r2,zero,4102680 <___vfprintf_internal_r+0x2078>
 4102634:	04410474 	movhi	r17,1041
 4102638:	8c431e04 	addi	r17,r17,3192
 410263c:	00399906 	br	4100ca4 <___vfprintf_internal_r+0x69c>
 4102640:	05400044 	movi	r21,1
 4102644:	a8abc83a 	sub	r21,r21,r2
 4102648:	00800b44 	movi	r2,45
 410264c:	d8801685 	stb	r2,90(sp)
 4102650:	003e2906 	br	4101ef8 <___vfprintf_internal_r+0x18f0>
 4102654:	d8800b17 	ldw	r2,44(sp)
 4102658:	18ab883a 	add	r21,r3,r2
 410265c:	aa2b883a 	add	r21,r21,r8
 4102660:	a829883a 	mov	r20,r21
 4102664:	a83efc0e 	bge	r21,zero,4102258 <___vfprintf_internal_r+0x1c50>
 4102668:	0029883a 	mov	r20,zero
 410266c:	003efa06 	br	4102258 <___vfprintf_internal_r+0x1c50>
 4102670:	6080004c 	andi	r2,r12,1
 4102674:	d8800715 	stw	r2,28(sp)
 4102678:	103e531e 	bne	r2,zero,4101fc8 <___vfprintf_internal_r+0x19c0>
 410267c:	003ff806 	br	4102660 <___vfprintf_internal_r+0x2058>
 4102680:	04410474 	movhi	r17,1041
 4102684:	8c431d04 	addi	r17,r17,3188
 4102688:	00398606 	br	4100ca4 <___vfprintf_internal_r+0x69c>
 410268c:	00800b44 	movi	r2,45
 4102690:	d8801345 	stb	r2,77(sp)
 4102694:	03400b44 	movi	r13,45
 4102698:	003fe406 	br	410262c <___vfprintf_internal_r+0x2024>
 410269c:	1000031e 	bne	r2,zero,41026ac <___vfprintf_internal_r+0x20a4>
 41026a0:	05000044 	movi	r20,1
 41026a4:	05400044 	movi	r21,1
 41026a8:	003eeb06 	br	4102258 <___vfprintf_internal_r+0x1c50>
 41026ac:	d8800b17 	ldw	r2,44(sp)
 41026b0:	15400044 	addi	r21,r2,1
 41026b4:	aa2b883a 	add	r21,r21,r8
 41026b8:	003fe906 	br	4102660 <___vfprintf_internal_r+0x2058>
 41026bc:	b005883a 	mov	r2,r22
 41026c0:	39c32c04 	addi	r7,r7,3248
 41026c4:	003e9706 	br	4102124 <___vfprintf_internal_r+0x1b1c>
 41026c8:	8025883a 	mov	r18,r16
 41026cc:	0038dd06 	br	4100a44 <___vfprintf_internal_r+0x43c>
 41026d0:	00800084 	movi	r2,2
 41026d4:	d8801015 	stw	r2,64(sp)
 41026d8:	003e3606 	br	4101fb4 <___vfprintf_internal_r+0x19ac>
 41026dc:	d8c00617 	ldw	r3,24(sp)
 41026e0:	1a000017 	ldw	r8,0(r3)
 41026e4:	18c00104 	addi	r3,r3,4
 41026e8:	4000010e 	bge	r8,zero,41026f0 <___vfprintf_internal_r+0x20e8>
 41026ec:	023fffc4 	movi	r8,-1
 41026f0:	bf000043 	ldbu	fp,1(r23)
 41026f4:	d8c00615 	stw	r3,24(sp)
 41026f8:	102f883a 	mov	r23,r2
 41026fc:	e2c03fcc 	andi	r11,fp,255
 4102700:	5ac0201c 	xori	r11,r11,128
 4102704:	5affe004 	addi	r11,r11,-128
 4102708:	00380b06 	br	4100738 <___vfprintf_internal_r+0x130>

0410270c <__vfprintf_internal>:
 410270c:	00c10474 	movhi	r3,1041
 4102710:	2005883a 	mov	r2,r4
 4102714:	190bdd17 	ldw	r4,12148(r3)
 4102718:	300f883a 	mov	r7,r6
 410271c:	280d883a 	mov	r6,r5
 4102720:	100b883a 	mov	r5,r2
 4102724:	41006081 	jmpi	4100608 <___vfprintf_internal_r>

04102728 <__sbprintf>:
 4102728:	2880030b 	ldhu	r2,12(r5)
 410272c:	2b001917 	ldw	r12,100(r5)
 4102730:	2ac0038b 	ldhu	r11,14(r5)
 4102734:	2a800717 	ldw	r10,28(r5)
 4102738:	2a400917 	ldw	r9,36(r5)
 410273c:	defee204 	addi	sp,sp,-1144
 4102740:	da001a04 	addi	r8,sp,104
 4102744:	00c10004 	movi	r3,1024
 4102748:	dc011a15 	stw	r16,1128(sp)
 410274c:	10bfff4c 	andi	r2,r2,65533
 4102750:	2821883a 	mov	r16,r5
 4102754:	d80b883a 	mov	r5,sp
 4102758:	dc811c15 	stw	r18,1136(sp)
 410275c:	dc411b15 	stw	r17,1132(sp)
 4102760:	dfc11d15 	stw	ra,1140(sp)
 4102764:	2025883a 	mov	r18,r4
 4102768:	d880030d 	sth	r2,12(sp)
 410276c:	db001915 	stw	r12,100(sp)
 4102770:	dac0038d 	sth	r11,14(sp)
 4102774:	da800715 	stw	r10,28(sp)
 4102778:	da400915 	stw	r9,36(sp)
 410277c:	da000015 	stw	r8,0(sp)
 4102780:	da000415 	stw	r8,16(sp)
 4102784:	d8c00215 	stw	r3,8(sp)
 4102788:	d8c00515 	stw	r3,20(sp)
 410278c:	d8000615 	stw	zero,24(sp)
 4102790:	41006080 	call	4100608 <___vfprintf_internal_r>
 4102794:	1023883a 	mov	r17,r2
 4102798:	10000d0e 	bge	r2,zero,41027d0 <__sbprintf+0xa8>
 410279c:	d880030b 	ldhu	r2,12(sp)
 41027a0:	1080100c 	andi	r2,r2,64
 41027a4:	10000326 	beq	r2,zero,41027b4 <__sbprintf+0x8c>
 41027a8:	8080030b 	ldhu	r2,12(r16)
 41027ac:	10801014 	ori	r2,r2,64
 41027b0:	8080030d 	sth	r2,12(r16)
 41027b4:	8805883a 	mov	r2,r17
 41027b8:	dfc11d17 	ldw	ra,1140(sp)
 41027bc:	dc811c17 	ldw	r18,1136(sp)
 41027c0:	dc411b17 	ldw	r17,1132(sp)
 41027c4:	dc011a17 	ldw	r16,1128(sp)
 41027c8:	dec11e04 	addi	sp,sp,1144
 41027cc:	f800283a 	ret
 41027d0:	d80b883a 	mov	r5,sp
 41027d4:	9009883a 	mov	r4,r18
 41027d8:	41044dc0 	call	41044dc <_fflush_r>
 41027dc:	103fef26 	beq	r2,zero,410279c <__sbprintf+0x74>
 41027e0:	047fffc4 	movi	r17,-1
 41027e4:	003fed06 	br	410279c <__sbprintf+0x74>

041027e8 <__swsetup_r>:
 41027e8:	00810474 	movhi	r2,1041
 41027ec:	108bdd17 	ldw	r2,12148(r2)
 41027f0:	defffd04 	addi	sp,sp,-12
 41027f4:	dc400115 	stw	r17,4(sp)
 41027f8:	dc000015 	stw	r16,0(sp)
 41027fc:	dfc00215 	stw	ra,8(sp)
 4102800:	2023883a 	mov	r17,r4
 4102804:	2821883a 	mov	r16,r5
 4102808:	10000226 	beq	r2,zero,4102814 <__swsetup_r+0x2c>
 410280c:	10c00e17 	ldw	r3,56(r2)
 4102810:	18001f26 	beq	r3,zero,4102890 <__swsetup_r+0xa8>
 4102814:	8180030b 	ldhu	r6,12(r16)
 4102818:	30c0020c 	andi	r3,r6,8
 410281c:	3005883a 	mov	r2,r6
 4102820:	18002126 	beq	r3,zero,41028a8 <__swsetup_r+0xc0>
 4102824:	80c00417 	ldw	r3,16(r16)
 4102828:	18002826 	beq	r3,zero,41028cc <__swsetup_r+0xe4>
 410282c:	1100004c 	andi	r4,r2,1
 4102830:	20000b1e 	bne	r4,zero,4102860 <__swsetup_r+0x78>
 4102834:	1100008c 	andi	r4,r2,2
 4102838:	20002e1e 	bne	r4,zero,41028f4 <__swsetup_r+0x10c>
 410283c:	81000517 	ldw	r4,20(r16)
 4102840:	81000215 	stw	r4,8(r16)
 4102844:	18000b26 	beq	r3,zero,4102874 <__swsetup_r+0x8c>
 4102848:	0005883a 	mov	r2,zero
 410284c:	dfc00217 	ldw	ra,8(sp)
 4102850:	dc400117 	ldw	r17,4(sp)
 4102854:	dc000017 	ldw	r16,0(sp)
 4102858:	dec00304 	addi	sp,sp,12
 410285c:	f800283a 	ret
 4102860:	81000517 	ldw	r4,20(r16)
 4102864:	80000215 	stw	zero,8(r16)
 4102868:	0109c83a 	sub	r4,zero,r4
 410286c:	81000615 	stw	r4,24(r16)
 4102870:	183ff51e 	bne	r3,zero,4102848 <__swsetup_r+0x60>
 4102874:	10c0200c 	andi	r3,r2,128
 4102878:	0005883a 	mov	r2,zero
 410287c:	183ff326 	beq	r3,zero,410284c <__swsetup_r+0x64>
 4102880:	31801014 	ori	r6,r6,64
 4102884:	8180030d 	sth	r6,12(r16)
 4102888:	00bfffc4 	movi	r2,-1
 410288c:	003fef06 	br	410284c <__swsetup_r+0x64>
 4102890:	1009883a 	mov	r4,r2
 4102894:	41049240 	call	4104924 <__sinit>
 4102898:	8180030b 	ldhu	r6,12(r16)
 410289c:	30c0020c 	andi	r3,r6,8
 41028a0:	3005883a 	mov	r2,r6
 41028a4:	183fdf1e 	bne	r3,zero,4102824 <__swsetup_r+0x3c>
 41028a8:	3080040c 	andi	r2,r6,16
 41028ac:	10002126 	beq	r2,zero,4102934 <__swsetup_r+0x14c>
 41028b0:	3080010c 	andi	r2,r6,4
 41028b4:	1000111e 	bne	r2,zero,41028fc <__swsetup_r+0x114>
 41028b8:	80c00417 	ldw	r3,16(r16)
 41028bc:	30800214 	ori	r2,r6,8
 41028c0:	8080030d 	sth	r2,12(r16)
 41028c4:	100d883a 	mov	r6,r2
 41028c8:	183fd81e 	bne	r3,zero,410282c <__swsetup_r+0x44>
 41028cc:	1100a00c 	andi	r4,r2,640
 41028d0:	21008020 	cmpeqi	r4,r4,512
 41028d4:	203fd51e 	bne	r4,zero,410282c <__swsetup_r+0x44>
 41028d8:	800b883a 	mov	r5,r16
 41028dc:	8809883a 	mov	r4,r17
 41028e0:	4104ee40 	call	4104ee4 <__smakebuf_r>
 41028e4:	8180030b 	ldhu	r6,12(r16)
 41028e8:	80c00417 	ldw	r3,16(r16)
 41028ec:	3005883a 	mov	r2,r6
 41028f0:	003fce06 	br	410282c <__swsetup_r+0x44>
 41028f4:	0009883a 	mov	r4,zero
 41028f8:	003fd106 	br	4102840 <__swsetup_r+0x58>
 41028fc:	81400c17 	ldw	r5,48(r16)
 4102900:	28000626 	beq	r5,zero,410291c <__swsetup_r+0x134>
 4102904:	80801004 	addi	r2,r16,64
 4102908:	28800326 	beq	r5,r2,4102918 <__swsetup_r+0x130>
 410290c:	8809883a 	mov	r4,r17
 4102910:	4104a880 	call	4104a88 <_free_r>
 4102914:	8180030b 	ldhu	r6,12(r16)
 4102918:	80000c15 	stw	zero,48(r16)
 410291c:	80c00417 	ldw	r3,16(r16)
 4102920:	00bff6c4 	movi	r2,-37
 4102924:	118c703a 	and	r6,r2,r6
 4102928:	80000115 	stw	zero,4(r16)
 410292c:	80c00015 	stw	r3,0(r16)
 4102930:	003fe206 	br	41028bc <__swsetup_r+0xd4>
 4102934:	00800244 	movi	r2,9
 4102938:	88800015 	stw	r2,0(r17)
 410293c:	31801014 	ori	r6,r6,64
 4102940:	8180030d 	sth	r6,12(r16)
 4102944:	00bfffc4 	movi	r2,-1
 4102948:	003fc006 	br	410284c <__swsetup_r+0x64>

0410294c <quorem>:
 410294c:	defff204 	addi	sp,sp,-56
 4102950:	dc400515 	stw	r17,20(sp)
 4102954:	20800417 	ldw	r2,16(r4)
 4102958:	2c400417 	ldw	r17,16(r5)
 410295c:	dfc00d15 	stw	ra,52(sp)
 4102960:	df000c15 	stw	fp,48(sp)
 4102964:	ddc00b15 	stw	r23,44(sp)
 4102968:	dd800a15 	stw	r22,40(sp)
 410296c:	dd400915 	stw	r21,36(sp)
 4102970:	dd000815 	stw	r20,32(sp)
 4102974:	dcc00715 	stw	r19,28(sp)
 4102978:	dc800615 	stw	r18,24(sp)
 410297c:	dc000415 	stw	r16,16(sp)
 4102980:	d9000115 	stw	r4,4(sp)
 4102984:	d9400215 	stw	r5,8(sp)
 4102988:	14407616 	blt	r2,r17,4102b64 <quorem+0x218>
 410298c:	8c7fffc4 	addi	r17,r17,-1
 4102990:	882a90ba 	slli	r21,r17,2
 4102994:	2f000504 	addi	fp,r5,20
 4102998:	25800504 	addi	r22,r4,20
 410299c:	e565883a 	add	r18,fp,r21
 41029a0:	b545883a 	add	r2,r22,r21
 41029a4:	95c00017 	ldw	r23,0(r18)
 41029a8:	15000017 	ldw	r20,0(r2)
 41029ac:	dd800015 	stw	r22,0(sp)
 41029b0:	bdc00044 	addi	r23,r23,1
 41029b4:	b80b883a 	mov	r5,r23
 41029b8:	a009883a 	mov	r4,r20
 41029bc:	d8800315 	stw	r2,12(sp)
 41029c0:	410046c0 	call	410046c <__udivsi3>
 41029c4:	1021883a 	mov	r16,r2
 41029c8:	a5c02f36 	bltu	r20,r23,4102a88 <quorem+0x13c>
 41029cc:	e029883a 	mov	r20,fp
 41029d0:	002b883a 	mov	r21,zero
 41029d4:	002f883a 	mov	r23,zero
 41029d8:	a4c00017 	ldw	r19,0(r20)
 41029dc:	800b883a 	mov	r5,r16
 41029e0:	b5800104 	addi	r22,r22,4
 41029e4:	993fffcc 	andi	r4,r19,65535
 41029e8:	410aec00 	call	410aec0 <__mulsi3>
 41029ec:	9808d43a 	srli	r4,r19,16
 41029f0:	800b883a 	mov	r5,r16
 41029f4:	156b883a 	add	r21,r2,r21
 41029f8:	410aec00 	call	410aec0 <__mulsi3>
 41029fc:	b0ffff17 	ldw	r3,-4(r22)
 4102a00:	a80ad43a 	srli	r5,r21,16
 4102a04:	a93fffcc 	andi	r4,r21,65535
 4102a08:	19bfffcc 	andi	r6,r3,65535
 4102a0c:	b909c83a 	sub	r4,r23,r4
 4102a10:	2189883a 	add	r4,r4,r6
 4102a14:	1806d43a 	srli	r3,r3,16
 4102a18:	1145883a 	add	r2,r2,r5
 4102a1c:	200bd43a 	srai	r5,r4,16
 4102a20:	11bfffcc 	andi	r6,r2,65535
 4102a24:	1987c83a 	sub	r3,r3,r6
 4102a28:	1947883a 	add	r3,r3,r5
 4102a2c:	180a943a 	slli	r5,r3,16
 4102a30:	213fffcc 	andi	r4,r4,65535
 4102a34:	a5000104 	addi	r20,r20,4
 4102a38:	2908b03a 	or	r4,r5,r4
 4102a3c:	b13fff15 	stw	r4,-4(r22)
 4102a40:	102ad43a 	srli	r21,r2,16
 4102a44:	182fd43a 	srai	r23,r3,16
 4102a48:	953fe32e 	bgeu	r18,r20,41029d8 <quorem+0x8c>
 4102a4c:	d8c00317 	ldw	r3,12(sp)
 4102a50:	18800017 	ldw	r2,0(r3)
 4102a54:	10000c1e 	bne	r2,zero,4102a88 <quorem+0x13c>
 4102a58:	d8800017 	ldw	r2,0(sp)
 4102a5c:	1d7fff04 	addi	r21,r3,-4
 4102a60:	15400436 	bltu	r2,r21,4102a74 <quorem+0x128>
 4102a64:	00000606 	br	4102a80 <quorem+0x134>
 4102a68:	d8800017 	ldw	r2,0(sp)
 4102a6c:	8c7fffc4 	addi	r17,r17,-1
 4102a70:	1540032e 	bgeu	r2,r21,4102a80 <quorem+0x134>
 4102a74:	a8800017 	ldw	r2,0(r21)
 4102a78:	ad7fff04 	addi	r21,r21,-4
 4102a7c:	103ffa26 	beq	r2,zero,4102a68 <quorem+0x11c>
 4102a80:	d8800117 	ldw	r2,4(sp)
 4102a84:	14400415 	stw	r17,16(r2)
 4102a88:	d9400217 	ldw	r5,8(sp)
 4102a8c:	d9000117 	ldw	r4,4(sp)
 4102a90:	41066800 	call	4106680 <__mcmp>
 4102a94:	10002616 	blt	r2,zero,4102b30 <quorem+0x1e4>
 4102a98:	d9400017 	ldw	r5,0(sp)
 4102a9c:	84000044 	addi	r16,r16,1
 4102aa0:	0007883a 	mov	r3,zero
 4102aa4:	e1000017 	ldw	r4,0(fp)
 4102aa8:	29800017 	ldw	r6,0(r5)
 4102aac:	29400104 	addi	r5,r5,4
 4102ab0:	20bfffcc 	andi	r2,r4,65535
 4102ab4:	1887c83a 	sub	r3,r3,r2
 4102ab8:	30bfffcc 	andi	r2,r6,65535
 4102abc:	1885883a 	add	r2,r3,r2
 4102ac0:	2008d43a 	srli	r4,r4,16
 4102ac4:	3006d43a 	srli	r3,r6,16
 4102ac8:	100fd43a 	srai	r7,r2,16
 4102acc:	11bfffcc 	andi	r6,r2,65535
 4102ad0:	1907c83a 	sub	r3,r3,r4
 4102ad4:	19c7883a 	add	r3,r3,r7
 4102ad8:	1804943a 	slli	r2,r3,16
 4102adc:	e7000104 	addi	fp,fp,4
 4102ae0:	1807d43a 	srai	r3,r3,16
 4102ae4:	1184b03a 	or	r2,r2,r6
 4102ae8:	28bfff15 	stw	r2,-4(r5)
 4102aec:	973fed2e 	bgeu	r18,fp,4102aa4 <quorem+0x158>
 4102af0:	880490ba 	slli	r2,r17,2
 4102af4:	d9000017 	ldw	r4,0(sp)
 4102af8:	2085883a 	add	r2,r4,r2
 4102afc:	10c00017 	ldw	r3,0(r2)
 4102b00:	18000b1e 	bne	r3,zero,4102b30 <quorem+0x1e4>
 4102b04:	10bfff04 	addi	r2,r2,-4
 4102b08:	20800436 	bltu	r4,r2,4102b1c <quorem+0x1d0>
 4102b0c:	00000606 	br	4102b28 <quorem+0x1dc>
 4102b10:	d8c00017 	ldw	r3,0(sp)
 4102b14:	8c7fffc4 	addi	r17,r17,-1
 4102b18:	1880032e 	bgeu	r3,r2,4102b28 <quorem+0x1dc>
 4102b1c:	10c00017 	ldw	r3,0(r2)
 4102b20:	10bfff04 	addi	r2,r2,-4
 4102b24:	183ffa26 	beq	r3,zero,4102b10 <quorem+0x1c4>
 4102b28:	d8800117 	ldw	r2,4(sp)
 4102b2c:	14400415 	stw	r17,16(r2)
 4102b30:	8005883a 	mov	r2,r16
 4102b34:	dfc00d17 	ldw	ra,52(sp)
 4102b38:	df000c17 	ldw	fp,48(sp)
 4102b3c:	ddc00b17 	ldw	r23,44(sp)
 4102b40:	dd800a17 	ldw	r22,40(sp)
 4102b44:	dd400917 	ldw	r21,36(sp)
 4102b48:	dd000817 	ldw	r20,32(sp)
 4102b4c:	dcc00717 	ldw	r19,28(sp)
 4102b50:	dc800617 	ldw	r18,24(sp)
 4102b54:	dc400517 	ldw	r17,20(sp)
 4102b58:	dc000417 	ldw	r16,16(sp)
 4102b5c:	dec00e04 	addi	sp,sp,56
 4102b60:	f800283a 	ret
 4102b64:	0005883a 	mov	r2,zero
 4102b68:	003ff206 	br	4102b34 <quorem+0x1e8>

04102b6c <_dtoa_r>:
 4102b6c:	20801017 	ldw	r2,64(r4)
 4102b70:	deffe204 	addi	sp,sp,-120
 4102b74:	ddc01b15 	stw	r23,108(sp)
 4102b78:	dcc01715 	stw	r19,92(sp)
 4102b7c:	dc801615 	stw	r18,88(sp)
 4102b80:	dc401515 	stw	r17,84(sp)
 4102b84:	dc001415 	stw	r16,80(sp)
 4102b88:	dfc01d15 	stw	ra,116(sp)
 4102b8c:	df001c15 	stw	fp,112(sp)
 4102b90:	dd801a15 	stw	r22,104(sp)
 4102b94:	dd401915 	stw	r21,100(sp)
 4102b98:	dd001815 	stw	r20,96(sp)
 4102b9c:	d9c00215 	stw	r7,8(sp)
 4102ba0:	dc002017 	ldw	r16,128(sp)
 4102ba4:	202f883a 	mov	r23,r4
 4102ba8:	3025883a 	mov	r18,r6
 4102bac:	2827883a 	mov	r19,r5
 4102bb0:	3023883a 	mov	r17,r6
 4102bb4:	10000826 	beq	r2,zero,4102bd8 <_dtoa_r+0x6c>
 4102bb8:	21801117 	ldw	r6,68(r4)
 4102bbc:	00c00044 	movi	r3,1
 4102bc0:	100b883a 	mov	r5,r2
 4102bc4:	1986983a 	sll	r3,r3,r6
 4102bc8:	11800115 	stw	r6,4(r2)
 4102bcc:	10c00215 	stw	r3,8(r2)
 4102bd0:	4105c700 	call	4105c70 <_Bfree>
 4102bd4:	b8001015 	stw	zero,64(r23)
 4102bd8:	90018816 	blt	r18,zero,41031fc <_dtoa_r+0x690>
 4102bdc:	80000015 	stw	zero,0(r16)
 4102be0:	909ffc2c 	andhi	r2,r18,32752
 4102be4:	00dffc34 	movhi	r3,32752
 4102be8:	10c18d26 	beq	r2,r3,4103220 <_dtoa_r+0x6b4>
 4102bec:	000d883a 	mov	r6,zero
 4102bf0:	000f883a 	mov	r7,zero
 4102bf4:	9809883a 	mov	r4,r19
 4102bf8:	880b883a 	mov	r5,r17
 4102bfc:	410c1080 	call	410c108 <__eqdf2>
 4102c00:	1000191e 	bne	r2,zero,4102c68 <_dtoa_r+0xfc>
 4102c04:	d8c01f17 	ldw	r3,124(sp)
 4102c08:	00800044 	movi	r2,1
 4102c0c:	18800015 	stw	r2,0(r3)
 4102c10:	d8802117 	ldw	r2,132(sp)
 4102c14:	1002f926 	beq	r2,zero,41037fc <_dtoa_r+0xc90>
 4102c18:	d9002117 	ldw	r4,132(sp)
 4102c1c:	00810474 	movhi	r2,1041
 4102c20:	10832b44 	addi	r2,r2,3245
 4102c24:	00c10474 	movhi	r3,1041
 4102c28:	20800015 	stw	r2,0(r4)
 4102c2c:	18832b04 	addi	r2,r3,3244
 4102c30:	d8800115 	stw	r2,4(sp)
 4102c34:	d8800117 	ldw	r2,4(sp)
 4102c38:	dfc01d17 	ldw	ra,116(sp)
 4102c3c:	df001c17 	ldw	fp,112(sp)
 4102c40:	ddc01b17 	ldw	r23,108(sp)
 4102c44:	dd801a17 	ldw	r22,104(sp)
 4102c48:	dd401917 	ldw	r21,100(sp)
 4102c4c:	dd001817 	ldw	r20,96(sp)
 4102c50:	dcc01717 	ldw	r19,92(sp)
 4102c54:	dc801617 	ldw	r18,88(sp)
 4102c58:	dc401517 	ldw	r17,84(sp)
 4102c5c:	dc001417 	ldw	r16,80(sp)
 4102c60:	dec01e04 	addi	sp,sp,120
 4102c64:	f800283a 	ret
 4102c68:	d8801204 	addi	r2,sp,72
 4102c6c:	9020d53a 	srli	r16,r18,20
 4102c70:	d8800015 	stw	r2,0(sp)
 4102c74:	d9c01304 	addi	r7,sp,76
 4102c78:	980b883a 	mov	r5,r19
 4102c7c:	880d883a 	mov	r6,r17
 4102c80:	b809883a 	mov	r4,r23
 4102c84:	4106a680 	call	4106a68 <__d2b>
 4102c88:	1039883a 	mov	fp,r2
 4102c8c:	8001771e 	bne	r16,zero,410326c <_dtoa_r+0x700>
 4102c90:	dd001217 	ldw	r20,72(sp)
 4102c94:	dc001317 	ldw	r16,76(sp)
 4102c98:	a421883a 	add	r16,r20,r16
 4102c9c:	80810c84 	addi	r2,r16,1074
 4102ca0:	10c00850 	cmplti	r3,r2,33
 4102ca4:	1802e51e 	bne	r3,zero,410383c <_dtoa_r+0xcd0>
 4102ca8:	01001004 	movi	r4,64
 4102cac:	2085c83a 	sub	r2,r4,r2
 4102cb0:	81010484 	addi	r4,r16,1042
 4102cb4:	90a4983a 	sll	r18,r18,r2
 4102cb8:	9908d83a 	srl	r4,r19,r4
 4102cbc:	9108b03a 	or	r4,r18,r4
 4102cc0:	410d5440 	call	410d544 <__floatunsidf>
 4102cc4:	1009883a 	mov	r4,r2
 4102cc8:	017f8434 	movhi	r5,65040
 4102ccc:	00800044 	movi	r2,1
 4102cd0:	194b883a 	add	r5,r3,r5
 4102cd4:	843fffc4 	addi	r16,r16,-1
 4102cd8:	d8800a15 	stw	r2,40(sp)
 4102cdc:	000d883a 	mov	r6,zero
 4102ce0:	01cffe34 	movhi	r7,16376
 4102ce4:	410cb040 	call	410cb04 <__subdf3>
 4102ce8:	0198dbf4 	movhi	r6,25455
 4102cec:	01cff4f4 	movhi	r7,16339
 4102cf0:	3190d844 	addi	r6,r6,17249
 4102cf4:	39e1e9c4 	addi	r7,r7,-30809
 4102cf8:	1009883a 	mov	r4,r2
 4102cfc:	180b883a 	mov	r5,r3
 4102d00:	410c3580 	call	410c358 <__muldf3>
 4102d04:	01a2d874 	movhi	r6,35681
 4102d08:	01cff1f4 	movhi	r7,16327
 4102d0c:	31b22cc4 	addi	r6,r6,-14157
 4102d10:	39e28a04 	addi	r7,r7,-30168
 4102d14:	180b883a 	mov	r5,r3
 4102d18:	1009883a 	mov	r4,r2
 4102d1c:	410aee80 	call	410aee8 <__adddf3>
 4102d20:	8009883a 	mov	r4,r16
 4102d24:	102b883a 	mov	r21,r2
 4102d28:	1825883a 	mov	r18,r3
 4102d2c:	410d48c0 	call	410d48c <__floatsidf>
 4102d30:	019427f4 	movhi	r6,20639
 4102d34:	01cff4f4 	movhi	r7,16339
 4102d38:	319e7ec4 	addi	r6,r6,31227
 4102d3c:	39d104c4 	addi	r7,r7,17427
 4102d40:	1009883a 	mov	r4,r2
 4102d44:	180b883a 	mov	r5,r3
 4102d48:	410c3580 	call	410c358 <__muldf3>
 4102d4c:	100d883a 	mov	r6,r2
 4102d50:	180f883a 	mov	r7,r3
 4102d54:	a809883a 	mov	r4,r21
 4102d58:	900b883a 	mov	r5,r18
 4102d5c:	410aee80 	call	410aee8 <__adddf3>
 4102d60:	1009883a 	mov	r4,r2
 4102d64:	180b883a 	mov	r5,r3
 4102d68:	1025883a 	mov	r18,r2
 4102d6c:	182d883a 	mov	r22,r3
 4102d70:	410d40c0 	call	410d40c <__fixdfsi>
 4102d74:	000d883a 	mov	r6,zero
 4102d78:	000f883a 	mov	r7,zero
 4102d7c:	9009883a 	mov	r4,r18
 4102d80:	b00b883a 	mov	r5,r22
 4102d84:	102b883a 	mov	r21,r2
 4102d88:	d8800315 	stw	r2,12(sp)
 4102d8c:	410c2700 	call	410c270 <__ledf2>
 4102d90:	10028f16 	blt	r2,zero,41037d0 <_dtoa_r+0xc64>
 4102d94:	dc800317 	ldw	r18,12(sp)
 4102d98:	a421c83a 	sub	r16,r20,r16
 4102d9c:	85bfffc4 	addi	r22,r16,-1
 4102da0:	908005e8 	cmpgeui	r2,r18,23
 4102da4:	1002821e 	bne	r2,zero,41037b0 <_dtoa_r+0xc44>
 4102da8:	900690fa 	slli	r3,r18,3
 4102dac:	00810474 	movhi	r2,1041
 4102db0:	10837404 	addi	r2,r2,3536
 4102db4:	10c5883a 	add	r2,r2,r3
 4102db8:	11800017 	ldw	r6,0(r2)
 4102dbc:	11c00117 	ldw	r7,4(r2)
 4102dc0:	9809883a 	mov	r4,r19
 4102dc4:	880b883a 	mov	r5,r17
 4102dc8:	410c2700 	call	410c270 <__ledf2>
 4102dcc:	1002550e 	bge	r2,zero,4103724 <_dtoa_r+0xbb8>
 4102dd0:	90bfffc4 	addi	r2,r18,-1
 4102dd4:	d8800315 	stw	r2,12(sp)
 4102dd8:	d8000915 	stw	zero,36(sp)
 4102ddc:	b0027716 	blt	r22,zero,41037bc <_dtoa_r+0xc50>
 4102de0:	d8000615 	stw	zero,24(sp)
 4102de4:	d8800317 	ldw	r2,12(sp)
 4102de8:	1002510e 	bge	r2,zero,4103730 <_dtoa_r+0xbc4>
 4102dec:	d8800317 	ldw	r2,12(sp)
 4102df0:	d8c00617 	ldw	r3,24(sp)
 4102df4:	d8000315 	stw	zero,12(sp)
 4102df8:	d8800415 	stw	r2,16(sp)
 4102dfc:	1887c83a 	sub	r3,r3,r2
 4102e00:	d8c00615 	stw	r3,24(sp)
 4102e04:	0087c83a 	sub	r3,zero,r2
 4102e08:	d8c00815 	stw	r3,32(sp)
 4102e0c:	d8c00217 	ldw	r3,8(sp)
 4102e10:	188002a8 	cmpgeui	r2,r3,10
 4102e14:	10024d1e 	bne	r2,zero,410374c <_dtoa_r+0xbe0>
 4102e18:	18800190 	cmplti	r2,r3,6
 4102e1c:	10028b1e 	bne	r2,zero,410384c <_dtoa_r+0xce0>
 4102e20:	18bfff04 	addi	r2,r3,-4
 4102e24:	d8800215 	stw	r2,8(sp)
 4102e28:	0021883a 	mov	r16,zero
 4102e2c:	d8c00217 	ldw	r3,8(sp)
 4102e30:	18800120 	cmpeqi	r2,r3,4
 4102e34:	10035d1e 	bne	r2,zero,4103bac <_dtoa_r+0x1040>
 4102e38:	18800160 	cmpeqi	r2,r3,5
 4102e3c:	10031b1e 	bne	r2,zero,4103aac <_dtoa_r+0xf40>
 4102e40:	188000a0 	cmpeqi	r2,r3,2
 4102e44:	10024d26 	beq	r2,zero,410377c <_dtoa_r+0xc10>
 4102e48:	d8000715 	stw	zero,28(sp)
 4102e4c:	d8801e17 	ldw	r2,120(sp)
 4102e50:	0083260e 	bge	zero,r2,4103aec <_dtoa_r+0xf80>
 4102e54:	d8800b15 	stw	r2,44(sp)
 4102e58:	d8800515 	stw	r2,20(sp)
 4102e5c:	100d883a 	mov	r6,r2
 4102e60:	b8001115 	stw	zero,68(r23)
 4102e64:	30800610 	cmplti	r2,r6,24
 4102e68:	1004f11e 	bne	r2,zero,4104230 <_dtoa_r+0x16c4>
 4102e6c:	00c00044 	movi	r3,1
 4102e70:	00800104 	movi	r2,4
 4102e74:	1085883a 	add	r2,r2,r2
 4102e78:	11000504 	addi	r4,r2,20
 4102e7c:	180b883a 	mov	r5,r3
 4102e80:	18c00044 	addi	r3,r3,1
 4102e84:	313ffb2e 	bgeu	r6,r4,4102e74 <_dtoa_r+0x308>
 4102e88:	b9401115 	stw	r5,68(r23)
 4102e8c:	b809883a 	mov	r4,r23
 4102e90:	4105bcc0 	call	4105bcc <_Balloc>
 4102e94:	d8800115 	stw	r2,4(sp)
 4102e98:	1004de26 	beq	r2,zero,4104214 <_dtoa_r+0x16a8>
 4102e9c:	d8800117 	ldw	r2,4(sp)
 4102ea0:	b8801015 	stw	r2,64(r23)
 4102ea4:	d8800517 	ldw	r2,20(sp)
 4102ea8:	108003e8 	cmpgeui	r2,r2,15
 4102eac:	1001021e 	bne	r2,zero,41032b8 <_dtoa_r+0x74c>
 4102eb0:	80010126 	beq	r16,zero,41032b8 <_dtoa_r+0x74c>
 4102eb4:	d9000417 	ldw	r4,16(sp)
 4102eb8:	01038b0e 	bge	zero,r4,4103ce8 <_dtoa_r+0x117c>
 4102ebc:	208003cc 	andi	r2,r4,15
 4102ec0:	100690fa 	slli	r3,r2,3
 4102ec4:	2029d13a 	srai	r20,r4,4
 4102ec8:	00810474 	movhi	r2,1041
 4102ecc:	10837404 	addi	r2,r2,3536
 4102ed0:	10c5883a 	add	r2,r2,r3
 4102ed4:	a0c0040c 	andi	r3,r20,16
 4102ed8:	12800017 	ldw	r10,0(r2)
 4102edc:	12400117 	ldw	r9,4(r2)
 4102ee0:	18032c26 	beq	r3,zero,4103b94 <_dtoa_r+0x1028>
 4102ee4:	00810474 	movhi	r2,1041
 4102ee8:	10836a04 	addi	r2,r2,3496
 4102eec:	11800817 	ldw	r6,32(r2)
 4102ef0:	11c00917 	ldw	r7,36(r2)
 4102ef4:	9809883a 	mov	r4,r19
 4102ef8:	880b883a 	mov	r5,r17
 4102efc:	da400e15 	stw	r9,56(sp)
 4102f00:	da800d15 	stw	r10,52(sp)
 4102f04:	410b7d80 	call	410b7d8 <__divdf3>
 4102f08:	da800d17 	ldw	r10,52(sp)
 4102f0c:	da400e17 	ldw	r9,56(sp)
 4102f10:	a50003cc 	andi	r20,r20,15
 4102f14:	d8800c15 	stw	r2,48(sp)
 4102f18:	1825883a 	mov	r18,r3
 4102f1c:	054000c4 	movi	r21,3
 4102f20:	a0001126 	beq	r20,zero,4102f68 <_dtoa_r+0x3fc>
 4102f24:	04010474 	movhi	r16,1041
 4102f28:	84036a04 	addi	r16,r16,3496
 4102f2c:	5009883a 	mov	r4,r10
 4102f30:	480b883a 	mov	r5,r9
 4102f34:	a180004c 	andi	r6,r20,1
 4102f38:	30000626 	beq	r6,zero,4102f54 <_dtoa_r+0x3e8>
 4102f3c:	81800017 	ldw	r6,0(r16)
 4102f40:	81c00117 	ldw	r7,4(r16)
 4102f44:	ad400044 	addi	r21,r21,1
 4102f48:	410c3580 	call	410c358 <__muldf3>
 4102f4c:	1009883a 	mov	r4,r2
 4102f50:	180b883a 	mov	r5,r3
 4102f54:	a029d07a 	srai	r20,r20,1
 4102f58:	84000204 	addi	r16,r16,8
 4102f5c:	a03ff51e 	bne	r20,zero,4102f34 <_dtoa_r+0x3c8>
 4102f60:	2015883a 	mov	r10,r4
 4102f64:	2813883a 	mov	r9,r5
 4102f68:	d9000c17 	ldw	r4,48(sp)
 4102f6c:	900b883a 	mov	r5,r18
 4102f70:	500d883a 	mov	r6,r10
 4102f74:	480f883a 	mov	r7,r9
 4102f78:	410b7d80 	call	410b7d8 <__divdf3>
 4102f7c:	1021883a 	mov	r16,r2
 4102f80:	1825883a 	mov	r18,r3
 4102f84:	d8800917 	ldw	r2,36(sp)
 4102f88:	10000626 	beq	r2,zero,4102fa4 <_dtoa_r+0x438>
 4102f8c:	000d883a 	mov	r6,zero
 4102f90:	01cffc34 	movhi	r7,16368
 4102f94:	8009883a 	mov	r4,r16
 4102f98:	900b883a 	mov	r5,r18
 4102f9c:	410c2700 	call	410c270 <__ledf2>
 4102fa0:	10044416 	blt	r2,zero,41040b4 <_dtoa_r+0x1548>
 4102fa4:	a809883a 	mov	r4,r21
 4102fa8:	410d48c0 	call	410d48c <__floatsidf>
 4102fac:	800d883a 	mov	r6,r16
 4102fb0:	900f883a 	mov	r7,r18
 4102fb4:	1009883a 	mov	r4,r2
 4102fb8:	180b883a 	mov	r5,r3
 4102fbc:	410c3580 	call	410c358 <__muldf3>
 4102fc0:	000d883a 	mov	r6,zero
 4102fc4:	01d00734 	movhi	r7,16412
 4102fc8:	1009883a 	mov	r4,r2
 4102fcc:	180b883a 	mov	r5,r3
 4102fd0:	410aee80 	call	410aee8 <__adddf3>
 4102fd4:	1029883a 	mov	r20,r2
 4102fd8:	00bf3034 	movhi	r2,64704
 4102fdc:	1885883a 	add	r2,r3,r2
 4102fe0:	d8800c15 	stw	r2,48(sp)
 4102fe4:	d8800517 	ldw	r2,20(sp)
 4102fe8:	10032226 	beq	r2,zero,4103c74 <_dtoa_r+0x1108>
 4102fec:	d8800417 	ldw	r2,16(sp)
 4102ff0:	d8801115 	stw	r2,68(sp)
 4102ff4:	d8800517 	ldw	r2,20(sp)
 4102ff8:	d8800d15 	stw	r2,52(sp)
 4102ffc:	d8800d17 	ldw	r2,52(sp)
 4103000:	900b883a 	mov	r5,r18
 4103004:	8009883a 	mov	r4,r16
 4103008:	10bfffc4 	addi	r2,r2,-1
 410300c:	100690fa 	slli	r3,r2,3
 4103010:	00810474 	movhi	r2,1041
 4103014:	10837404 	addi	r2,r2,3536
 4103018:	10c5883a 	add	r2,r2,r3
 410301c:	12800017 	ldw	r10,0(r2)
 4103020:	12c00117 	ldw	r11,4(r2)
 4103024:	da800f15 	stw	r10,60(sp)
 4103028:	dac00e15 	stw	r11,56(sp)
 410302c:	410d40c0 	call	410d40c <__fixdfsi>
 4103030:	1009883a 	mov	r4,r2
 4103034:	10800c04 	addi	r2,r2,48
 4103038:	d8801015 	stw	r2,64(sp)
 410303c:	410d48c0 	call	410d48c <__floatsidf>
 4103040:	8009883a 	mov	r4,r16
 4103044:	100d883a 	mov	r6,r2
 4103048:	180f883a 	mov	r7,r3
 410304c:	900b883a 	mov	r5,r18
 4103050:	410cb040 	call	410cb04 <__subdf3>
 4103054:	d9000117 	ldw	r4,4(sp)
 4103058:	dac00e17 	ldw	r11,56(sp)
 410305c:	da800f17 	ldw	r10,60(sp)
 4103060:	1825883a 	mov	r18,r3
 4103064:	d8c00717 	ldw	r3,28(sp)
 4103068:	25400044 	addi	r21,r4,1
 410306c:	1021883a 	mov	r16,r2
 4103070:	500d883a 	mov	r6,r10
 4103074:	580f883a 	mov	r7,r11
 4103078:	1803b626 	beq	r3,zero,4103f54 <_dtoa_r+0x13e8>
 410307c:	0009883a 	mov	r4,zero
 4103080:	014ff834 	movhi	r5,16352
 4103084:	410b7d80 	call	410b7d8 <__divdf3>
 4103088:	d9c00c17 	ldw	r7,48(sp)
 410308c:	a00d883a 	mov	r6,r20
 4103090:	1009883a 	mov	r4,r2
 4103094:	180b883a 	mov	r5,r3
 4103098:	410cb040 	call	410cb04 <__subdf3>
 410309c:	d9000117 	ldw	r4,4(sp)
 41030a0:	1029883a 	mov	r20,r2
 41030a4:	d8801017 	ldw	r2,64(sp)
 41030a8:	800d883a 	mov	r6,r16
 41030ac:	900f883a 	mov	r7,r18
 41030b0:	20800005 	stb	r2,0(r4)
 41030b4:	180b883a 	mov	r5,r3
 41030b8:	a009883a 	mov	r4,r20
 41030bc:	d8c00c15 	stw	r3,48(sp)
 41030c0:	410c1880 	call	410c188 <__gedf2>
 41030c4:	0083e716 	blt	zero,r2,4104064 <_dtoa_r+0x14f8>
 41030c8:	0005883a 	mov	r2,zero
 41030cc:	dd800e15 	stw	r22,56(sp)
 41030d0:	dc400f15 	stw	r17,60(sp)
 41030d4:	dd800d17 	ldw	r22,52(sp)
 41030d8:	dc400c17 	ldw	r17,48(sp)
 41030dc:	ddc00d15 	stw	r23,52(sp)
 41030e0:	dcc00c15 	stw	r19,48(sp)
 41030e4:	1027883a 	mov	r19,r2
 41030e8:	00002606 	br	4103184 <_dtoa_r+0x618>
 41030ec:	9cc00044 	addi	r19,r19,1
 41030f0:	9d806d0e 	bge	r19,r22,41032a8 <_dtoa_r+0x73c>
 41030f4:	a009883a 	mov	r4,r20
 41030f8:	880b883a 	mov	r5,r17
 41030fc:	000d883a 	mov	r6,zero
 4103100:	01d00934 	movhi	r7,16420
 4103104:	410c3580 	call	410c358 <__muldf3>
 4103108:	000d883a 	mov	r6,zero
 410310c:	01d00934 	movhi	r7,16420
 4103110:	8009883a 	mov	r4,r16
 4103114:	900b883a 	mov	r5,r18
 4103118:	1029883a 	mov	r20,r2
 410311c:	1823883a 	mov	r17,r3
 4103120:	410c3580 	call	410c358 <__muldf3>
 4103124:	180b883a 	mov	r5,r3
 4103128:	1009883a 	mov	r4,r2
 410312c:	1821883a 	mov	r16,r3
 4103130:	1025883a 	mov	r18,r2
 4103134:	410d40c0 	call	410d40c <__fixdfsi>
 4103138:	1009883a 	mov	r4,r2
 410313c:	102f883a 	mov	r23,r2
 4103140:	410d48c0 	call	410d48c <__floatsidf>
 4103144:	9009883a 	mov	r4,r18
 4103148:	800b883a 	mov	r5,r16
 410314c:	100d883a 	mov	r6,r2
 4103150:	180f883a 	mov	r7,r3
 4103154:	410cb040 	call	410cb04 <__subdf3>
 4103158:	ad400044 	addi	r21,r21,1
 410315c:	ba000c04 	addi	r8,r23,48
 4103160:	aa3fffc5 	stb	r8,-1(r21)
 4103164:	a00d883a 	mov	r6,r20
 4103168:	880f883a 	mov	r7,r17
 410316c:	1009883a 	mov	r4,r2
 4103170:	180b883a 	mov	r5,r3
 4103174:	1021883a 	mov	r16,r2
 4103178:	1825883a 	mov	r18,r3
 410317c:	410c2700 	call	410c270 <__ledf2>
 4103180:	10040516 	blt	r2,zero,4104198 <_dtoa_r+0x162c>
 4103184:	800d883a 	mov	r6,r16
 4103188:	900f883a 	mov	r7,r18
 410318c:	0009883a 	mov	r4,zero
 4103190:	014ffc34 	movhi	r5,16368
 4103194:	410cb040 	call	410cb04 <__subdf3>
 4103198:	a00d883a 	mov	r6,r20
 410319c:	880f883a 	mov	r7,r17
 41031a0:	1009883a 	mov	r4,r2
 41031a4:	180b883a 	mov	r5,r3
 41031a8:	410c2700 	call	410c270 <__ledf2>
 41031ac:	103fcf0e 	bge	r2,zero,41030ec <_dtoa_r+0x580>
 41031b0:	d8801117 	ldw	r2,68(sp)
 41031b4:	ddc00d17 	ldw	r23,52(sp)
 41031b8:	d9000117 	ldw	r4,4(sp)
 41031bc:	10800044 	addi	r2,r2,1
 41031c0:	d8800415 	stw	r2,16(sp)
 41031c4:	a829883a 	mov	r20,r21
 41031c8:	00000106 	br	41031d0 <_dtoa_r+0x664>
 41031cc:	a103da26 	beq	r20,r4,4104138 <_dtoa_r+0x15cc>
 41031d0:	a0ffffc3 	ldbu	r3,-1(r20)
 41031d4:	a02b883a 	mov	r21,r20
 41031d8:	a53fffc4 	addi	r20,r20,-1
 41031dc:	18803fcc 	andi	r2,r3,255
 41031e0:	1080201c 	xori	r2,r2,128
 41031e4:	10bfe004 	addi	r2,r2,-128
 41031e8:	10800e60 	cmpeqi	r2,r2,57
 41031ec:	103ff71e 	bne	r2,zero,41031cc <_dtoa_r+0x660>
 41031f0:	18c00044 	addi	r3,r3,1
 41031f4:	a0c00005 	stb	r3,0(r20)
 41031f8:	00013f06 	br	41036f8 <_dtoa_r+0xb8c>
 41031fc:	04600034 	movhi	r17,32768
 4103200:	8c7fffc4 	addi	r17,r17,-1
 4103204:	9462703a 	and	r17,r18,r17
 4103208:	00800044 	movi	r2,1
 410320c:	8825883a 	mov	r18,r17
 4103210:	80800015 	stw	r2,0(r16)
 4103214:	00dffc34 	movhi	r3,32752
 4103218:	909ffc2c 	andhi	r2,r18,32752
 410321c:	10fe731e 	bne	r2,r3,4102bec <_dtoa_r+0x80>
 4103220:	d9001f17 	ldw	r4,124(sp)
 4103224:	00800434 	movhi	r2,16
 4103228:	10bfffc4 	addi	r2,r2,-1
 410322c:	9084703a 	and	r2,r18,r2
 4103230:	00c9c3c4 	movi	r3,9999
 4103234:	20c00015 	stw	r3,0(r4)
 4103238:	14e6b03a 	or	r19,r2,r19
 410323c:	9800141e 	bne	r19,zero,4103290 <_dtoa_r+0x724>
 4103240:	d8802117 	ldw	r2,132(sp)
 4103244:	10041226 	beq	r2,zero,4104290 <_dtoa_r+0x1724>
 4103248:	00810474 	movhi	r2,1041
 410324c:	1007883a 	mov	r3,r2
 4103250:	18c33504 	addi	r3,r3,3284
 4103254:	00810474 	movhi	r2,1041
 4103258:	d8c00115 	stw	r3,4(sp)
 410325c:	10833704 	addi	r2,r2,3292
 4103260:	d8c02117 	ldw	r3,132(sp)
 4103264:	18800015 	stw	r2,0(r3)
 4103268:	003e7206 	br	4102c34 <_dtoa_r+0xc8>
 410326c:	01400434 	movhi	r5,16
 4103270:	297fffc4 	addi	r5,r5,-1
 4103274:	894a703a 	and	r5,r17,r5
 4103278:	dd001217 	ldw	r20,72(sp)
 410327c:	9809883a 	mov	r4,r19
 4103280:	294ffc34 	orhi	r5,r5,16368
 4103284:	843f0044 	addi	r16,r16,-1023
 4103288:	d8000a15 	stw	zero,40(sp)
 410328c:	003e9306 	br	4102cdc <_dtoa_r+0x170>
 4103290:	d8802117 	ldw	r2,132(sp)
 4103294:	1001fe1e 	bne	r2,zero,4103a90 <_dtoa_r+0xf24>
 4103298:	00810474 	movhi	r2,1041
 410329c:	10833404 	addi	r2,r2,3280
 41032a0:	d8800115 	stw	r2,4(sp)
 41032a4:	003e6306 	br	4102c34 <_dtoa_r+0xc8>
 41032a8:	dd800e17 	ldw	r22,56(sp)
 41032ac:	ddc00d17 	ldw	r23,52(sp)
 41032b0:	dc400f17 	ldw	r17,60(sp)
 41032b4:	dcc00c17 	ldw	r19,48(sp)
 41032b8:	d8801317 	ldw	r2,76(sp)
 41032bc:	10006e16 	blt	r2,zero,4103478 <_dtoa_r+0x90c>
 41032c0:	d9000417 	ldw	r4,16(sp)
 41032c4:	20c003c8 	cmpgei	r3,r4,15
 41032c8:	18006b1e 	bne	r3,zero,4103478 <_dtoa_r+0x90c>
 41032cc:	200690fa 	slli	r3,r4,3
 41032d0:	00810474 	movhi	r2,1041
 41032d4:	10837404 	addi	r2,r2,3536
 41032d8:	10c5883a 	add	r2,r2,r3
 41032dc:	14000017 	ldw	r16,0(r2)
 41032e0:	14800117 	ldw	r18,4(r2)
 41032e4:	d8801e17 	ldw	r2,120(sp)
 41032e8:	1000150e 	bge	r2,zero,4103340 <_dtoa_r+0x7d4>
 41032ec:	d8800517 	ldw	r2,20(sp)
 41032f0:	00801316 	blt	zero,r2,4103340 <_dtoa_r+0x7d4>
 41032f4:	d8800517 	ldw	r2,20(sp)
 41032f8:	1002721e 	bne	r2,zero,4103cc4 <_dtoa_r+0x1158>
 41032fc:	8009883a 	mov	r4,r16
 4103300:	000d883a 	mov	r6,zero
 4103304:	01d00534 	movhi	r7,16404
 4103308:	900b883a 	mov	r5,r18
 410330c:	410c3580 	call	410c358 <__muldf3>
 4103310:	100d883a 	mov	r6,r2
 4103314:	180f883a 	mov	r7,r3
 4103318:	9809883a 	mov	r4,r19
 410331c:	880b883a 	mov	r5,r17
 4103320:	410c2700 	call	410c270 <__ledf2>
 4103324:	0029883a 	mov	r20,zero
 4103328:	0021883a 	mov	r16,zero
 410332c:	00820216 	blt	zero,r2,4103b38 <_dtoa_r+0xfcc>
 4103330:	d8801e17 	ldw	r2,120(sp)
 4103334:	dd400117 	ldw	r21,4(sp)
 4103338:	00a2303a 	nor	r17,zero,r2
 410333c:	00020406 	br	4103b50 <_dtoa_r+0xfe4>
 4103340:	800d883a 	mov	r6,r16
 4103344:	900f883a 	mov	r7,r18
 4103348:	9809883a 	mov	r4,r19
 410334c:	880b883a 	mov	r5,r17
 4103350:	410b7d80 	call	410b7d8 <__divdf3>
 4103354:	180b883a 	mov	r5,r3
 4103358:	1009883a 	mov	r4,r2
 410335c:	410d40c0 	call	410d40c <__fixdfsi>
 4103360:	1009883a 	mov	r4,r2
 4103364:	102b883a 	mov	r21,r2
 4103368:	410d48c0 	call	410d48c <__floatsidf>
 410336c:	800d883a 	mov	r6,r16
 4103370:	900f883a 	mov	r7,r18
 4103374:	1009883a 	mov	r4,r2
 4103378:	180b883a 	mov	r5,r3
 410337c:	410c3580 	call	410c358 <__muldf3>
 4103380:	100d883a 	mov	r6,r2
 4103384:	9809883a 	mov	r4,r19
 4103388:	880b883a 	mov	r5,r17
 410338c:	180f883a 	mov	r7,r3
 4103390:	410cb040 	call	410cb04 <__subdf3>
 4103394:	d9800117 	ldw	r6,4(sp)
 4103398:	dd800517 	ldw	r22,20(sp)
 410339c:	1009883a 	mov	r4,r2
 41033a0:	a8800c04 	addi	r2,r21,48
 41033a4:	30800005 	stb	r2,0(r6)
 41033a8:	b0800060 	cmpeqi	r2,r22,1
 41033ac:	180b883a 	mov	r5,r3
 41033b0:	35000044 	addi	r20,r6,1
 41033b4:	10029f1e 	bne	r2,zero,4103e34 <_dtoa_r+0x12c8>
 41033b8:	04400044 	movi	r17,1
 41033bc:	ddc00215 	stw	r23,8(sp)
 41033c0:	00001c06 	br	4103434 <_dtoa_r+0x8c8>
 41033c4:	800d883a 	mov	r6,r16
 41033c8:	900f883a 	mov	r7,r18
 41033cc:	a809883a 	mov	r4,r21
 41033d0:	980b883a 	mov	r5,r19
 41033d4:	410b7d80 	call	410b7d8 <__divdf3>
 41033d8:	180b883a 	mov	r5,r3
 41033dc:	1009883a 	mov	r4,r2
 41033e0:	410d40c0 	call	410d40c <__fixdfsi>
 41033e4:	1009883a 	mov	r4,r2
 41033e8:	102f883a 	mov	r23,r2
 41033ec:	410d48c0 	call	410d48c <__floatsidf>
 41033f0:	800d883a 	mov	r6,r16
 41033f4:	900f883a 	mov	r7,r18
 41033f8:	1009883a 	mov	r4,r2
 41033fc:	180b883a 	mov	r5,r3
 4103400:	410c3580 	call	410c358 <__muldf3>
 4103404:	a809883a 	mov	r4,r21
 4103408:	980b883a 	mov	r5,r19
 410340c:	100d883a 	mov	r6,r2
 4103410:	180f883a 	mov	r7,r3
 4103414:	410cb040 	call	410cb04 <__subdf3>
 4103418:	b9000c04 	addi	r4,r23,48
 410341c:	a1000005 	stb	r4,0(r20)
 4103420:	8c400044 	addi	r17,r17,1
 4103424:	a5000044 	addi	r20,r20,1
 4103428:	1009883a 	mov	r4,r2
 410342c:	180b883a 	mov	r5,r3
 4103430:	8d827e26 	beq	r17,r22,4103e2c <_dtoa_r+0x12c0>
 4103434:	000d883a 	mov	r6,zero
 4103438:	01d00934 	movhi	r7,16420
 410343c:	410c3580 	call	410c358 <__muldf3>
 4103440:	000d883a 	mov	r6,zero
 4103444:	000f883a 	mov	r7,zero
 4103448:	1009883a 	mov	r4,r2
 410344c:	180b883a 	mov	r5,r3
 4103450:	102b883a 	mov	r21,r2
 4103454:	1827883a 	mov	r19,r3
 4103458:	410c1080 	call	410c108 <__eqdf2>
 410345c:	103fd91e 	bne	r2,zero,41033c4 <_dtoa_r+0x858>
 4103460:	d8800417 	ldw	r2,16(sp)
 4103464:	ddc00217 	ldw	r23,8(sp)
 4103468:	a02b883a 	mov	r21,r20
 410346c:	10800044 	addi	r2,r2,1
 4103470:	d8800415 	stw	r2,16(sp)
 4103474:	0000a006 	br	41036f8 <_dtoa_r+0xb8c>
 4103478:	d8c00717 	ldw	r3,28(sp)
 410347c:	1800e326 	beq	r3,zero,410380c <_dtoa_r+0xca0>
 4103480:	d8c00217 	ldw	r3,8(sp)
 4103484:	18c00088 	cmpgei	r3,r3,2
 4103488:	1801e026 	beq	r3,zero,4103c0c <_dtoa_r+0x10a0>
 410348c:	d8800517 	ldw	r2,20(sp)
 4103490:	153fffc4 	addi	r20,r2,-1
 4103494:	d8800817 	ldw	r2,32(sp)
 4103498:	1501bc0e 	bge	r2,r20,4103b8c <_dtoa_r+0x1020>
 410349c:	d8800817 	ldw	r2,32(sp)
 41034a0:	d8c00317 	ldw	r3,12(sp)
 41034a4:	dd000815 	stw	r20,32(sp)
 41034a8:	a085c83a 	sub	r2,r20,r2
 41034ac:	1885883a 	add	r2,r3,r2
 41034b0:	d8800315 	stw	r2,12(sp)
 41034b4:	0029883a 	mov	r20,zero
 41034b8:	d8800517 	ldw	r2,20(sp)
 41034bc:	10028b16 	blt	r2,zero,4103eec <_dtoa_r+0x1380>
 41034c0:	d8c00617 	ldw	r3,24(sp)
 41034c4:	b0ad883a 	add	r22,r22,r2
 41034c8:	1885883a 	add	r2,r3,r2
 41034cc:	1825883a 	mov	r18,r3
 41034d0:	d8800615 	stw	r2,24(sp)
 41034d4:	01400044 	movi	r5,1
 41034d8:	b809883a 	mov	r4,r23
 41034dc:	410603c0 	call	410603c <__i2b>
 41034e0:	1021883a 	mov	r16,r2
 41034e4:	0480080e 	bge	zero,r18,4103508 <_dtoa_r+0x99c>
 41034e8:	0580070e 	bge	zero,r22,4103508 <_dtoa_r+0x99c>
 41034ec:	9005883a 	mov	r2,r18
 41034f0:	b4819e16 	blt	r22,r18,4103b6c <_dtoa_r+0x1000>
 41034f4:	d8c00617 	ldw	r3,24(sp)
 41034f8:	90a5c83a 	sub	r18,r18,r2
 41034fc:	b0adc83a 	sub	r22,r22,r2
 4103500:	1887c83a 	sub	r3,r3,r2
 4103504:	d8c00615 	stw	r3,24(sp)
 4103508:	d8800817 	ldw	r2,32(sp)
 410350c:	10001426 	beq	r2,zero,4103560 <_dtoa_r+0x9f4>
 4103510:	d8800717 	ldw	r2,28(sp)
 4103514:	1001ee26 	beq	r2,zero,4103cd0 <_dtoa_r+0x1164>
 4103518:	05000e0e 	bge	zero,r20,4103554 <_dtoa_r+0x9e8>
 410351c:	800b883a 	mov	r5,r16
 4103520:	a00d883a 	mov	r6,r20
 4103524:	b809883a 	mov	r4,r23
 4103528:	41063b00 	call	41063b0 <__pow5mult>
 410352c:	e00d883a 	mov	r6,fp
 4103530:	100b883a 	mov	r5,r2
 4103534:	b809883a 	mov	r4,r23
 4103538:	1021883a 	mov	r16,r2
 410353c:	41060ec0 	call	41060ec <__multiply>
 4103540:	102b883a 	mov	r21,r2
 4103544:	e00b883a 	mov	r5,fp
 4103548:	b809883a 	mov	r4,r23
 410354c:	4105c700 	call	4105c70 <_Bfree>
 4103550:	a839883a 	mov	fp,r21
 4103554:	d8800817 	ldw	r2,32(sp)
 4103558:	150dc83a 	sub	r6,r2,r20
 410355c:	15025e1e 	bne	r2,r20,4103ed8 <_dtoa_r+0x136c>
 4103560:	01400044 	movi	r5,1
 4103564:	b809883a 	mov	r4,r23
 4103568:	410603c0 	call	410603c <__i2b>
 410356c:	d9800317 	ldw	r6,12(sp)
 4103570:	1029883a 	mov	r20,r2
 4103574:	0180b716 	blt	zero,r6,4103854 <_dtoa_r+0xce8>
 4103578:	d8800217 	ldw	r2,8(sp)
 410357c:	10800088 	cmpgei	r2,r2,2
 4103580:	10014d26 	beq	r2,zero,4103ab8 <_dtoa_r+0xf4c>
 4103584:	0023883a 	mov	r17,zero
 4103588:	d8c00317 	ldw	r3,12(sp)
 410358c:	00800044 	movi	r2,1
 4103590:	1800b81e 	bne	r3,zero,4103874 <_dtoa_r+0xd08>
 4103594:	1585883a 	add	r2,r2,r22
 4103598:	108007cc 	andi	r2,r2,31
 410359c:	1000a526 	beq	r2,zero,4103834 <_dtoa_r+0xcc8>
 41035a0:	00c00804 	movi	r3,32
 41035a4:	1887c83a 	sub	r3,r3,r2
 41035a8:	19000150 	cmplti	r4,r3,5
 41035ac:	20033c1e 	bne	r4,zero,41042a0 <_dtoa_r+0x1734>
 41035b0:	00c00704 	movi	r3,28
 41035b4:	1885c83a 	sub	r2,r3,r2
 41035b8:	d8c00617 	ldw	r3,24(sp)
 41035bc:	90a5883a 	add	r18,r18,r2
 41035c0:	b0ad883a 	add	r22,r22,r2
 41035c4:	1887883a 	add	r3,r3,r2
 41035c8:	d8c00615 	stw	r3,24(sp)
 41035cc:	d8800617 	ldw	r2,24(sp)
 41035d0:	00809216 	blt	zero,r2,410381c <_dtoa_r+0xcb0>
 41035d4:	0580050e 	bge	zero,r22,41035ec <_dtoa_r+0xa80>
 41035d8:	a00b883a 	mov	r5,r20
 41035dc:	b00d883a 	mov	r6,r22
 41035e0:	b809883a 	mov	r4,r23
 41035e4:	41064f80 	call	41064f8 <__lshift>
 41035e8:	1029883a 	mov	r20,r2
 41035ec:	d8800917 	ldw	r2,36(sp)
 41035f0:	1001151e 	bne	r2,zero,4103a48 <_dtoa_r+0xedc>
 41035f4:	d8800517 	ldw	r2,20(sp)
 41035f8:	0081020e 	bge	zero,r2,4103a04 <_dtoa_r+0xe98>
 41035fc:	d8800717 	ldw	r2,28(sp)
 4103600:	1000af1e 	bne	r2,zero,41038c0 <_dtoa_r+0xd54>
 4103604:	d8800417 	ldw	r2,16(sp)
 4103608:	10800044 	addi	r2,r2,1
 410360c:	d8800415 	stw	r2,16(sp)
 4103610:	dc800517 	ldw	r18,20(sp)
 4103614:	dd400117 	ldw	r21,4(sp)
 4103618:	04400044 	movi	r17,1
 410361c:	00000706 	br	410363c <_dtoa_r+0xad0>
 4103620:	e00b883a 	mov	r5,fp
 4103624:	000f883a 	mov	r7,zero
 4103628:	01800284 	movi	r6,10
 410362c:	b809883a 	mov	r4,r23
 4103630:	4105c940 	call	4105c94 <__multadd>
 4103634:	1039883a 	mov	fp,r2
 4103638:	8c400044 	addi	r17,r17,1
 410363c:	a00b883a 	mov	r5,r20
 4103640:	e009883a 	mov	r4,fp
 4103644:	410294c0 	call	410294c <quorem>
 4103648:	14c00c04 	addi	r19,r2,48
 410364c:	ac45883a 	add	r2,r21,r17
 4103650:	14ffffc5 	stb	r19,-1(r2)
 4103654:	8cbff216 	blt	r17,r18,4103620 <_dtoa_r+0xab4>
 4103658:	d8800517 	ldw	r2,20(sp)
 410365c:	0081510e 	bge	zero,r2,4103ba4 <_dtoa_r+0x1038>
 4103660:	d8c00117 	ldw	r3,4(sp)
 4103664:	0023883a 	mov	r17,zero
 4103668:	18ab883a 	add	r21,r3,r2
 410366c:	e00b883a 	mov	r5,fp
 4103670:	01800044 	movi	r6,1
 4103674:	b809883a 	mov	r4,r23
 4103678:	41064f80 	call	41064f8 <__lshift>
 410367c:	1009883a 	mov	r4,r2
 4103680:	a00b883a 	mov	r5,r20
 4103684:	1039883a 	mov	fp,r2
 4103688:	41066800 	call	4106680 <__mcmp>
 410368c:	a93fffc3 	ldbu	r4,-1(r21)
 4103690:	0081490e 	bge	zero,r2,4103bb8 <_dtoa_r+0x104c>
 4103694:	d9400117 	ldw	r5,4(sp)
 4103698:	00000306 	br	41036a8 <_dtoa_r+0xb3c>
 410369c:	19415426 	beq	r3,r5,4103bf0 <_dtoa_r+0x1084>
 41036a0:	193fffc3 	ldbu	r4,-1(r3)
 41036a4:	182b883a 	mov	r21,r3
 41036a8:	20803fcc 	andi	r2,r4,255
 41036ac:	1080201c 	xori	r2,r2,128
 41036b0:	10bfe004 	addi	r2,r2,-128
 41036b4:	10800e60 	cmpeqi	r2,r2,57
 41036b8:	a8ffffc4 	addi	r3,r21,-1
 41036bc:	103ff71e 	bne	r2,zero,410369c <_dtoa_r+0xb30>
 41036c0:	21000044 	addi	r4,r4,1
 41036c4:	19000005 	stb	r4,0(r3)
 41036c8:	a00b883a 	mov	r5,r20
 41036cc:	b809883a 	mov	r4,r23
 41036d0:	4105c700 	call	4105c70 <_Bfree>
 41036d4:	80000826 	beq	r16,zero,41036f8 <_dtoa_r+0xb8c>
 41036d8:	88000426 	beq	r17,zero,41036ec <_dtoa_r+0xb80>
 41036dc:	8c000326 	beq	r17,r16,41036ec <_dtoa_r+0xb80>
 41036e0:	880b883a 	mov	r5,r17
 41036e4:	b809883a 	mov	r4,r23
 41036e8:	4105c700 	call	4105c70 <_Bfree>
 41036ec:	800b883a 	mov	r5,r16
 41036f0:	b809883a 	mov	r4,r23
 41036f4:	4105c700 	call	4105c70 <_Bfree>
 41036f8:	e00b883a 	mov	r5,fp
 41036fc:	b809883a 	mov	r4,r23
 4103700:	4105c700 	call	4105c70 <_Bfree>
 4103704:	d8801f17 	ldw	r2,124(sp)
 4103708:	d8c00417 	ldw	r3,16(sp)
 410370c:	a8000005 	stb	zero,0(r21)
 4103710:	10c00015 	stw	r3,0(r2)
 4103714:	d8802117 	ldw	r2,132(sp)
 4103718:	103d4626 	beq	r2,zero,4102c34 <_dtoa_r+0xc8>
 410371c:	15400015 	stw	r21,0(r2)
 4103720:	003d4406 	br	4102c34 <_dtoa_r+0xc8>
 4103724:	d8000915 	stw	zero,36(sp)
 4103728:	b0002416 	blt	r22,zero,41037bc <_dtoa_r+0xc50>
 410372c:	d8000615 	stw	zero,24(sp)
 4103730:	d8800317 	ldw	r2,12(sp)
 4103734:	d8c00217 	ldw	r3,8(sp)
 4103738:	d8000815 	stw	zero,32(sp)
 410373c:	b0ad883a 	add	r22,r22,r2
 4103740:	d8800415 	stw	r2,16(sp)
 4103744:	188002a8 	cmpgeui	r2,r3,10
 4103748:	103db326 	beq	r2,zero,4102e18 <_dtoa_r+0x2ac>
 410374c:	00800044 	movi	r2,1
 4103750:	d8800715 	stw	r2,28(sp)
 4103754:	00bfffc4 	movi	r2,-1
 4103758:	04000044 	movi	r16,1
 410375c:	d8000215 	stw	zero,8(sp)
 4103760:	d8800515 	stw	r2,20(sp)
 4103764:	d8001e15 	stw	zero,120(sp)
 4103768:	d8800517 	ldw	r2,20(sp)
 410376c:	b8001115 	stw	zero,68(r23)
 4103770:	000b883a 	mov	r5,zero
 4103774:	d8800b15 	stw	r2,44(sp)
 4103778:	003dc406 	br	4102e8c <_dtoa_r+0x320>
 410377c:	188000e0 	cmpeqi	r2,r3,3
 4103780:	d8000715 	stw	zero,28(sp)
 4103784:	1002ac26 	beq	r2,zero,4104238 <_dtoa_r+0x16cc>
 4103788:	d8801e17 	ldw	r2,120(sp)
 410378c:	d8c00417 	ldw	r3,16(sp)
 4103790:	10c5883a 	add	r2,r2,r3
 4103794:	d8800b15 	stw	r2,44(sp)
 4103798:	10800044 	addi	r2,r2,1
 410379c:	d8800515 	stw	r2,20(sp)
 41037a0:	100d883a 	mov	r6,r2
 41037a4:	00bdae16 	blt	zero,r2,4102e60 <_dtoa_r+0x2f4>
 41037a8:	01800044 	movi	r6,1
 41037ac:	003dac06 	br	4102e60 <_dtoa_r+0x2f4>
 41037b0:	00800044 	movi	r2,1
 41037b4:	d8800915 	stw	r2,36(sp)
 41037b8:	b03d890e 	bge	r22,zero,4102de0 <_dtoa_r+0x274>
 41037bc:	00800044 	movi	r2,1
 41037c0:	1405c83a 	sub	r2,r2,r16
 41037c4:	d8800615 	stw	r2,24(sp)
 41037c8:	002d883a 	mov	r22,zero
 41037cc:	003d8506 	br	4102de4 <_dtoa_r+0x278>
 41037d0:	a809883a 	mov	r4,r21
 41037d4:	410d48c0 	call	410d48c <__floatsidf>
 41037d8:	900d883a 	mov	r6,r18
 41037dc:	b00f883a 	mov	r7,r22
 41037e0:	1009883a 	mov	r4,r2
 41037e4:	180b883a 	mov	r5,r3
 41037e8:	410c1080 	call	410c108 <__eqdf2>
 41037ec:	103d6926 	beq	r2,zero,4102d94 <_dtoa_r+0x228>
 41037f0:	a8bfffc4 	addi	r2,r21,-1
 41037f4:	d8800315 	stw	r2,12(sp)
 41037f8:	003d6606 	br	4102d94 <_dtoa_r+0x228>
 41037fc:	00810474 	movhi	r2,1041
 4103800:	10832b04 	addi	r2,r2,3244
 4103804:	d8800115 	stw	r2,4(sp)
 4103808:	003d0a06 	br	4102c34 <_dtoa_r+0xc8>
 410380c:	dd000817 	ldw	r20,32(sp)
 4103810:	dc800617 	ldw	r18,24(sp)
 4103814:	0021883a 	mov	r16,zero
 4103818:	003f3206 	br	41034e4 <_dtoa_r+0x978>
 410381c:	e00b883a 	mov	r5,fp
 4103820:	100d883a 	mov	r6,r2
 4103824:	b809883a 	mov	r4,r23
 4103828:	41064f80 	call	41064f8 <__lshift>
 410382c:	1039883a 	mov	fp,r2
 4103830:	003f6806 	br	41035d4 <_dtoa_r+0xa68>
 4103834:	00800704 	movi	r2,28
 4103838:	003f5f06 	br	41035b8 <_dtoa_r+0xa4c>
 410383c:	01000804 	movi	r4,32
 4103840:	2089c83a 	sub	r4,r4,r2
 4103844:	9908983a 	sll	r4,r19,r4
 4103848:	003d1d06 	br	4102cc0 <_dtoa_r+0x154>
 410384c:	04000044 	movi	r16,1
 4103850:	003d7606 	br	4102e2c <_dtoa_r+0x2c0>
 4103854:	100b883a 	mov	r5,r2
 4103858:	b809883a 	mov	r4,r23
 410385c:	41063b00 	call	41063b0 <__pow5mult>
 4103860:	d8c00217 	ldw	r3,8(sp)
 4103864:	1029883a 	mov	r20,r2
 4103868:	18c00090 	cmplti	r3,r3,2
 410386c:	1801511e 	bne	r3,zero,4103db4 <_dtoa_r+0x1248>
 4103870:	0023883a 	mov	r17,zero
 4103874:	a0800417 	ldw	r2,16(r20)
 4103878:	10800104 	addi	r2,r2,4
 410387c:	100490ba 	slli	r2,r2,2
 4103880:	a085883a 	add	r2,r20,r2
 4103884:	11000017 	ldw	r4,0(r2)
 4103888:	4105f280 	call	4105f28 <__hi0bits>
 410388c:	00c00804 	movi	r3,32
 4103890:	1885c83a 	sub	r2,r3,r2
 4103894:	003f3f06 	br	4103594 <_dtoa_r+0xa28>
 4103898:	800b883a 	mov	r5,r16
 410389c:	000f883a 	mov	r7,zero
 41038a0:	01800284 	movi	r6,10
 41038a4:	b809883a 	mov	r4,r23
 41038a8:	4105c940 	call	4105c94 <__multadd>
 41038ac:	1021883a 	mov	r16,r2
 41038b0:	d8800b17 	ldw	r2,44(sp)
 41038b4:	00824b0e 	bge	zero,r2,41041e4 <_dtoa_r+0x1678>
 41038b8:	dd400415 	stw	r21,16(sp)
 41038bc:	d8800515 	stw	r2,20(sp)
 41038c0:	0480ac16 	blt	zero,r18,4103b74 <_dtoa_r+0x1008>
 41038c4:	8801731e 	bne	r17,zero,4103e94 <_dtoa_r+0x1328>
 41038c8:	8025883a 	mov	r18,r16
 41038cc:	dd800117 	ldw	r22,4(sp)
 41038d0:	d9000517 	ldw	r4,20(sp)
 41038d4:	98c0004c 	andi	r3,r19,1
 41038d8:	b0bfffc4 	addi	r2,r22,-1
 41038dc:	1105883a 	add	r2,r2,r4
 41038e0:	d8800515 	stw	r2,20(sp)
 41038e4:	d8800217 	ldw	r2,8(sp)
 41038e8:	d8c00815 	stw	r3,32(sp)
 41038ec:	1884b03a 	or	r2,r3,r2
 41038f0:	d8800715 	stw	r2,28(sp)
 41038f4:	00002906 	br	410399c <_dtoa_r+0xe30>
 41038f8:	e009883a 	mov	r4,fp
 41038fc:	41066800 	call	4106680 <__mcmp>
 4103900:	980b883a 	mov	r5,r19
 4103904:	b809883a 	mov	r4,r23
 4103908:	d8800315 	stw	r2,12(sp)
 410390c:	4105c700 	call	4105c70 <_Bfree>
 4103910:	d8800317 	ldw	r2,12(sp)
 4103914:	1000021e 	bne	r2,zero,4103920 <_dtoa_r+0xdb4>
 4103918:	d8c00717 	ldw	r3,28(sp)
 410391c:	18022326 	beq	r3,zero,41041ac <_dtoa_r+0x1640>
 4103920:	b4c00044 	addi	r19,r22,1
 4103924:	88012916 	blt	r17,zero,4103dcc <_dtoa_r+0x1260>
 4103928:	d8c00217 	ldw	r3,8(sp)
 410392c:	88e2b03a 	or	r17,r17,r3
 4103930:	d8c00817 	ldw	r3,32(sp)
 4103934:	1c62b03a 	or	r17,r3,r17
 4103938:	88012426 	beq	r17,zero,4103dcc <_dtoa_r+0x1260>
 410393c:	00816f16 	blt	zero,r2,4103efc <_dtoa_r+0x1390>
 4103940:	d8800517 	ldw	r2,20(sp)
 4103944:	b5400005 	stb	r21,0(r22)
 4103948:	15817926 	beq	r2,r22,4103f30 <_dtoa_r+0x13c4>
 410394c:	e00b883a 	mov	r5,fp
 4103950:	000f883a 	mov	r7,zero
 4103954:	01800284 	movi	r6,10
 4103958:	b809883a 	mov	r4,r23
 410395c:	4105c940 	call	4105c94 <__multadd>
 4103960:	1039883a 	mov	fp,r2
 4103964:	800b883a 	mov	r5,r16
 4103968:	000f883a 	mov	r7,zero
 410396c:	01800284 	movi	r6,10
 4103970:	b809883a 	mov	r4,r23
 4103974:	84801f26 	beq	r16,r18,41039f4 <_dtoa_r+0xe88>
 4103978:	4105c940 	call	4105c94 <__multadd>
 410397c:	900b883a 	mov	r5,r18
 4103980:	000f883a 	mov	r7,zero
 4103984:	01800284 	movi	r6,10
 4103988:	b809883a 	mov	r4,r23
 410398c:	1021883a 	mov	r16,r2
 4103990:	4105c940 	call	4105c94 <__multadd>
 4103994:	1025883a 	mov	r18,r2
 4103998:	982d883a 	mov	r22,r19
 410399c:	a00b883a 	mov	r5,r20
 41039a0:	e009883a 	mov	r4,fp
 41039a4:	410294c0 	call	410294c <quorem>
 41039a8:	800b883a 	mov	r5,r16
 41039ac:	e009883a 	mov	r4,fp
 41039b0:	102b883a 	mov	r21,r2
 41039b4:	d8800615 	stw	r2,24(sp)
 41039b8:	41066800 	call	4106680 <__mcmp>
 41039bc:	a00b883a 	mov	r5,r20
 41039c0:	900d883a 	mov	r6,r18
 41039c4:	b809883a 	mov	r4,r23
 41039c8:	1023883a 	mov	r17,r2
 41039cc:	41066d80 	call	41066d8 <__mdiff>
 41039d0:	1027883a 	mov	r19,r2
 41039d4:	10800317 	ldw	r2,12(r2)
 41039d8:	ad400c04 	addi	r21,r21,48
 41039dc:	980b883a 	mov	r5,r19
 41039e0:	103fc526 	beq	r2,zero,41038f8 <_dtoa_r+0xd8c>
 41039e4:	b809883a 	mov	r4,r23
 41039e8:	4105c700 	call	4105c70 <_Bfree>
 41039ec:	00800044 	movi	r2,1
 41039f0:	003fcb06 	br	4103920 <_dtoa_r+0xdb4>
 41039f4:	4105c940 	call	4105c94 <__multadd>
 41039f8:	1021883a 	mov	r16,r2
 41039fc:	1025883a 	mov	r18,r2
 4103a00:	003fe506 	br	4103998 <_dtoa_r+0xe2c>
 4103a04:	d8800217 	ldw	r2,8(sp)
 4103a08:	108000d0 	cmplti	r2,r2,3
 4103a0c:	10003e26 	beq	r2,zero,4103b08 <_dtoa_r+0xf9c>
 4103a10:	d8800717 	ldw	r2,28(sp)
 4103a14:	103faa1e 	bne	r2,zero,41038c0 <_dtoa_r+0xd54>
 4103a18:	a00b883a 	mov	r5,r20
 4103a1c:	e009883a 	mov	r4,fp
 4103a20:	410294c0 	call	410294c <quorem>
 4103a24:	14c00c04 	addi	r19,r2,48
 4103a28:	d8800117 	ldw	r2,4(sp)
 4103a2c:	0023883a 	mov	r17,zero
 4103a30:	15400044 	addi	r21,r2,1
 4103a34:	14c00005 	stb	r19,0(r2)
 4103a38:	d8800417 	ldw	r2,16(sp)
 4103a3c:	10800044 	addi	r2,r2,1
 4103a40:	d8800415 	stw	r2,16(sp)
 4103a44:	003f0906 	br	410366c <_dtoa_r+0xb00>
 4103a48:	a00b883a 	mov	r5,r20
 4103a4c:	e009883a 	mov	r4,fp
 4103a50:	41066800 	call	4106680 <__mcmp>
 4103a54:	103ee70e 	bge	r2,zero,41035f4 <_dtoa_r+0xa88>
 4103a58:	e00b883a 	mov	r5,fp
 4103a5c:	000f883a 	mov	r7,zero
 4103a60:	01800284 	movi	r6,10
 4103a64:	b809883a 	mov	r4,r23
 4103a68:	4105c940 	call	4105c94 <__multadd>
 4103a6c:	d8c00417 	ldw	r3,16(sp)
 4103a70:	1039883a 	mov	fp,r2
 4103a74:	d8800717 	ldw	r2,28(sp)
 4103a78:	1d7fffc4 	addi	r21,r3,-1
 4103a7c:	103f861e 	bne	r2,zero,4103898 <_dtoa_r+0xd2c>
 4103a80:	d8800b17 	ldw	r2,44(sp)
 4103a84:	0081d20e 	bge	zero,r2,41041d0 <_dtoa_r+0x1664>
 4103a88:	d8800515 	stw	r2,20(sp)
 4103a8c:	003ee006 	br	4103610 <_dtoa_r+0xaa4>
 4103a90:	00810474 	movhi	r2,1041
 4103a94:	1007883a 	mov	r3,r2
 4103a98:	18c33404 	addi	r3,r3,3280
 4103a9c:	00810474 	movhi	r2,1041
 4103aa0:	d8c00115 	stw	r3,4(sp)
 4103aa4:	108334c4 	addi	r2,r2,3283
 4103aa8:	003ded06 	br	4103260 <_dtoa_r+0x6f4>
 4103aac:	00800044 	movi	r2,1
 4103ab0:	d8800715 	stw	r2,28(sp)
 4103ab4:	003f3406 	br	4103788 <_dtoa_r+0xc1c>
 4103ab8:	983eb21e 	bne	r19,zero,4103584 <_dtoa_r+0xa18>
 4103abc:	00800434 	movhi	r2,16
 4103ac0:	10bfffc4 	addi	r2,r2,-1
 4103ac4:	8884703a 	and	r2,r17,r2
 4103ac8:	103eae1e 	bne	r2,zero,4103584 <_dtoa_r+0xa18>
 4103acc:	8c5ffc2c 	andhi	r17,r17,32752
 4103ad0:	883eac26 	beq	r17,zero,4103584 <_dtoa_r+0xa18>
 4103ad4:	d8800617 	ldw	r2,24(sp)
 4103ad8:	b5800044 	addi	r22,r22,1
 4103adc:	04400044 	movi	r17,1
 4103ae0:	10800044 	addi	r2,r2,1
 4103ae4:	d8800615 	stw	r2,24(sp)
 4103ae8:	003ea706 	br	4103588 <_dtoa_r+0xa1c>
 4103aec:	00800044 	movi	r2,1
 4103af0:	d8800515 	stw	r2,20(sp)
 4103af4:	d8801e15 	stw	r2,120(sp)
 4103af8:	003f1b06 	br	4103768 <_dtoa_r+0xbfc>
 4103afc:	d8800b17 	ldw	r2,44(sp)
 4103b00:	dd400415 	stw	r21,16(sp)
 4103b04:	d8800515 	stw	r2,20(sp)
 4103b08:	d8800517 	ldw	r2,20(sp)
 4103b0c:	103e081e 	bne	r2,zero,4103330 <_dtoa_r+0x7c4>
 4103b10:	a00b883a 	mov	r5,r20
 4103b14:	b809883a 	mov	r4,r23
 4103b18:	000f883a 	mov	r7,zero
 4103b1c:	01800144 	movi	r6,5
 4103b20:	4105c940 	call	4105c94 <__multadd>
 4103b24:	100b883a 	mov	r5,r2
 4103b28:	e009883a 	mov	r4,fp
 4103b2c:	1029883a 	mov	r20,r2
 4103b30:	41066800 	call	4106680 <__mcmp>
 4103b34:	00bdfe0e 	bge	zero,r2,4103330 <_dtoa_r+0x7c4>
 4103b38:	d8c00117 	ldw	r3,4(sp)
 4103b3c:	00800c44 	movi	r2,49
 4103b40:	18800005 	stb	r2,0(r3)
 4103b44:	d8800417 	ldw	r2,16(sp)
 4103b48:	1d400044 	addi	r21,r3,1
 4103b4c:	14400044 	addi	r17,r2,1
 4103b50:	a00b883a 	mov	r5,r20
 4103b54:	b809883a 	mov	r4,r23
 4103b58:	4105c700 	call	4105c70 <_Bfree>
 4103b5c:	88800044 	addi	r2,r17,1
 4103b60:	d8800415 	stw	r2,16(sp)
 4103b64:	803ee11e 	bne	r16,zero,41036ec <_dtoa_r+0xb80>
 4103b68:	003ee306 	br	41036f8 <_dtoa_r+0xb8c>
 4103b6c:	b005883a 	mov	r2,r22
 4103b70:	003e6006 	br	41034f4 <_dtoa_r+0x988>
 4103b74:	800b883a 	mov	r5,r16
 4103b78:	900d883a 	mov	r6,r18
 4103b7c:	b809883a 	mov	r4,r23
 4103b80:	41064f80 	call	41064f8 <__lshift>
 4103b84:	1021883a 	mov	r16,r2
 4103b88:	003f4e06 	br	41038c4 <_dtoa_r+0xd58>
 4103b8c:	1529c83a 	sub	r20,r2,r20
 4103b90:	003e4906 	br	41034b8 <_dtoa_r+0x94c>
 4103b94:	dcc00c15 	stw	r19,48(sp)
 4103b98:	8825883a 	mov	r18,r17
 4103b9c:	05400084 	movi	r21,2
 4103ba0:	003cdf06 	br	4102f20 <_dtoa_r+0x3b4>
 4103ba4:	00800044 	movi	r2,1
 4103ba8:	003ead06 	br	4103660 <_dtoa_r+0xaf4>
 4103bac:	00800044 	movi	r2,1
 4103bb0:	d8800715 	stw	r2,28(sp)
 4103bb4:	003ca506 	br	4102e4c <_dtoa_r+0x2e0>
 4103bb8:	1000021e 	bne	r2,zero,4103bc4 <_dtoa_r+0x1058>
 4103bbc:	98c0004c 	andi	r3,r19,1
 4103bc0:	183eb41e 	bne	r3,zero,4103694 <_dtoa_r+0xb28>
 4103bc4:	2005883a 	mov	r2,r4
 4103bc8:	00000206 	br	4103bd4 <_dtoa_r+0x1068>
 4103bcc:	a8bfff83 	ldbu	r2,-2(r21)
 4103bd0:	182b883a 	mov	r21,r3
 4103bd4:	10803fcc 	andi	r2,r2,255
 4103bd8:	1080201c 	xori	r2,r2,128
 4103bdc:	10bfe004 	addi	r2,r2,-128
 4103be0:	10800c18 	cmpnei	r2,r2,48
 4103be4:	a8ffffc4 	addi	r3,r21,-1
 4103be8:	103ff826 	beq	r2,zero,4103bcc <_dtoa_r+0x1060>
 4103bec:	003eb606 	br	41036c8 <_dtoa_r+0xb5c>
 4103bf0:	d8c00117 	ldw	r3,4(sp)
 4103bf4:	00800c44 	movi	r2,49
 4103bf8:	18800005 	stb	r2,0(r3)
 4103bfc:	d8800417 	ldw	r2,16(sp)
 4103c00:	10800044 	addi	r2,r2,1
 4103c04:	d8800415 	stw	r2,16(sp)
 4103c08:	003eaf06 	br	41036c8 <_dtoa_r+0xb5c>
 4103c0c:	d8c00a17 	ldw	r3,40(sp)
 4103c10:	18011826 	beq	r3,zero,4104074 <_dtoa_r+0x1508>
 4103c14:	d8c00617 	ldw	r3,24(sp)
 4103c18:	10810cc4 	addi	r2,r2,1075
 4103c1c:	b0ad883a 	add	r22,r22,r2
 4103c20:	1885883a 	add	r2,r3,r2
 4103c24:	dd000817 	ldw	r20,32(sp)
 4103c28:	1825883a 	mov	r18,r3
 4103c2c:	d8800615 	stw	r2,24(sp)
 4103c30:	003e2806 	br	41034d4 <_dtoa_r+0x968>
 4103c34:	a809883a 	mov	r4,r21
 4103c38:	410d48c0 	call	410d48c <__floatsidf>
 4103c3c:	800d883a 	mov	r6,r16
 4103c40:	900f883a 	mov	r7,r18
 4103c44:	1009883a 	mov	r4,r2
 4103c48:	180b883a 	mov	r5,r3
 4103c4c:	410c3580 	call	410c358 <__muldf3>
 4103c50:	000d883a 	mov	r6,zero
 4103c54:	01d00734 	movhi	r7,16412
 4103c58:	1009883a 	mov	r4,r2
 4103c5c:	180b883a 	mov	r5,r3
 4103c60:	410aee80 	call	410aee8 <__adddf3>
 4103c64:	1029883a 	mov	r20,r2
 4103c68:	00bf3034 	movhi	r2,64704
 4103c6c:	1885883a 	add	r2,r3,r2
 4103c70:	d8800c15 	stw	r2,48(sp)
 4103c74:	8009883a 	mov	r4,r16
 4103c78:	900b883a 	mov	r5,r18
 4103c7c:	000d883a 	mov	r6,zero
 4103c80:	01d00534 	movhi	r7,16404
 4103c84:	410cb040 	call	410cb04 <__subdf3>
 4103c88:	dd400c17 	ldw	r21,48(sp)
 4103c8c:	a00d883a 	mov	r6,r20
 4103c90:	1009883a 	mov	r4,r2
 4103c94:	a80f883a 	mov	r7,r21
 4103c98:	180b883a 	mov	r5,r3
 4103c9c:	1025883a 	mov	r18,r2
 4103ca0:	1821883a 	mov	r16,r3
 4103ca4:	410c1880 	call	410c188 <__gedf2>
 4103ca8:	00812f16 	blt	zero,r2,4104168 <_dtoa_r+0x15fc>
 4103cac:	a9e0003c 	xorhi	r7,r21,32768
 4103cb0:	a00d883a 	mov	r6,r20
 4103cb4:	9009883a 	mov	r4,r18
 4103cb8:	800b883a 	mov	r5,r16
 4103cbc:	410c2700 	call	410c270 <__ledf2>
 4103cc0:	103d7d0e 	bge	r2,zero,41032b8 <_dtoa_r+0x74c>
 4103cc4:	0029883a 	mov	r20,zero
 4103cc8:	0021883a 	mov	r16,zero
 4103ccc:	003d9806 	br	4103330 <_dtoa_r+0x7c4>
 4103cd0:	d9800817 	ldw	r6,32(sp)
 4103cd4:	e00b883a 	mov	r5,fp
 4103cd8:	b809883a 	mov	r4,r23
 4103cdc:	41063b00 	call	41063b0 <__pow5mult>
 4103ce0:	1039883a 	mov	fp,r2
 4103ce4:	003e1e06 	br	4103560 <_dtoa_r+0x9f4>
 4103ce8:	d8800417 	ldw	r2,16(sp)
 4103cec:	1000ed26 	beq	r2,zero,41040a4 <_dtoa_r+0x1538>
 4103cf0:	00a9c83a 	sub	r20,zero,r2
 4103cf4:	a08003cc 	andi	r2,r20,15
 4103cf8:	100690fa 	slli	r3,r2,3
 4103cfc:	00810474 	movhi	r2,1041
 4103d00:	10837404 	addi	r2,r2,3536
 4103d04:	10c5883a 	add	r2,r2,r3
 4103d08:	11800017 	ldw	r6,0(r2)
 4103d0c:	11c00117 	ldw	r7,4(r2)
 4103d10:	a029d13a 	srai	r20,r20,4
 4103d14:	9809883a 	mov	r4,r19
 4103d18:	880b883a 	mov	r5,r17
 4103d1c:	410c3580 	call	410c358 <__muldf3>
 4103d20:	1021883a 	mov	r16,r2
 4103d24:	1825883a 	mov	r18,r3
 4103d28:	a0013826 	beq	r20,zero,410420c <_dtoa_r+0x16a0>
 4103d2c:	02010474 	movhi	r8,1041
 4103d30:	05400084 	movi	r21,2
 4103d34:	42036a04 	addi	r8,r8,3496
 4103d38:	1009883a 	mov	r4,r2
 4103d3c:	9805883a 	mov	r2,r19
 4103d40:	180b883a 	mov	r5,r3
 4103d44:	dc000c15 	stw	r16,48(sp)
 4103d48:	8827883a 	mov	r19,r17
 4103d4c:	0007883a 	mov	r3,zero
 4103d50:	a823883a 	mov	r17,r21
 4103d54:	4021883a 	mov	r16,r8
 4103d58:	102b883a 	mov	r21,r2
 4103d5c:	a180004c 	andi	r6,r20,1
 4103d60:	30000726 	beq	r6,zero,4103d80 <_dtoa_r+0x1214>
 4103d64:	81800017 	ldw	r6,0(r16)
 4103d68:	81c00117 	ldw	r7,4(r16)
 4103d6c:	8c400044 	addi	r17,r17,1
 4103d70:	410c3580 	call	410c358 <__muldf3>
 4103d74:	180b883a 	mov	r5,r3
 4103d78:	1009883a 	mov	r4,r2
 4103d7c:	00c00044 	movi	r3,1
 4103d80:	a029d07a 	srai	r20,r20,1
 4103d84:	84000204 	addi	r16,r16,8
 4103d88:	a03ff41e 	bne	r20,zero,4103d5c <_dtoa_r+0x11f0>
 4103d8c:	a805883a 	mov	r2,r21
 4103d90:	18c03fcc 	andi	r3,r3,255
 4103d94:	882b883a 	mov	r21,r17
 4103d98:	dc000c17 	ldw	r16,48(sp)
 4103d9c:	9823883a 	mov	r17,r19
 4103da0:	1027883a 	mov	r19,r2
 4103da4:	183c7726 	beq	r3,zero,4102f84 <_dtoa_r+0x418>
 4103da8:	2021883a 	mov	r16,r4
 4103dac:	2825883a 	mov	r18,r5
 4103db0:	003c7406 	br	4102f84 <_dtoa_r+0x418>
 4103db4:	983eae1e 	bne	r19,zero,4103870 <_dtoa_r+0xd04>
 4103db8:	00800434 	movhi	r2,16
 4103dbc:	10bfffc4 	addi	r2,r2,-1
 4103dc0:	8884703a 	and	r2,r17,r2
 4103dc4:	103f4126 	beq	r2,zero,4103acc <_dtoa_r+0xf60>
 4103dc8:	003ea906 	br	4103870 <_dtoa_r+0xd04>
 4103dcc:	9807883a 	mov	r3,r19
 4103dd0:	a827883a 	mov	r19,r21
 4103dd4:	182b883a 	mov	r21,r3
 4103dd8:	d8c00417 	ldw	r3,16(sp)
 4103ddc:	18c00044 	addi	r3,r3,1
 4103de0:	d8c00415 	stw	r3,16(sp)
 4103de4:	00800d0e 	bge	zero,r2,4103e1c <_dtoa_r+0x12b0>
 4103de8:	e00b883a 	mov	r5,fp
 4103dec:	b809883a 	mov	r4,r23
 4103df0:	01800044 	movi	r6,1
 4103df4:	41064f80 	call	41064f8 <__lshift>
 4103df8:	a00b883a 	mov	r5,r20
 4103dfc:	1009883a 	mov	r4,r2
 4103e00:	1039883a 	mov	fp,r2
 4103e04:	41066800 	call	4106680 <__mcmp>
 4103e08:	0080df0e 	bge	zero,r2,4104188 <_dtoa_r+0x161c>
 4103e0c:	98c00e60 	cmpeqi	r3,r19,57
 4103e10:	1800ce1e 	bne	r3,zero,410414c <_dtoa_r+0x15e0>
 4103e14:	d8800617 	ldw	r2,24(sp)
 4103e18:	14c00c44 	addi	r19,r2,49
 4103e1c:	8023883a 	mov	r17,r16
 4103e20:	b4c00005 	stb	r19,0(r22)
 4103e24:	9021883a 	mov	r16,r18
 4103e28:	003e2706 	br	41036c8 <_dtoa_r+0xb5c>
 4103e2c:	b82b883a 	mov	r21,r23
 4103e30:	ddc00217 	ldw	r23,8(sp)
 4103e34:	200d883a 	mov	r6,r4
 4103e38:	280f883a 	mov	r7,r5
 4103e3c:	410aee80 	call	410aee8 <__adddf3>
 4103e40:	180b883a 	mov	r5,r3
 4103e44:	800d883a 	mov	r6,r16
 4103e48:	900f883a 	mov	r7,r18
 4103e4c:	1009883a 	mov	r4,r2
 4103e50:	1823883a 	mov	r17,r3
 4103e54:	1027883a 	mov	r19,r2
 4103e58:	410c1880 	call	410c188 <__gedf2>
 4103e5c:	d8c00417 	ldw	r3,16(sp)
 4103e60:	18c00044 	addi	r3,r3,1
 4103e64:	d8c00415 	stw	r3,16(sp)
 4103e68:	00808c16 	blt	zero,r2,410409c <_dtoa_r+0x1530>
 4103e6c:	800d883a 	mov	r6,r16
 4103e70:	900f883a 	mov	r7,r18
 4103e74:	9809883a 	mov	r4,r19
 4103e78:	880b883a 	mov	r5,r17
 4103e7c:	410c1080 	call	410c108 <__eqdf2>
 4103e80:	1000021e 	bne	r2,zero,4103e8c <_dtoa_r+0x1320>
 4103e84:	ad40004c 	andi	r21,r21,1
 4103e88:	a800841e 	bne	r21,zero,410409c <_dtoa_r+0x1530>
 4103e8c:	a02b883a 	mov	r21,r20
 4103e90:	003e1906 	br	41036f8 <_dtoa_r+0xb8c>
 4103e94:	81400117 	ldw	r5,4(r16)
 4103e98:	b809883a 	mov	r4,r23
 4103e9c:	4105bcc0 	call	4105bcc <_Balloc>
 4103ea0:	1023883a 	mov	r17,r2
 4103ea4:	1000f326 	beq	r2,zero,4104274 <_dtoa_r+0x1708>
 4103ea8:	81800417 	ldw	r6,16(r16)
 4103eac:	81400304 	addi	r5,r16,12
 4103eb0:	11000304 	addi	r4,r2,12
 4103eb4:	31800084 	addi	r6,r6,2
 4103eb8:	300c90ba 	slli	r6,r6,2
 4103ebc:	41059dc0 	call	41059dc <memcpy>
 4103ec0:	01800044 	movi	r6,1
 4103ec4:	880b883a 	mov	r5,r17
 4103ec8:	b809883a 	mov	r4,r23
 4103ecc:	41064f80 	call	41064f8 <__lshift>
 4103ed0:	1025883a 	mov	r18,r2
 4103ed4:	003e7d06 	br	41038cc <_dtoa_r+0xd60>
 4103ed8:	e00b883a 	mov	r5,fp
 4103edc:	b809883a 	mov	r4,r23
 4103ee0:	41063b00 	call	41063b0 <__pow5mult>
 4103ee4:	1039883a 	mov	fp,r2
 4103ee8:	003d9d06 	br	4103560 <_dtoa_r+0x9f4>
 4103eec:	d8800617 	ldw	r2,24(sp)
 4103ef0:	d8c00517 	ldw	r3,20(sp)
 4103ef4:	10e5c83a 	sub	r18,r2,r3
 4103ef8:	003d7606 	br	41034d4 <_dtoa_r+0x968>
 4103efc:	d8c00417 	ldw	r3,16(sp)
 4103f00:	9805883a 	mov	r2,r19
 4103f04:	a827883a 	mov	r19,r21
 4103f08:	18c00044 	addi	r3,r3,1
 4103f0c:	102b883a 	mov	r21,r2
 4103f10:	d8c00415 	stw	r3,16(sp)
 4103f14:	98800e58 	cmpnei	r2,r19,57
 4103f18:	10008c26 	beq	r2,zero,410414c <_dtoa_r+0x15e0>
 4103f1c:	98c00044 	addi	r3,r19,1
 4103f20:	8023883a 	mov	r17,r16
 4103f24:	b0c00005 	stb	r3,0(r22)
 4103f28:	9021883a 	mov	r16,r18
 4103f2c:	003de606 	br	41036c8 <_dtoa_r+0xb5c>
 4103f30:	9805883a 	mov	r2,r19
 4103f34:	a827883a 	mov	r19,r21
 4103f38:	102b883a 	mov	r21,r2
 4103f3c:	d8800417 	ldw	r2,16(sp)
 4103f40:	8023883a 	mov	r17,r16
 4103f44:	9021883a 	mov	r16,r18
 4103f48:	10800044 	addi	r2,r2,1
 4103f4c:	d8800415 	stw	r2,16(sp)
 4103f50:	003dc606 	br	410366c <_dtoa_r+0xb00>
 4103f54:	d9400c17 	ldw	r5,48(sp)
 4103f58:	a009883a 	mov	r4,r20
 4103f5c:	410c3580 	call	410c358 <__muldf3>
 4103f60:	d9800d17 	ldw	r6,52(sp)
 4103f64:	d9400117 	ldw	r5,4(sp)
 4103f68:	d9001017 	ldw	r4,64(sp)
 4103f6c:	d8800c15 	stw	r2,48(sp)
 4103f70:	d8c00d15 	stw	r3,52(sp)
 4103f74:	29000005 	stb	r4,0(r5)
 4103f78:	31000058 	cmpnei	r4,r6,1
 4103f7c:	29a9883a 	add	r20,r5,r6
 4103f80:	2000a026 	beq	r4,zero,4104204 <_dtoa_r+0x1698>
 4103f84:	dc400e15 	stw	r17,56(sp)
 4103f88:	8009883a 	mov	r4,r16
 4103f8c:	900b883a 	mov	r5,r18
 4103f90:	a823883a 	mov	r17,r21
 4103f94:	000d883a 	mov	r6,zero
 4103f98:	01d00934 	movhi	r7,16420
 4103f9c:	410c3580 	call	410c358 <__muldf3>
 4103fa0:	180b883a 	mov	r5,r3
 4103fa4:	1009883a 	mov	r4,r2
 4103fa8:	1825883a 	mov	r18,r3
 4103fac:	102b883a 	mov	r21,r2
 4103fb0:	410d40c0 	call	410d40c <__fixdfsi>
 4103fb4:	1009883a 	mov	r4,r2
 4103fb8:	1021883a 	mov	r16,r2
 4103fbc:	410d48c0 	call	410d48c <__floatsidf>
 4103fc0:	a809883a 	mov	r4,r21
 4103fc4:	900b883a 	mov	r5,r18
 4103fc8:	100d883a 	mov	r6,r2
 4103fcc:	180f883a 	mov	r7,r3
 4103fd0:	8c400044 	addi	r17,r17,1
 4103fd4:	84000c04 	addi	r16,r16,48
 4103fd8:	410cb040 	call	410cb04 <__subdf3>
 4103fdc:	8c3fffc5 	stb	r16,-1(r17)
 4103fe0:	1009883a 	mov	r4,r2
 4103fe4:	180b883a 	mov	r5,r3
 4103fe8:	a47fea1e 	bne	r20,r17,4103f94 <_dtoa_r+0x1428>
 4103fec:	dc400e17 	ldw	r17,56(sp)
 4103ff0:	1021883a 	mov	r16,r2
 4103ff4:	1825883a 	mov	r18,r3
 4103ff8:	d9000c17 	ldw	r4,48(sp)
 4103ffc:	d9400d17 	ldw	r5,52(sp)
 4104000:	000d883a 	mov	r6,zero
 4104004:	01cff834 	movhi	r7,16352
 4104008:	410aee80 	call	410aee8 <__adddf3>
 410400c:	800d883a 	mov	r6,r16
 4104010:	900f883a 	mov	r7,r18
 4104014:	1009883a 	mov	r4,r2
 4104018:	180b883a 	mov	r5,r3
 410401c:	410c2700 	call	410c270 <__ledf2>
 4104020:	10005416 	blt	r2,zero,4104174 <_dtoa_r+0x1608>
 4104024:	d9800c17 	ldw	r6,48(sp)
 4104028:	d9c00d17 	ldw	r7,52(sp)
 410402c:	0009883a 	mov	r4,zero
 4104030:	014ff834 	movhi	r5,16352
 4104034:	410cb040 	call	410cb04 <__subdf3>
 4104038:	800d883a 	mov	r6,r16
 410403c:	900f883a 	mov	r7,r18
 4104040:	1009883a 	mov	r4,r2
 4104044:	180b883a 	mov	r5,r3
 4104048:	410c1880 	call	410c188 <__gedf2>
 410404c:	00bc9a0e 	bge	zero,r2,41032b8 <_dtoa_r+0x74c>
 4104050:	a0bfffc7 	ldb	r2,-1(r20)
 4104054:	a02b883a 	mov	r21,r20
 4104058:	a53fffc4 	addi	r20,r20,-1
 410405c:	10800c20 	cmpeqi	r2,r2,48
 4104060:	103ffb1e 	bne	r2,zero,4104050 <_dtoa_r+0x14e4>
 4104064:	d8801117 	ldw	r2,68(sp)
 4104068:	10800044 	addi	r2,r2,1
 410406c:	d8800415 	stw	r2,16(sp)
 4104070:	003da106 	br	41036f8 <_dtoa_r+0xb8c>
 4104074:	d8c01217 	ldw	r3,72(sp)
 4104078:	d9000617 	ldw	r4,24(sp)
 410407c:	00800d84 	movi	r2,54
 4104080:	10c5c83a 	sub	r2,r2,r3
 4104084:	b0ad883a 	add	r22,r22,r2
 4104088:	2085883a 	add	r2,r4,r2
 410408c:	dd000817 	ldw	r20,32(sp)
 4104090:	2025883a 	mov	r18,r4
 4104094:	d8800615 	stw	r2,24(sp)
 4104098:	003d0e06 	br	41034d4 <_dtoa_r+0x968>
 410409c:	d9000117 	ldw	r4,4(sp)
 41040a0:	003c4b06 	br	41031d0 <_dtoa_r+0x664>
 41040a4:	9821883a 	mov	r16,r19
 41040a8:	8825883a 	mov	r18,r17
 41040ac:	05400084 	movi	r21,2
 41040b0:	003bb406 	br	4102f84 <_dtoa_r+0x418>
 41040b4:	d8800517 	ldw	r2,20(sp)
 41040b8:	103ede26 	beq	r2,zero,4103c34 <_dtoa_r+0x10c8>
 41040bc:	d8800b17 	ldw	r2,44(sp)
 41040c0:	00bc7d0e 	bge	zero,r2,41032b8 <_dtoa_r+0x74c>
 41040c4:	900b883a 	mov	r5,r18
 41040c8:	8009883a 	mov	r4,r16
 41040cc:	000d883a 	mov	r6,zero
 41040d0:	01d00934 	movhi	r7,16420
 41040d4:	410c3580 	call	410c358 <__muldf3>
 41040d8:	a9000044 	addi	r4,r21,1
 41040dc:	1021883a 	mov	r16,r2
 41040e0:	1825883a 	mov	r18,r3
 41040e4:	410d48c0 	call	410d48c <__floatsidf>
 41040e8:	800d883a 	mov	r6,r16
 41040ec:	900f883a 	mov	r7,r18
 41040f0:	1009883a 	mov	r4,r2
 41040f4:	180b883a 	mov	r5,r3
 41040f8:	410c3580 	call	410c358 <__muldf3>
 41040fc:	1009883a 	mov	r4,r2
 4104100:	000d883a 	mov	r6,zero
 4104104:	01d00734 	movhi	r7,16412
 4104108:	180b883a 	mov	r5,r3
 410410c:	410aee80 	call	410aee8 <__adddf3>
 4104110:	d9000417 	ldw	r4,16(sp)
 4104114:	1029883a 	mov	r20,r2
 4104118:	00bf3034 	movhi	r2,64704
 410411c:	1887883a 	add	r3,r3,r2
 4104120:	d8800b17 	ldw	r2,44(sp)
 4104124:	213fffc4 	addi	r4,r4,-1
 4104128:	d9001115 	stw	r4,68(sp)
 410412c:	d8c00c15 	stw	r3,48(sp)
 4104130:	d8800d15 	stw	r2,52(sp)
 4104134:	003bb106 	br	4102ffc <_dtoa_r+0x490>
 4104138:	d8800417 	ldw	r2,16(sp)
 410413c:	00c00c44 	movi	r3,49
 4104140:	10800044 	addi	r2,r2,1
 4104144:	d8800415 	stw	r2,16(sp)
 4104148:	003c2a06 	br	41031f4 <_dtoa_r+0x688>
 410414c:	00800e44 	movi	r2,57
 4104150:	8023883a 	mov	r17,r16
 4104154:	d9400117 	ldw	r5,4(sp)
 4104158:	b0800005 	stb	r2,0(r22)
 410415c:	9021883a 	mov	r16,r18
 4104160:	01000e44 	movi	r4,57
 4104164:	003d5006 	br	41036a8 <_dtoa_r+0xb3c>
 4104168:	0029883a 	mov	r20,zero
 410416c:	0021883a 	mov	r16,zero
 4104170:	003e7106 	br	4103b38 <_dtoa_r+0xfcc>
 4104174:	d8801117 	ldw	r2,68(sp)
 4104178:	d9000117 	ldw	r4,4(sp)
 410417c:	10800044 	addi	r2,r2,1
 4104180:	d8800415 	stw	r2,16(sp)
 4104184:	003c1206 	br	41031d0 <_dtoa_r+0x664>
 4104188:	103f241e 	bne	r2,zero,4103e1c <_dtoa_r+0x12b0>
 410418c:	9880004c 	andi	r2,r19,1
 4104190:	103f1e1e 	bne	r2,zero,4103e0c <_dtoa_r+0x12a0>
 4104194:	003f2106 	br	4103e1c <_dtoa_r+0x12b0>
 4104198:	d8801117 	ldw	r2,68(sp)
 410419c:	ddc00d17 	ldw	r23,52(sp)
 41041a0:	10800044 	addi	r2,r2,1
 41041a4:	d8800415 	stw	r2,16(sp)
 41041a8:	003d5306 	br	41036f8 <_dtoa_r+0xb8c>
 41041ac:	d8c00417 	ldw	r3,16(sp)
 41041b0:	a8800e60 	cmpeqi	r2,r21,57
 41041b4:	a827883a 	mov	r19,r21
 41041b8:	18c00044 	addi	r3,r3,1
 41041bc:	d8c00415 	stw	r3,16(sp)
 41041c0:	b5400044 	addi	r21,r22,1
 41041c4:	103fe11e 	bne	r2,zero,410414c <_dtoa_r+0x15e0>
 41041c8:	047f1216 	blt	zero,r17,4103e14 <_dtoa_r+0x12a8>
 41041cc:	003f1306 	br	4103e1c <_dtoa_r+0x12b0>
 41041d0:	d8800217 	ldw	r2,8(sp)
 41041d4:	108000c8 	cmpgei	r2,r2,3
 41041d8:	103e481e 	bne	r2,zero,4103afc <_dtoa_r+0xf90>
 41041dc:	dd400415 	stw	r21,16(sp)
 41041e0:	003e0d06 	br	4103a18 <_dtoa_r+0xeac>
 41041e4:	d8800217 	ldw	r2,8(sp)
 41041e8:	108000c8 	cmpgei	r2,r2,3
 41041ec:	103e431e 	bne	r2,zero,4103afc <_dtoa_r+0xf90>
 41041f0:	d8800b17 	ldw	r2,44(sp)
 41041f4:	dd400415 	stw	r21,16(sp)
 41041f8:	d8800515 	stw	r2,20(sp)
 41041fc:	04bdb10e 	bge	zero,r18,41038c4 <_dtoa_r+0xd58>
 4104200:	003e5c06 	br	4103b74 <_dtoa_r+0x1008>
 4104204:	a829883a 	mov	r20,r21
 4104208:	003f7b06 	br	4103ff8 <_dtoa_r+0x148c>
 410420c:	05400084 	movi	r21,2
 4104210:	003b5c06 	br	4102f84 <_dtoa_r+0x418>
 4104214:	01c10474 	movhi	r7,1041
 4104218:	01010474 	movhi	r4,1041
 410421c:	39c33804 	addi	r7,r7,3296
 4104220:	000d883a 	mov	r6,zero
 4104224:	01406a84 	movi	r5,426
 4104228:	21033d04 	addi	r4,r4,3316
 410422c:	41085d40 	call	41085d4 <__assert_func>
 4104230:	000b883a 	mov	r5,zero
 4104234:	003b1506 	br	4102e8c <_dtoa_r+0x320>
 4104238:	b8001115 	stw	zero,68(r23)
 410423c:	000b883a 	mov	r5,zero
 4104240:	b809883a 	mov	r4,r23
 4104244:	4105bcc0 	call	4105bcc <_Balloc>
 4104248:	d8800115 	stw	r2,4(sp)
 410424c:	103ff126 	beq	r2,zero,4104214 <_dtoa_r+0x16a8>
 4104250:	d8800117 	ldw	r2,4(sp)
 4104254:	d8001e15 	stw	zero,120(sp)
 4104258:	b8801015 	stw	r2,64(r23)
 410425c:	00bfffc4 	movi	r2,-1
 4104260:	d8800515 	stw	r2,20(sp)
 4104264:	d8800b15 	stw	r2,44(sp)
 4104268:	00800044 	movi	r2,1
 410426c:	d8800715 	stw	r2,28(sp)
 4104270:	003c1106 	br	41032b8 <_dtoa_r+0x74c>
 4104274:	01c10474 	movhi	r7,1041
 4104278:	01010474 	movhi	r4,1041
 410427c:	39c33804 	addi	r7,r7,3296
 4104280:	000d883a 	mov	r6,zero
 4104284:	0140ba84 	movi	r5,746
 4104288:	21033d04 	addi	r4,r4,3316
 410428c:	41085d40 	call	41085d4 <__assert_func>
 4104290:	00810474 	movhi	r2,1041
 4104294:	10833504 	addi	r2,r2,3284
 4104298:	d8800115 	stw	r2,4(sp)
 410429c:	003a6506 	br	4102c34 <_dtoa_r+0xc8>
 41042a0:	18c00120 	cmpeqi	r3,r3,4
 41042a4:	183cc91e 	bne	r3,zero,41035cc <_dtoa_r+0xa60>
 41042a8:	00c00f04 	movi	r3,60
 41042ac:	1885c83a 	sub	r2,r3,r2
 41042b0:	003cc106 	br	41035b8 <_dtoa_r+0xa4c>

041042b4 <__sflush_r>:
 41042b4:	2880030b 	ldhu	r2,12(r5)
 41042b8:	defffb04 	addi	sp,sp,-20
 41042bc:	dcc00315 	stw	r19,12(sp)
 41042c0:	dc000015 	stw	r16,0(sp)
 41042c4:	dfc00415 	stw	ra,16(sp)
 41042c8:	dc800215 	stw	r18,8(sp)
 41042cc:	dc400115 	stw	r17,4(sp)
 41042d0:	10c0020c 	andi	r3,r2,8
 41042d4:	2821883a 	mov	r16,r5
 41042d8:	2027883a 	mov	r19,r4
 41042dc:	18003f1e 	bne	r3,zero,41043dc <__sflush_r+0x128>
 41042e0:	28c00117 	ldw	r3,4(r5)
 41042e4:	10820014 	ori	r2,r2,2048
 41042e8:	2880030d 	sth	r2,12(r5)
 41042ec:	00c0550e 	bge	zero,r3,4104444 <__sflush_r+0x190>
 41042f0:	82000a17 	ldw	r8,40(r16)
 41042f4:	40003126 	beq	r8,zero,41043bc <__sflush_r+0x108>
 41042f8:	9c400017 	ldw	r17,0(r19)
 41042fc:	1104000c 	andi	r4,r2,4096
 4104300:	98000015 	stw	zero,0(r19)
 4104304:	81400717 	ldw	r5,28(r16)
 4104308:	1007883a 	mov	r3,r2
 410430c:	2000521e 	bne	r4,zero,4104458 <__sflush_r+0x1a4>
 4104310:	01c00044 	movi	r7,1
 4104314:	000d883a 	mov	r6,zero
 4104318:	9809883a 	mov	r4,r19
 410431c:	403ee83a 	callr	r8
 4104320:	10ffffd8 	cmpnei	r3,r2,-1
 4104324:	18005826 	beq	r3,zero,4104488 <__sflush_r+0x1d4>
 4104328:	80c0030b 	ldhu	r3,12(r16)
 410432c:	82000a17 	ldw	r8,40(r16)
 4104330:	81400717 	ldw	r5,28(r16)
 4104334:	18c0010c 	andi	r3,r3,4
 4104338:	18000626 	beq	r3,zero,4104354 <__sflush_r+0xa0>
 410433c:	81000117 	ldw	r4,4(r16)
 4104340:	80c00c17 	ldw	r3,48(r16)
 4104344:	1105c83a 	sub	r2,r2,r4
 4104348:	18000226 	beq	r3,zero,4104354 <__sflush_r+0xa0>
 410434c:	80c00f17 	ldw	r3,60(r16)
 4104350:	10c5c83a 	sub	r2,r2,r3
 4104354:	100d883a 	mov	r6,r2
 4104358:	000f883a 	mov	r7,zero
 410435c:	9809883a 	mov	r4,r19
 4104360:	403ee83a 	callr	r8
 4104364:	10ffffd8 	cmpnei	r3,r2,-1
 4104368:	18003d1e 	bne	r3,zero,4104460 <__sflush_r+0x1ac>
 410436c:	99000017 	ldw	r4,0(r19)
 4104370:	80c0030b 	ldhu	r3,12(r16)
 4104374:	20004e26 	beq	r4,zero,41044b0 <__sflush_r+0x1fc>
 4104378:	21400760 	cmpeqi	r5,r4,29
 410437c:	2800021e 	bne	r5,zero,4104388 <__sflush_r+0xd4>
 4104380:	210005a0 	cmpeqi	r4,r4,22
 4104384:	20002c26 	beq	r4,zero,4104438 <__sflush_r+0x184>
 4104388:	80800417 	ldw	r2,16(r16)
 410438c:	18fdffcc 	andi	r3,r3,63487
 4104390:	80c0030d 	sth	r3,12(r16)
 4104394:	80000115 	stw	zero,4(r16)
 4104398:	80800015 	stw	r2,0(r16)
 410439c:	81400c17 	ldw	r5,48(r16)
 41043a0:	9c400015 	stw	r17,0(r19)
 41043a4:	28000526 	beq	r5,zero,41043bc <__sflush_r+0x108>
 41043a8:	80801004 	addi	r2,r16,64
 41043ac:	28800226 	beq	r5,r2,41043b8 <__sflush_r+0x104>
 41043b0:	9809883a 	mov	r4,r19
 41043b4:	4104a880 	call	4104a88 <_free_r>
 41043b8:	80000c15 	stw	zero,48(r16)
 41043bc:	0005883a 	mov	r2,zero
 41043c0:	dfc00417 	ldw	ra,16(sp)
 41043c4:	dcc00317 	ldw	r19,12(sp)
 41043c8:	dc800217 	ldw	r18,8(sp)
 41043cc:	dc400117 	ldw	r17,4(sp)
 41043d0:	dc000017 	ldw	r16,0(sp)
 41043d4:	dec00504 	addi	sp,sp,20
 41043d8:	f800283a 	ret
 41043dc:	2c800417 	ldw	r18,16(r5)
 41043e0:	903ff626 	beq	r18,zero,41043bc <__sflush_r+0x108>
 41043e4:	2c400017 	ldw	r17,0(r5)
 41043e8:	108000cc 	andi	r2,r2,3
 41043ec:	2c800015 	stw	r18,0(r5)
 41043f0:	8ca3c83a 	sub	r17,r17,r18
 41043f4:	1000161e 	bne	r2,zero,4104450 <__sflush_r+0x19c>
 41043f8:	28800517 	ldw	r2,20(r5)
 41043fc:	80800215 	stw	r2,8(r16)
 4104400:	04400316 	blt	zero,r17,4104410 <__sflush_r+0x15c>
 4104404:	003fed06 	br	41043bc <__sflush_r+0x108>
 4104408:	90a5883a 	add	r18,r18,r2
 410440c:	047feb0e 	bge	zero,r17,41043bc <__sflush_r+0x108>
 4104410:	80800917 	ldw	r2,36(r16)
 4104414:	81400717 	ldw	r5,28(r16)
 4104418:	880f883a 	mov	r7,r17
 410441c:	900d883a 	mov	r6,r18
 4104420:	9809883a 	mov	r4,r19
 4104424:	103ee83a 	callr	r2
 4104428:	88a3c83a 	sub	r17,r17,r2
 410442c:	00bff616 	blt	zero,r2,4104408 <__sflush_r+0x154>
 4104430:	80c0030b 	ldhu	r3,12(r16)
 4104434:	00bfffc4 	movi	r2,-1
 4104438:	18c01014 	ori	r3,r3,64
 410443c:	80c0030d 	sth	r3,12(r16)
 4104440:	003fdf06 	br	41043c0 <__sflush_r+0x10c>
 4104444:	28c00f17 	ldw	r3,60(r5)
 4104448:	00ffa916 	blt	zero,r3,41042f0 <__sflush_r+0x3c>
 410444c:	003fdb06 	br	41043bc <__sflush_r+0x108>
 4104450:	0005883a 	mov	r2,zero
 4104454:	003fe906 	br	41043fc <__sflush_r+0x148>
 4104458:	80801417 	ldw	r2,80(r16)
 410445c:	003fb506 	br	4104334 <__sflush_r+0x80>
 4104460:	80c0030b 	ldhu	r3,12(r16)
 4104464:	81000417 	ldw	r4,16(r16)
 4104468:	80000115 	stw	zero,4(r16)
 410446c:	197dffcc 	andi	r5,r3,63487
 4104470:	8140030d 	sth	r5,12(r16)
 4104474:	81000015 	stw	r4,0(r16)
 4104478:	18c4000c 	andi	r3,r3,4096
 410447c:	183fc726 	beq	r3,zero,410439c <__sflush_r+0xe8>
 4104480:	80801415 	stw	r2,80(r16)
 4104484:	003fc506 	br	410439c <__sflush_r+0xe8>
 4104488:	98c00017 	ldw	r3,0(r19)
 410448c:	183fa626 	beq	r3,zero,4104328 <__sflush_r+0x74>
 4104490:	19000760 	cmpeqi	r4,r3,29
 4104494:	20000e1e 	bne	r4,zero,41044d0 <__sflush_r+0x21c>
 4104498:	18c00598 	cmpnei	r3,r3,22
 410449c:	18000c26 	beq	r3,zero,41044d0 <__sflush_r+0x21c>
 41044a0:	80c0030b 	ldhu	r3,12(r16)
 41044a4:	18c01014 	ori	r3,r3,64
 41044a8:	80c0030d 	sth	r3,12(r16)
 41044ac:	003fc406 	br	41043c0 <__sflush_r+0x10c>
 41044b0:	81000417 	ldw	r4,16(r16)
 41044b4:	197dffcc 	andi	r5,r3,63487
 41044b8:	8140030d 	sth	r5,12(r16)
 41044bc:	80000115 	stw	zero,4(r16)
 41044c0:	81000015 	stw	r4,0(r16)
 41044c4:	18c4000c 	andi	r3,r3,4096
 41044c8:	183fb426 	beq	r3,zero,410439c <__sflush_r+0xe8>
 41044cc:	003fec06 	br	4104480 <__sflush_r+0x1cc>
 41044d0:	9c400015 	stw	r17,0(r19)
 41044d4:	0005883a 	mov	r2,zero
 41044d8:	003fb906 	br	41043c0 <__sflush_r+0x10c>

041044dc <_fflush_r>:
 41044dc:	defffd04 	addi	sp,sp,-12
 41044e0:	dc000115 	stw	r16,4(sp)
 41044e4:	dfc00215 	stw	ra,8(sp)
 41044e8:	2021883a 	mov	r16,r4
 41044ec:	20000226 	beq	r4,zero,41044f8 <_fflush_r+0x1c>
 41044f0:	20800e17 	ldw	r2,56(r4)
 41044f4:	10000726 	beq	r2,zero,4104514 <_fflush_r+0x38>
 41044f8:	2880030f 	ldh	r2,12(r5)
 41044fc:	10000a1e 	bne	r2,zero,4104528 <_fflush_r+0x4c>
 4104500:	0005883a 	mov	r2,zero
 4104504:	dfc00217 	ldw	ra,8(sp)
 4104508:	dc000117 	ldw	r16,4(sp)
 410450c:	dec00304 	addi	sp,sp,12
 4104510:	f800283a 	ret
 4104514:	d9400015 	stw	r5,0(sp)
 4104518:	41049240 	call	4104924 <__sinit>
 410451c:	d9400017 	ldw	r5,0(sp)
 4104520:	2880030f 	ldh	r2,12(r5)
 4104524:	103ff626 	beq	r2,zero,4104500 <_fflush_r+0x24>
 4104528:	8009883a 	mov	r4,r16
 410452c:	dfc00217 	ldw	ra,8(sp)
 4104530:	dc000117 	ldw	r16,4(sp)
 4104534:	dec00304 	addi	sp,sp,12
 4104538:	41042b41 	jmpi	41042b4 <__sflush_r>

0410453c <fflush>:
 410453c:	20001726 	beq	r4,zero,410459c <fflush+0x60>
 4104540:	00810474 	movhi	r2,1041
 4104544:	200b883a 	mov	r5,r4
 4104548:	110bdd17 	ldw	r4,12148(r2)
 410454c:	20000226 	beq	r4,zero,4104558 <fflush+0x1c>
 4104550:	20800e17 	ldw	r2,56(r4)
 4104554:	10000526 	beq	r2,zero,410456c <fflush+0x30>
 4104558:	2880030f 	ldh	r2,12(r5)
 410455c:	1000021e 	bne	r2,zero,4104568 <fflush+0x2c>
 4104560:	0005883a 	mov	r2,zero
 4104564:	f800283a 	ret
 4104568:	41042b41 	jmpi	41042b4 <__sflush_r>
 410456c:	defffd04 	addi	sp,sp,-12
 4104570:	d9400115 	stw	r5,4(sp)
 4104574:	d9000015 	stw	r4,0(sp)
 4104578:	dfc00215 	stw	ra,8(sp)
 410457c:	41049240 	call	4104924 <__sinit>
 4104580:	d9400117 	ldw	r5,4(sp)
 4104584:	d9000017 	ldw	r4,0(sp)
 4104588:	2880030f 	ldh	r2,12(r5)
 410458c:	10000826 	beq	r2,zero,41045b0 <fflush+0x74>
 4104590:	dfc00217 	ldw	ra,8(sp)
 4104594:	dec00304 	addi	sp,sp,12
 4104598:	41042b41 	jmpi	41042b4 <__sflush_r>
 410459c:	00810474 	movhi	r2,1041
 41045a0:	110bdc17 	ldw	r4,12144(r2)
 41045a4:	01410434 	movhi	r5,1040
 41045a8:	29513704 	addi	r5,r5,17628
 41045ac:	4104e1c1 	jmpi	4104e1c <_fwalk_reent>
 41045b0:	0005883a 	mov	r2,zero
 41045b4:	dfc00217 	ldw	ra,8(sp)
 41045b8:	dec00304 	addi	sp,sp,12
 41045bc:	f800283a 	ret

041045c0 <__fp_lock>:
 41045c0:	0005883a 	mov	r2,zero
 41045c4:	f800283a 	ret

041045c8 <_cleanup_r>:
 41045c8:	01410474 	movhi	r5,1041
 41045cc:	2961f404 	addi	r5,r5,-30768
 41045d0:	4104e1c1 	jmpi	4104e1c <_fwalk_reent>

041045d4 <__fp_unlock>:
 41045d4:	0005883a 	mov	r2,zero
 41045d8:	f800283a 	ret

041045dc <__sinit.part.0>:
 41045dc:	00c10434 	movhi	r3,1040
 41045e0:	20800117 	ldw	r2,4(r4)
 41045e4:	18d17204 	addi	r3,r3,17864
 41045e8:	20c00f15 	stw	r3,60(r4)
 41045ec:	2140bb04 	addi	r5,r4,748
 41045f0:	00c000c4 	movi	r3,3
 41045f4:	20c0b915 	stw	r3,740(r4)
 41045f8:	2140ba15 	stw	r5,744(r4)
 41045fc:	2000b815 	stw	zero,736(r4)
 4104600:	10001705 	stb	zero,92(r2)
 4104604:	10001745 	stb	zero,93(r2)
 4104608:	10001785 	stb	zero,94(r2)
 410460c:	100017c5 	stb	zero,95(r2)
 4104610:	10001805 	stb	zero,96(r2)
 4104614:	10001845 	stb	zero,97(r2)
 4104618:	10001885 	stb	zero,98(r2)
 410461c:	100018c5 	stb	zero,99(r2)
 4104620:	00c00104 	movi	r3,4
 4104624:	10c00315 	stw	r3,12(r2)
 4104628:	02010434 	movhi	r8,1040
 410462c:	20c00217 	ldw	r3,8(r4)
 4104630:	01c10434 	movhi	r7,1040
 4104634:	01810434 	movhi	r6,1040
 4104638:	01410434 	movhi	r5,1040
 410463c:	421b8504 	addi	r8,r8,28180
 4104640:	39db9c04 	addi	r7,r7,28272
 4104644:	319bbc04 	addi	r6,r6,28400
 4104648:	295bd304 	addi	r5,r5,28492
 410464c:	02400074 	movhi	r9,1
 4104650:	10001915 	stw	zero,100(r2)
 4104654:	10000015 	stw	zero,0(r2)
 4104658:	10000115 	stw	zero,4(r2)
 410465c:	10000215 	stw	zero,8(r2)
 4104660:	10000415 	stw	zero,16(r2)
 4104664:	10000515 	stw	zero,20(r2)
 4104668:	10000615 	stw	zero,24(r2)
 410466c:	10800715 	stw	r2,28(r2)
 4104670:	12000815 	stw	r8,32(r2)
 4104674:	11c00915 	stw	r7,36(r2)
 4104678:	11800a15 	stw	r6,40(r2)
 410467c:	11400b15 	stw	r5,44(r2)
 4104680:	4a400284 	addi	r9,r9,10
 4104684:	1a400315 	stw	r9,12(r3)
 4104688:	18001915 	stw	zero,100(r3)
 410468c:	18000015 	stw	zero,0(r3)
 4104690:	18000115 	stw	zero,4(r3)
 4104694:	18000215 	stw	zero,8(r3)
 4104698:	18000415 	stw	zero,16(r3)
 410469c:	18001705 	stb	zero,92(r3)
 41046a0:	18001745 	stb	zero,93(r3)
 41046a4:	18001785 	stb	zero,94(r3)
 41046a8:	180017c5 	stb	zero,95(r3)
 41046ac:	18001805 	stb	zero,96(r3)
 41046b0:	18001845 	stb	zero,97(r3)
 41046b4:	18001885 	stb	zero,98(r3)
 41046b8:	180018c5 	stb	zero,99(r3)
 41046bc:	20800317 	ldw	r2,12(r4)
 41046c0:	024000b4 	movhi	r9,2
 41046c4:	18000515 	stw	zero,20(r3)
 41046c8:	18000615 	stw	zero,24(r3)
 41046cc:	18c00715 	stw	r3,28(r3)
 41046d0:	1a000815 	stw	r8,32(r3)
 41046d4:	19c00915 	stw	r7,36(r3)
 41046d8:	19800a15 	stw	r6,40(r3)
 41046dc:	19400b15 	stw	r5,44(r3)
 41046e0:	4a400484 	addi	r9,r9,18
 41046e4:	10001915 	stw	zero,100(r2)
 41046e8:	10000015 	stw	zero,0(r2)
 41046ec:	10000115 	stw	zero,4(r2)
 41046f0:	10000215 	stw	zero,8(r2)
 41046f4:	12400315 	stw	r9,12(r2)
 41046f8:	10000415 	stw	zero,16(r2)
 41046fc:	10000515 	stw	zero,20(r2)
 4104700:	10000615 	stw	zero,24(r2)
 4104704:	10001705 	stb	zero,92(r2)
 4104708:	10001745 	stb	zero,93(r2)
 410470c:	10001785 	stb	zero,94(r2)
 4104710:	100017c5 	stb	zero,95(r2)
 4104714:	10001805 	stb	zero,96(r2)
 4104718:	10001845 	stb	zero,97(r2)
 410471c:	10001885 	stb	zero,98(r2)
 4104720:	100018c5 	stb	zero,99(r2)
 4104724:	10800715 	stw	r2,28(r2)
 4104728:	12000815 	stw	r8,32(r2)
 410472c:	11c00915 	stw	r7,36(r2)
 4104730:	11800a15 	stw	r6,40(r2)
 4104734:	11400b15 	stw	r5,44(r2)
 4104738:	00800044 	movi	r2,1
 410473c:	20800e15 	stw	r2,56(r4)
 4104740:	f800283a 	ret

04104744 <__sfmoreglue>:
 4104744:	defffc04 	addi	sp,sp,-16
 4104748:	dc800215 	stw	r18,8(sp)
 410474c:	2825883a 	mov	r18,r5
 4104750:	dc000015 	stw	r16,0(sp)
 4104754:	01401a04 	movi	r5,104
 4104758:	2021883a 	mov	r16,r4
 410475c:	913fffc4 	addi	r4,r18,-1
 4104760:	dfc00315 	stw	ra,12(sp)
 4104764:	dc400115 	stw	r17,4(sp)
 4104768:	410aec00 	call	410aec0 <__mulsi3>
 410476c:	8009883a 	mov	r4,r16
 4104770:	11401d04 	addi	r5,r2,116
 4104774:	1023883a 	mov	r17,r2
 4104778:	410512c0 	call	410512c <_malloc_r>
 410477c:	1021883a 	mov	r16,r2
 4104780:	10000726 	beq	r2,zero,41047a0 <__sfmoreglue+0x5c>
 4104784:	11000304 	addi	r4,r2,12
 4104788:	10000015 	stw	zero,0(r2)
 410478c:	14800115 	stw	r18,4(r2)
 4104790:	11000215 	stw	r4,8(r2)
 4104794:	89801a04 	addi	r6,r17,104
 4104798:	000b883a 	mov	r5,zero
 410479c:	4105adc0 	call	4105adc <memset>
 41047a0:	8005883a 	mov	r2,r16
 41047a4:	dfc00317 	ldw	ra,12(sp)
 41047a8:	dc800217 	ldw	r18,8(sp)
 41047ac:	dc400117 	ldw	r17,4(sp)
 41047b0:	dc000017 	ldw	r16,0(sp)
 41047b4:	dec00404 	addi	sp,sp,16
 41047b8:	f800283a 	ret

041047bc <__sfp>:
 41047bc:	defffb04 	addi	sp,sp,-20
 41047c0:	00810474 	movhi	r2,1041
 41047c4:	dc000015 	stw	r16,0(sp)
 41047c8:	140bdc17 	ldw	r16,12144(r2)
 41047cc:	dc400115 	stw	r17,4(sp)
 41047d0:	dfc00415 	stw	ra,16(sp)
 41047d4:	80800e17 	ldw	r2,56(r16)
 41047d8:	dcc00315 	stw	r19,12(sp)
 41047dc:	dc800215 	stw	r18,8(sp)
 41047e0:	2023883a 	mov	r17,r4
 41047e4:	10003126 	beq	r2,zero,41048ac <__sfp+0xf0>
 41047e8:	8100ba17 	ldw	r4,744(r16)
 41047ec:	8140b917 	ldw	r5,740(r16)
 41047f0:	04c00104 	movi	r19,4
 41047f4:	8400b804 	addi	r16,r16,736
 41047f8:	297fffc4 	addi	r5,r5,-1
 41047fc:	2800050e 	bge	r5,zero,4104814 <__sfp+0x58>
 4104800:	00002406 	br	4104894 <__sfp+0xd8>
 4104804:	297fffc4 	addi	r5,r5,-1
 4104808:	28bfffd8 	cmpnei	r2,r5,-1
 410480c:	21001a04 	addi	r4,r4,104
 4104810:	10002026 	beq	r2,zero,4104894 <__sfp+0xd8>
 4104814:	2080030f 	ldh	r2,12(r4)
 4104818:	103ffa1e 	bne	r2,zero,4104804 <__sfp+0x48>
 410481c:	00bffff4 	movhi	r2,65535
 4104820:	10800044 	addi	r2,r2,1
 4104824:	20001915 	stw	zero,100(r4)
 4104828:	20000015 	stw	zero,0(r4)
 410482c:	20000115 	stw	zero,4(r4)
 4104830:	20000215 	stw	zero,8(r4)
 4104834:	20800315 	stw	r2,12(r4)
 4104838:	20000415 	stw	zero,16(r4)
 410483c:	20000515 	stw	zero,20(r4)
 4104840:	20000615 	stw	zero,24(r4)
 4104844:	20001705 	stb	zero,92(r4)
 4104848:	20001745 	stb	zero,93(r4)
 410484c:	20001785 	stb	zero,94(r4)
 4104850:	200017c5 	stb	zero,95(r4)
 4104854:	20001805 	stb	zero,96(r4)
 4104858:	20001845 	stb	zero,97(r4)
 410485c:	20001885 	stb	zero,98(r4)
 4104860:	200018c5 	stb	zero,99(r4)
 4104864:	20000c15 	stw	zero,48(r4)
 4104868:	20000d15 	stw	zero,52(r4)
 410486c:	20001115 	stw	zero,68(r4)
 4104870:	20001215 	stw	zero,72(r4)
 4104874:	2005883a 	mov	r2,r4
 4104878:	dfc00417 	ldw	ra,16(sp)
 410487c:	dcc00317 	ldw	r19,12(sp)
 4104880:	dc800217 	ldw	r18,8(sp)
 4104884:	dc400117 	ldw	r17,4(sp)
 4104888:	dc000017 	ldw	r16,0(sp)
 410488c:	dec00504 	addi	sp,sp,20
 4104890:	f800283a 	ret
 4104894:	80800017 	ldw	r2,0(r16)
 4104898:	10000726 	beq	r2,zero,41048b8 <__sfp+0xfc>
 410489c:	11000217 	ldw	r4,8(r2)
 41048a0:	11400117 	ldw	r5,4(r2)
 41048a4:	1021883a 	mov	r16,r2
 41048a8:	003fd306 	br	41047f8 <__sfp+0x3c>
 41048ac:	8009883a 	mov	r4,r16
 41048b0:	41045dc0 	call	41045dc <__sinit.part.0>
 41048b4:	003fcc06 	br	41047e8 <__sfp+0x2c>
 41048b8:	01406b04 	movi	r5,428
 41048bc:	8809883a 	mov	r4,r17
 41048c0:	410512c0 	call	410512c <_malloc_r>
 41048c4:	1025883a 	mov	r18,r2
 41048c8:	10000c26 	beq	r2,zero,41048fc <__sfp+0x140>
 41048cc:	11000304 	addi	r4,r2,12
 41048d0:	11000215 	stw	r4,8(r2)
 41048d4:	000b883a 	mov	r5,zero
 41048d8:	10000015 	stw	zero,0(r2)
 41048dc:	14c00115 	stw	r19,4(r2)
 41048e0:	01806804 	movi	r6,416
 41048e4:	4105adc0 	call	4105adc <memset>
 41048e8:	1009883a 	mov	r4,r2
 41048ec:	84800015 	stw	r18,0(r16)
 41048f0:	014000c4 	movi	r5,3
 41048f4:	9021883a 	mov	r16,r18
 41048f8:	003fc606 	br	4104814 <__sfp+0x58>
 41048fc:	80000015 	stw	zero,0(r16)
 4104900:	00800304 	movi	r2,12
 4104904:	88800015 	stw	r2,0(r17)
 4104908:	0009883a 	mov	r4,zero
 410490c:	003fd906 	br	4104874 <__sfp+0xb8>

04104910 <_cleanup>:
 4104910:	00810474 	movhi	r2,1041
 4104914:	110bdc17 	ldw	r4,12144(r2)
 4104918:	01410474 	movhi	r5,1041
 410491c:	2961f404 	addi	r5,r5,-30768
 4104920:	4104e1c1 	jmpi	4104e1c <_fwalk_reent>

04104924 <__sinit>:
 4104924:	20800e17 	ldw	r2,56(r4)
 4104928:	10000126 	beq	r2,zero,4104930 <__sinit+0xc>
 410492c:	f800283a 	ret
 4104930:	41045dc1 	jmpi	41045dc <__sinit.part.0>

04104934 <__sfp_lock_acquire>:
 4104934:	f800283a 	ret

04104938 <__sfp_lock_release>:
 4104938:	f800283a 	ret

0410493c <__sinit_lock_acquire>:
 410493c:	f800283a 	ret

04104940 <__sinit_lock_release>:
 4104940:	f800283a 	ret

04104944 <__fp_lock_all>:
 4104944:	00810474 	movhi	r2,1041
 4104948:	110bdd17 	ldw	r4,12148(r2)
 410494c:	01410434 	movhi	r5,1040
 4104950:	29517004 	addi	r5,r5,17856
 4104954:	4104d841 	jmpi	4104d84 <_fwalk>

04104958 <__fp_unlock_all>:
 4104958:	00810474 	movhi	r2,1041
 410495c:	110bdd17 	ldw	r4,12148(r2)
 4104960:	01410434 	movhi	r5,1040
 4104964:	29517504 	addi	r5,r5,17876
 4104968:	4104d841 	jmpi	4104d84 <_fwalk>

0410496c <_malloc_trim_r>:
 410496c:	defffb04 	addi	sp,sp,-20
 4104970:	dcc00315 	stw	r19,12(sp)
 4104974:	04c10474 	movhi	r19,1041
 4104978:	dc800215 	stw	r18,8(sp)
 410497c:	dc400115 	stw	r17,4(sp)
 4104980:	dc000015 	stw	r16,0(sp)
 4104984:	dfc00415 	stw	ra,16(sp)
 4104988:	2821883a 	mov	r16,r5
 410498c:	9cc5cd04 	addi	r19,r19,5940
 4104990:	2025883a 	mov	r18,r4
 4104994:	410dd940 	call	410dd94 <__malloc_lock>
 4104998:	98800217 	ldw	r2,8(r19)
 410499c:	14400117 	ldw	r17,4(r2)
 41049a0:	00bfff04 	movi	r2,-4
 41049a4:	88a2703a 	and	r17,r17,r2
 41049a8:	8c21c83a 	sub	r16,r17,r16
 41049ac:	8403fbc4 	addi	r16,r16,4079
 41049b0:	8020d33a 	srli	r16,r16,12
 41049b4:	843fffc4 	addi	r16,r16,-1
 41049b8:	8020933a 	slli	r16,r16,12
 41049bc:	80840008 	cmpgei	r2,r16,4096
 41049c0:	10000626 	beq	r2,zero,41049dc <_malloc_trim_r+0x70>
 41049c4:	000b883a 	mov	r5,zero
 41049c8:	9009883a 	mov	r4,r18
 41049cc:	4106dbc0 	call	4106dbc <_sbrk_r>
 41049d0:	98c00217 	ldw	r3,8(r19)
 41049d4:	1c47883a 	add	r3,r3,r17
 41049d8:	10c00a26 	beq	r2,r3,4104a04 <_malloc_trim_r+0x98>
 41049dc:	9009883a 	mov	r4,r18
 41049e0:	410ddb80 	call	410ddb8 <__malloc_unlock>
 41049e4:	0005883a 	mov	r2,zero
 41049e8:	dfc00417 	ldw	ra,16(sp)
 41049ec:	dcc00317 	ldw	r19,12(sp)
 41049f0:	dc800217 	ldw	r18,8(sp)
 41049f4:	dc400117 	ldw	r17,4(sp)
 41049f8:	dc000017 	ldw	r16,0(sp)
 41049fc:	dec00504 	addi	sp,sp,20
 4104a00:	f800283a 	ret
 4104a04:	040bc83a 	sub	r5,zero,r16
 4104a08:	9009883a 	mov	r4,r18
 4104a0c:	4106dbc0 	call	4106dbc <_sbrk_r>
 4104a10:	10bfffd8 	cmpnei	r2,r2,-1
 4104a14:	10000d26 	beq	r2,zero,4104a4c <_malloc_trim_r+0xe0>
 4104a18:	00810474 	movhi	r2,1041
 4104a1c:	10932817 	ldw	r2,19616(r2)
 4104a20:	98c00217 	ldw	r3,8(r19)
 4104a24:	8c23c83a 	sub	r17,r17,r16
 4104a28:	8c400054 	ori	r17,r17,1
 4104a2c:	1421c83a 	sub	r16,r2,r16
 4104a30:	1c400115 	stw	r17,4(r3)
 4104a34:	00810474 	movhi	r2,1041
 4104a38:	9009883a 	mov	r4,r18
 4104a3c:	14132815 	stw	r16,19616(r2)
 4104a40:	410ddb80 	call	410ddb8 <__malloc_unlock>
 4104a44:	00800044 	movi	r2,1
 4104a48:	003fe706 	br	41049e8 <_malloc_trim_r+0x7c>
 4104a4c:	000b883a 	mov	r5,zero
 4104a50:	9009883a 	mov	r4,r18
 4104a54:	4106dbc0 	call	4106dbc <_sbrk_r>
 4104a58:	99000217 	ldw	r4,8(r19)
 4104a5c:	1107c83a 	sub	r3,r2,r4
 4104a60:	19400410 	cmplti	r5,r3,16
 4104a64:	283fdd1e 	bne	r5,zero,41049dc <_malloc_trim_r+0x70>
 4104a68:	01410474 	movhi	r5,1041
 4104a6c:	294bde17 	ldw	r5,12152(r5)
 4104a70:	18c00054 	ori	r3,r3,1
 4104a74:	20c00115 	stw	r3,4(r4)
 4104a78:	1145c83a 	sub	r2,r2,r5
 4104a7c:	01410474 	movhi	r5,1041
 4104a80:	28932815 	stw	r2,19616(r5)
 4104a84:	003fd506 	br	41049dc <_malloc_trim_r+0x70>

04104a88 <_free_r>:
 4104a88:	28004f26 	beq	r5,zero,4104bc8 <_free_r+0x140>
 4104a8c:	defffd04 	addi	sp,sp,-12
 4104a90:	dc400115 	stw	r17,4(sp)
 4104a94:	dc000015 	stw	r16,0(sp)
 4104a98:	2023883a 	mov	r17,r4
 4104a9c:	2821883a 	mov	r16,r5
 4104aa0:	dfc00215 	stw	ra,8(sp)
 4104aa4:	410dd940 	call	410dd94 <__malloc_lock>
 4104aa8:	81ffff17 	ldw	r7,-4(r16)
 4104aac:	00bfff84 	movi	r2,-2
 4104ab0:	80fffe04 	addi	r3,r16,-8
 4104ab4:	3884703a 	and	r2,r7,r2
 4104ab8:	01010474 	movhi	r4,1041
 4104abc:	188d883a 	add	r6,r3,r2
 4104ac0:	2105cd04 	addi	r4,r4,5940
 4104ac4:	31400117 	ldw	r5,4(r6)
 4104ac8:	22000217 	ldw	r8,8(r4)
 4104acc:	027fff04 	movi	r9,-4
 4104ad0:	2a4a703a 	and	r5,r5,r9
 4104ad4:	41806426 	beq	r8,r6,4104c68 <_free_r+0x1e0>
 4104ad8:	31400115 	stw	r5,4(r6)
 4104adc:	39c0004c 	andi	r7,r7,1
 4104ae0:	3151883a 	add	r8,r6,r5
 4104ae4:	3800281e 	bne	r7,zero,4104b88 <_free_r+0x100>
 4104ae8:	82bffe17 	ldw	r10,-8(r16)
 4104aec:	42000117 	ldw	r8,4(r8)
 4104af0:	01c10474 	movhi	r7,1041
 4104af4:	1a87c83a 	sub	r3,r3,r10
 4104af8:	1a400217 	ldw	r9,8(r3)
 4104afc:	39c5cf04 	addi	r7,r7,5948
 4104b00:	1285883a 	add	r2,r2,r10
 4104b04:	4200004c 	andi	r8,r8,1
 4104b08:	49c04c26 	beq	r9,r7,4104c3c <_free_r+0x1b4>
 4104b0c:	1a800317 	ldw	r10,12(r3)
 4104b10:	4a800315 	stw	r10,12(r9)
 4104b14:	52400215 	stw	r9,8(r10)
 4104b18:	40007126 	beq	r8,zero,4104ce0 <_free_r+0x258>
 4104b1c:	11400054 	ori	r5,r2,1
 4104b20:	19400115 	stw	r5,4(r3)
 4104b24:	30800015 	stw	r2,0(r6)
 4104b28:	11408028 	cmpgeui	r5,r2,512
 4104b2c:	28002c1e 	bne	r5,zero,4104be0 <_free_r+0x158>
 4104b30:	100ad0fa 	srli	r5,r2,3
 4104b34:	100cd17a 	srli	r6,r2,5
 4104b38:	00800044 	movi	r2,1
 4104b3c:	29400044 	addi	r5,r5,1
 4104b40:	280a90fa 	slli	r5,r5,3
 4104b44:	21c00117 	ldw	r7,4(r4)
 4104b48:	1184983a 	sll	r2,r2,r6
 4104b4c:	214b883a 	add	r5,r4,r5
 4104b50:	29800017 	ldw	r6,0(r5)
 4104b54:	11c4b03a 	or	r2,r2,r7
 4104b58:	29fffe04 	addi	r7,r5,-8
 4104b5c:	19c00315 	stw	r7,12(r3)
 4104b60:	19800215 	stw	r6,8(r3)
 4104b64:	20800115 	stw	r2,4(r4)
 4104b68:	28c00015 	stw	r3,0(r5)
 4104b6c:	30c00315 	stw	r3,12(r6)
 4104b70:	8809883a 	mov	r4,r17
 4104b74:	dfc00217 	ldw	ra,8(sp)
 4104b78:	dc400117 	ldw	r17,4(sp)
 4104b7c:	dc000017 	ldw	r16,0(sp)
 4104b80:	dec00304 	addi	sp,sp,12
 4104b84:	410ddb81 	jmpi	410ddb8 <__malloc_unlock>
 4104b88:	41c00117 	ldw	r7,4(r8)
 4104b8c:	39c0004c 	andi	r7,r7,1
 4104b90:	38000e1e 	bne	r7,zero,4104bcc <_free_r+0x144>
 4104b94:	01c10474 	movhi	r7,1041
 4104b98:	1145883a 	add	r2,r2,r5
 4104b9c:	39c5cf04 	addi	r7,r7,5948
 4104ba0:	31400217 	ldw	r5,8(r6)
 4104ba4:	12400054 	ori	r9,r2,1
 4104ba8:	1891883a 	add	r8,r3,r2
 4104bac:	29c05226 	beq	r5,r7,4104cf8 <_free_r+0x270>
 4104bb0:	31800317 	ldw	r6,12(r6)
 4104bb4:	29800315 	stw	r6,12(r5)
 4104bb8:	31400215 	stw	r5,8(r6)
 4104bbc:	1a400115 	stw	r9,4(r3)
 4104bc0:	40800015 	stw	r2,0(r8)
 4104bc4:	003fd806 	br	4104b28 <_free_r+0xa0>
 4104bc8:	f800283a 	ret
 4104bcc:	11400054 	ori	r5,r2,1
 4104bd0:	817fff15 	stw	r5,-4(r16)
 4104bd4:	30800015 	stw	r2,0(r6)
 4104bd8:	11408028 	cmpgeui	r5,r2,512
 4104bdc:	283fd426 	beq	r5,zero,4104b30 <_free_r+0xa8>
 4104be0:	100ad27a 	srli	r5,r2,9
 4104be4:	29800168 	cmpgeui	r6,r5,5
 4104be8:	3000341e 	bne	r6,zero,4104cbc <_free_r+0x234>
 4104bec:	100ad1ba 	srli	r5,r2,6
 4104bf0:	29800e44 	addi	r6,r5,57
 4104bf4:	300c90fa 	slli	r6,r6,3
 4104bf8:	29c00e04 	addi	r7,r5,56
 4104bfc:	218d883a 	add	r6,r4,r6
 4104c00:	31400017 	ldw	r5,0(r6)
 4104c04:	31bffe04 	addi	r6,r6,-8
 4104c08:	31404226 	beq	r6,r5,4104d14 <_free_r+0x28c>
 4104c0c:	01ffff04 	movi	r7,-4
 4104c10:	29000117 	ldw	r4,4(r5)
 4104c14:	21c8703a 	and	r4,r4,r7
 4104c18:	1100022e 	bgeu	r2,r4,4104c24 <_free_r+0x19c>
 4104c1c:	29400217 	ldw	r5,8(r5)
 4104c20:	317ffb1e 	bne	r6,r5,4104c10 <_free_r+0x188>
 4104c24:	29800317 	ldw	r6,12(r5)
 4104c28:	19800315 	stw	r6,12(r3)
 4104c2c:	19400215 	stw	r5,8(r3)
 4104c30:	30c00215 	stw	r3,8(r6)
 4104c34:	28c00315 	stw	r3,12(r5)
 4104c38:	003fcd06 	br	4104b70 <_free_r+0xe8>
 4104c3c:	40004d1e 	bne	r8,zero,4104d74 <_free_r+0x2ec>
 4104c40:	31000317 	ldw	r4,12(r6)
 4104c44:	31800217 	ldw	r6,8(r6)
 4104c48:	2885883a 	add	r2,r5,r2
 4104c4c:	11400054 	ori	r5,r2,1
 4104c50:	31000315 	stw	r4,12(r6)
 4104c54:	21800215 	stw	r6,8(r4)
 4104c58:	19400115 	stw	r5,4(r3)
 4104c5c:	1887883a 	add	r3,r3,r2
 4104c60:	18800015 	stw	r2,0(r3)
 4104c64:	003fc206 	br	4104b70 <_free_r+0xe8>
 4104c68:	39c0004c 	andi	r7,r7,1
 4104c6c:	1145883a 	add	r2,r2,r5
 4104c70:	3800071e 	bne	r7,zero,4104c90 <_free_r+0x208>
 4104c74:	81fffe17 	ldw	r7,-8(r16)
 4104c78:	19c7c83a 	sub	r3,r3,r7
 4104c7c:	19400317 	ldw	r5,12(r3)
 4104c80:	19800217 	ldw	r6,8(r3)
 4104c84:	11c5883a 	add	r2,r2,r7
 4104c88:	31400315 	stw	r5,12(r6)
 4104c8c:	29800215 	stw	r6,8(r5)
 4104c90:	01410474 	movhi	r5,1041
 4104c94:	11800054 	ori	r6,r2,1
 4104c98:	294bdf17 	ldw	r5,12156(r5)
 4104c9c:	19800115 	stw	r6,4(r3)
 4104ca0:	20c00215 	stw	r3,8(r4)
 4104ca4:	117fb236 	bltu	r2,r5,4104b70 <_free_r+0xe8>
 4104ca8:	00810474 	movhi	r2,1041
 4104cac:	11531e17 	ldw	r5,19576(r2)
 4104cb0:	8809883a 	mov	r4,r17
 4104cb4:	410496c0 	call	410496c <_malloc_trim_r>
 4104cb8:	003fad06 	br	4104b70 <_free_r+0xe8>
 4104cbc:	29800568 	cmpgeui	r6,r5,21
 4104cc0:	30000926 	beq	r6,zero,4104ce8 <_free_r+0x260>
 4104cc4:	29801568 	cmpgeui	r6,r5,85
 4104cc8:	3000191e 	bne	r6,zero,4104d30 <_free_r+0x2a8>
 4104ccc:	100ad33a 	srli	r5,r2,12
 4104cd0:	29801bc4 	addi	r6,r5,111
 4104cd4:	300c90fa 	slli	r6,r6,3
 4104cd8:	29c01b84 	addi	r7,r5,110
 4104cdc:	003fc706 	br	4104bfc <_free_r+0x174>
 4104ce0:	1145883a 	add	r2,r2,r5
 4104ce4:	003fae06 	br	4104ba0 <_free_r+0x118>
 4104ce8:	29801704 	addi	r6,r5,92
 4104cec:	300c90fa 	slli	r6,r6,3
 4104cf0:	29c016c4 	addi	r7,r5,91
 4104cf4:	003fc106 	br	4104bfc <_free_r+0x174>
 4104cf8:	20c00515 	stw	r3,20(r4)
 4104cfc:	20c00415 	stw	r3,16(r4)
 4104d00:	19c00315 	stw	r7,12(r3)
 4104d04:	19c00215 	stw	r7,8(r3)
 4104d08:	1a400115 	stw	r9,4(r3)
 4104d0c:	40800015 	stw	r2,0(r8)
 4104d10:	003f9706 	br	4104b70 <_free_r+0xe8>
 4104d14:	380fd0ba 	srai	r7,r7,2
 4104d18:	00800044 	movi	r2,1
 4104d1c:	22000117 	ldw	r8,4(r4)
 4104d20:	11ce983a 	sll	r7,r2,r7
 4104d24:	3a0eb03a 	or	r7,r7,r8
 4104d28:	21c00115 	stw	r7,4(r4)
 4104d2c:	003fbe06 	br	4104c28 <_free_r+0x1a0>
 4104d30:	29805568 	cmpgeui	r6,r5,341
 4104d34:	3000051e 	bne	r6,zero,4104d4c <_free_r+0x2c4>
 4104d38:	100ad3fa 	srli	r5,r2,15
 4104d3c:	29801e04 	addi	r6,r5,120
 4104d40:	300c90fa 	slli	r6,r6,3
 4104d44:	29c01dc4 	addi	r7,r5,119
 4104d48:	003fac06 	br	4104bfc <_free_r+0x174>
 4104d4c:	29415568 	cmpgeui	r5,r5,1365
 4104d50:	2800051e 	bne	r5,zero,4104d68 <_free_r+0x2e0>
 4104d54:	100ad4ba 	srli	r5,r2,18
 4104d58:	29801f44 	addi	r6,r5,125
 4104d5c:	300c90fa 	slli	r6,r6,3
 4104d60:	29c01f04 	addi	r7,r5,124
 4104d64:	003fa506 	br	4104bfc <_free_r+0x174>
 4104d68:	0180fe04 	movi	r6,1016
 4104d6c:	01c01f84 	movi	r7,126
 4104d70:	003fa206 	br	4104bfc <_free_r+0x174>
 4104d74:	11000054 	ori	r4,r2,1
 4104d78:	19000115 	stw	r4,4(r3)
 4104d7c:	30800015 	stw	r2,0(r6)
 4104d80:	003f7b06 	br	4104b70 <_free_r+0xe8>

04104d84 <_fwalk>:
 4104d84:	defffa04 	addi	sp,sp,-24
 4104d88:	dd000415 	stw	r20,16(sp)
 4104d8c:	dcc00315 	stw	r19,12(sp)
 4104d90:	dc800215 	stw	r18,8(sp)
 4104d94:	dfc00515 	stw	ra,20(sp)
 4104d98:	dc400115 	stw	r17,4(sp)
 4104d9c:	dc000015 	stw	r16,0(sp)
 4104da0:	2827883a 	mov	r19,r5
 4104da4:	2480b804 	addi	r18,r4,736
 4104da8:	0029883a 	mov	r20,zero
 4104dac:	94400117 	ldw	r17,4(r18)
 4104db0:	94000217 	ldw	r16,8(r18)
 4104db4:	8c7fffc4 	addi	r17,r17,-1
 4104db8:	88000d16 	blt	r17,zero,4104df0 <_fwalk+0x6c>
 4104dbc:	8080030b 	ldhu	r2,12(r16)
 4104dc0:	8c7fffc4 	addi	r17,r17,-1
 4104dc4:	108000b0 	cmpltui	r2,r2,2
 4104dc8:	1000061e 	bne	r2,zero,4104de4 <_fwalk+0x60>
 4104dcc:	8080038f 	ldh	r2,14(r16)
 4104dd0:	8009883a 	mov	r4,r16
 4104dd4:	10bfffe0 	cmpeqi	r2,r2,-1
 4104dd8:	1000021e 	bne	r2,zero,4104de4 <_fwalk+0x60>
 4104ddc:	983ee83a 	callr	r19
 4104de0:	a0a8b03a 	or	r20,r20,r2
 4104de4:	88bfffd8 	cmpnei	r2,r17,-1
 4104de8:	84001a04 	addi	r16,r16,104
 4104dec:	103ff31e 	bne	r2,zero,4104dbc <_fwalk+0x38>
 4104df0:	94800017 	ldw	r18,0(r18)
 4104df4:	903fed1e 	bne	r18,zero,4104dac <_fwalk+0x28>
 4104df8:	a005883a 	mov	r2,r20
 4104dfc:	dfc00517 	ldw	ra,20(sp)
 4104e00:	dd000417 	ldw	r20,16(sp)
 4104e04:	dcc00317 	ldw	r19,12(sp)
 4104e08:	dc800217 	ldw	r18,8(sp)
 4104e0c:	dc400117 	ldw	r17,4(sp)
 4104e10:	dc000017 	ldw	r16,0(sp)
 4104e14:	dec00604 	addi	sp,sp,24
 4104e18:	f800283a 	ret

04104e1c <_fwalk_reent>:
 4104e1c:	defff904 	addi	sp,sp,-28
 4104e20:	dd400515 	stw	r21,20(sp)
 4104e24:	dd000415 	stw	r20,16(sp)
 4104e28:	dcc00315 	stw	r19,12(sp)
 4104e2c:	dc800215 	stw	r18,8(sp)
 4104e30:	dfc00615 	stw	ra,24(sp)
 4104e34:	dc400115 	stw	r17,4(sp)
 4104e38:	dc000015 	stw	r16,0(sp)
 4104e3c:	202b883a 	mov	r21,r4
 4104e40:	2827883a 	mov	r19,r5
 4104e44:	2480b804 	addi	r18,r4,736
 4104e48:	0029883a 	mov	r20,zero
 4104e4c:	94400117 	ldw	r17,4(r18)
 4104e50:	94000217 	ldw	r16,8(r18)
 4104e54:	8c7fffc4 	addi	r17,r17,-1
 4104e58:	88000e16 	blt	r17,zero,4104e94 <_fwalk_reent+0x78>
 4104e5c:	8080030b 	ldhu	r2,12(r16)
 4104e60:	8c7fffc4 	addi	r17,r17,-1
 4104e64:	108000b0 	cmpltui	r2,r2,2
 4104e68:	1000071e 	bne	r2,zero,4104e88 <_fwalk_reent+0x6c>
 4104e6c:	8080038f 	ldh	r2,14(r16)
 4104e70:	800b883a 	mov	r5,r16
 4104e74:	a809883a 	mov	r4,r21
 4104e78:	10bfffe0 	cmpeqi	r2,r2,-1
 4104e7c:	1000021e 	bne	r2,zero,4104e88 <_fwalk_reent+0x6c>
 4104e80:	983ee83a 	callr	r19
 4104e84:	a0a8b03a 	or	r20,r20,r2
 4104e88:	88bfffd8 	cmpnei	r2,r17,-1
 4104e8c:	84001a04 	addi	r16,r16,104
 4104e90:	103ff21e 	bne	r2,zero,4104e5c <_fwalk_reent+0x40>
 4104e94:	94800017 	ldw	r18,0(r18)
 4104e98:	903fec1e 	bne	r18,zero,4104e4c <_fwalk_reent+0x30>
 4104e9c:	a005883a 	mov	r2,r20
 4104ea0:	dfc00617 	ldw	ra,24(sp)
 4104ea4:	dd400517 	ldw	r21,20(sp)
 4104ea8:	dd000417 	ldw	r20,16(sp)
 4104eac:	dcc00317 	ldw	r19,12(sp)
 4104eb0:	dc800217 	ldw	r18,8(sp)
 4104eb4:	dc400117 	ldw	r17,4(sp)
 4104eb8:	dc000017 	ldw	r16,0(sp)
 4104ebc:	dec00704 	addi	sp,sp,28
 4104ec0:	f800283a 	ret

04104ec4 <__localeconv_l>:
 4104ec4:	20803c04 	addi	r2,r4,240
 4104ec8:	f800283a 	ret

04104ecc <_localeconv_r>:
 4104ecc:	00810474 	movhi	r2,1041
 4104ed0:	10870b04 	addi	r2,r2,7212
 4104ed4:	f800283a 	ret

04104ed8 <localeconv>:
 4104ed8:	00810474 	movhi	r2,1041
 4104edc:	10870b04 	addi	r2,r2,7212
 4104ee0:	f800283a 	ret

04104ee4 <__smakebuf_r>:
 4104ee4:	2880030b 	ldhu	r2,12(r5)
 4104ee8:	deffe804 	addi	sp,sp,-96
 4104eec:	dc001215 	stw	r16,72(sp)
 4104ef0:	dfc01715 	stw	ra,92(sp)
 4104ef4:	dd001615 	stw	r20,88(sp)
 4104ef8:	dcc01515 	stw	r19,84(sp)
 4104efc:	dc801415 	stw	r18,80(sp)
 4104f00:	dc401315 	stw	r17,76(sp)
 4104f04:	10c0008c 	andi	r3,r2,2
 4104f08:	2821883a 	mov	r16,r5
 4104f0c:	18000d26 	beq	r3,zero,4104f44 <__smakebuf_r+0x60>
 4104f10:	288010c4 	addi	r2,r5,67
 4104f14:	28800015 	stw	r2,0(r5)
 4104f18:	28800415 	stw	r2,16(r5)
 4104f1c:	00800044 	movi	r2,1
 4104f20:	28800515 	stw	r2,20(r5)
 4104f24:	dfc01717 	ldw	ra,92(sp)
 4104f28:	dd001617 	ldw	r20,88(sp)
 4104f2c:	dcc01517 	ldw	r19,84(sp)
 4104f30:	dc801417 	ldw	r18,80(sp)
 4104f34:	dc401317 	ldw	r17,76(sp)
 4104f38:	dc001217 	ldw	r16,72(sp)
 4104f3c:	dec01804 	addi	sp,sp,96
 4104f40:	f800283a 	ret
 4104f44:	2940038f 	ldh	r5,14(r5)
 4104f48:	2023883a 	mov	r17,r4
 4104f4c:	28002816 	blt	r5,zero,4104ff0 <__smakebuf_r+0x10c>
 4104f50:	d80d883a 	mov	r6,sp
 4104f54:	4108b080 	call	4108b08 <_fstat_r>
 4104f58:	10002416 	blt	r2,zero,4104fec <__smakebuf_r+0x108>
 4104f5c:	d8800117 	ldw	r2,4(sp)
 4104f60:	10bc000c 	andi	r2,r2,61440
 4104f64:	10880018 	cmpnei	r2,r2,8192
 4104f68:	1000461e 	bne	r2,zero,4105084 <__smakebuf_r+0x1a0>
 4104f6c:	8140038f 	ldh	r5,14(r16)
 4104f70:	8809883a 	mov	r4,r17
 4104f74:	41090300 	call	4109030 <_isatty_r>
 4104f78:	10003e26 	beq	r2,zero,4105074 <__smakebuf_r+0x190>
 4104f7c:	8080030b 	ldhu	r2,12(r16)
 4104f80:	80c010c4 	addi	r3,r16,67
 4104f84:	80c00015 	stw	r3,0(r16)
 4104f88:	10800054 	ori	r2,r2,1
 4104f8c:	8080030d 	sth	r2,12(r16)
 4104f90:	00800044 	movi	r2,1
 4104f94:	80c00415 	stw	r3,16(r16)
 4104f98:	80800515 	stw	r2,20(r16)
 4104f9c:	04c00044 	movi	r19,1
 4104fa0:	05010004 	movi	r20,1024
 4104fa4:	04820004 	movi	r18,2048
 4104fa8:	a00b883a 	mov	r5,r20
 4104fac:	8809883a 	mov	r4,r17
 4104fb0:	410512c0 	call	410512c <_malloc_r>
 4104fb4:	10001726 	beq	r2,zero,4105014 <__smakebuf_r+0x130>
 4104fb8:	80c0030b 	ldhu	r3,12(r16)
 4104fbc:	01010434 	movhi	r4,1040
 4104fc0:	21117204 	addi	r4,r4,17864
 4104fc4:	89000f15 	stw	r4,60(r17)
 4104fc8:	18c02014 	ori	r3,r3,128
 4104fcc:	80c0030d 	sth	r3,12(r16)
 4104fd0:	80800015 	stw	r2,0(r16)
 4104fd4:	80800415 	stw	r2,16(r16)
 4104fd8:	85000515 	stw	r20,20(r16)
 4104fdc:	98001d1e 	bne	r19,zero,4105054 <__smakebuf_r+0x170>
 4104fe0:	90c6b03a 	or	r3,r18,r3
 4104fe4:	80c0030d 	sth	r3,12(r16)
 4104fe8:	003fce06 	br	4104f24 <__smakebuf_r+0x40>
 4104fec:	8080030b 	ldhu	r2,12(r16)
 4104ff0:	1080200c 	andi	r2,r2,128
 4104ff4:	0027883a 	mov	r19,zero
 4104ff8:	10001326 	beq	r2,zero,4105048 <__smakebuf_r+0x164>
 4104ffc:	05001004 	movi	r20,64
 4105000:	a00b883a 	mov	r5,r20
 4105004:	8809883a 	mov	r4,r17
 4105008:	0025883a 	mov	r18,zero
 410500c:	410512c0 	call	410512c <_malloc_r>
 4105010:	103fe91e 	bne	r2,zero,4104fb8 <__smakebuf_r+0xd4>
 4105014:	8080030b 	ldhu	r2,12(r16)
 4105018:	10c0800c 	andi	r3,r2,512
 410501c:	183fc11e 	bne	r3,zero,4104f24 <__smakebuf_r+0x40>
 4105020:	00ffff04 	movi	r3,-4
 4105024:	10c4703a 	and	r2,r2,r3
 4105028:	10800094 	ori	r2,r2,2
 410502c:	80c010c4 	addi	r3,r16,67
 4105030:	8080030d 	sth	r2,12(r16)
 4105034:	00800044 	movi	r2,1
 4105038:	80c00015 	stw	r3,0(r16)
 410503c:	80c00415 	stw	r3,16(r16)
 4105040:	80800515 	stw	r2,20(r16)
 4105044:	003fb706 	br	4104f24 <__smakebuf_r+0x40>
 4105048:	05010004 	movi	r20,1024
 410504c:	0025883a 	mov	r18,zero
 4105050:	003fd506 	br	4104fa8 <__smakebuf_r+0xc4>
 4105054:	8140038f 	ldh	r5,14(r16)
 4105058:	8809883a 	mov	r4,r17
 410505c:	41090300 	call	4109030 <_isatty_r>
 4105060:	80c0030b 	ldhu	r3,12(r16)
 4105064:	103fde26 	beq	r2,zero,4104fe0 <__smakebuf_r+0xfc>
 4105068:	18ffff0c 	andi	r3,r3,65532
 410506c:	18c00054 	ori	r3,r3,1
 4105070:	003fdb06 	br	4104fe0 <__smakebuf_r+0xfc>
 4105074:	04c00044 	movi	r19,1
 4105078:	05010004 	movi	r20,1024
 410507c:	04820004 	movi	r18,2048
 4105080:	003fc906 	br	4104fa8 <__smakebuf_r+0xc4>
 4105084:	0027883a 	mov	r19,zero
 4105088:	05010004 	movi	r20,1024
 410508c:	04820004 	movi	r18,2048
 4105090:	003fc506 	br	4104fa8 <__smakebuf_r+0xc4>

04105094 <__swhatbuf_r>:
 4105094:	deffea04 	addi	sp,sp,-88
 4105098:	dc001215 	stw	r16,72(sp)
 410509c:	2821883a 	mov	r16,r5
 41050a0:	2940038f 	ldh	r5,14(r5)
 41050a4:	dc801415 	stw	r18,80(sp)
 41050a8:	dc401315 	stw	r17,76(sp)
 41050ac:	dfc01515 	stw	ra,84(sp)
 41050b0:	3023883a 	mov	r17,r6
 41050b4:	3825883a 	mov	r18,r7
 41050b8:	28001016 	blt	r5,zero,41050fc <__swhatbuf_r+0x68>
 41050bc:	d80d883a 	mov	r6,sp
 41050c0:	4108b080 	call	4108b08 <_fstat_r>
 41050c4:	10000d16 	blt	r2,zero,41050fc <__swhatbuf_r+0x68>
 41050c8:	d8c00117 	ldw	r3,4(sp)
 41050cc:	00820004 	movi	r2,2048
 41050d0:	18fc000c 	andi	r3,r3,61440
 41050d4:	18c80020 	cmpeqi	r3,r3,8192
 41050d8:	90c00015 	stw	r3,0(r18)
 41050dc:	00c10004 	movi	r3,1024
 41050e0:	88c00015 	stw	r3,0(r17)
 41050e4:	dfc01517 	ldw	ra,84(sp)
 41050e8:	dc801417 	ldw	r18,80(sp)
 41050ec:	dc401317 	ldw	r17,76(sp)
 41050f0:	dc001217 	ldw	r16,72(sp)
 41050f4:	dec01604 	addi	sp,sp,88
 41050f8:	f800283a 	ret
 41050fc:	8080030b 	ldhu	r2,12(r16)
 4105100:	90000015 	stw	zero,0(r18)
 4105104:	1080200c 	andi	r2,r2,128
 4105108:	10000426 	beq	r2,zero,410511c <__swhatbuf_r+0x88>
 410510c:	00801004 	movi	r2,64
 4105110:	88800015 	stw	r2,0(r17)
 4105114:	0005883a 	mov	r2,zero
 4105118:	003ff206 	br	41050e4 <__swhatbuf_r+0x50>
 410511c:	00810004 	movi	r2,1024
 4105120:	88800015 	stw	r2,0(r17)
 4105124:	0005883a 	mov	r2,zero
 4105128:	003fee06 	br	41050e4 <__swhatbuf_r+0x50>

0410512c <_malloc_r>:
 410512c:	defff604 	addi	sp,sp,-40
 4105130:	dc400115 	stw	r17,4(sp)
 4105134:	2c4002c4 	addi	r17,r5,11
 4105138:	dc800215 	stw	r18,8(sp)
 410513c:	dfc00915 	stw	ra,36(sp)
 4105140:	df000815 	stw	fp,32(sp)
 4105144:	ddc00715 	stw	r23,28(sp)
 4105148:	dd800615 	stw	r22,24(sp)
 410514c:	dd400515 	stw	r21,20(sp)
 4105150:	dd000415 	stw	r20,16(sp)
 4105154:	dcc00315 	stw	r19,12(sp)
 4105158:	dc000015 	stw	r16,0(sp)
 410515c:	888005e8 	cmpgeui	r2,r17,23
 4105160:	2025883a 	mov	r18,r4
 4105164:	10001b1e 	bne	r2,zero,41051d4 <_malloc_r+0xa8>
 4105168:	29400468 	cmpgeui	r5,r5,17
 410516c:	2800821e 	bne	r5,zero,4105378 <_malloc_r+0x24c>
 4105170:	410dd940 	call	410dd94 <__malloc_lock>
 4105174:	04400404 	movi	r17,16
 4105178:	00800604 	movi	r2,24
 410517c:	01c00084 	movi	r7,2
 4105180:	04c10474 	movhi	r19,1041
 4105184:	9cc5cd04 	addi	r19,r19,5940
 4105188:	9885883a 	add	r2,r19,r2
 410518c:	14000117 	ldw	r16,4(r2)
 4105190:	10fffe04 	addi	r3,r2,-8
 4105194:	80c08b26 	beq	r16,r3,41053c4 <_malloc_r+0x298>
 4105198:	80800117 	ldw	r2,4(r16)
 410519c:	81000317 	ldw	r4,12(r16)
 41051a0:	00ffff04 	movi	r3,-4
 41051a4:	10c4703a 	and	r2,r2,r3
 41051a8:	81400217 	ldw	r5,8(r16)
 41051ac:	8085883a 	add	r2,r16,r2
 41051b0:	10c00117 	ldw	r3,4(r2)
 41051b4:	29000315 	stw	r4,12(r5)
 41051b8:	21400215 	stw	r5,8(r4)
 41051bc:	18c00054 	ori	r3,r3,1
 41051c0:	10c00115 	stw	r3,4(r2)
 41051c4:	9009883a 	mov	r4,r18
 41051c8:	410ddb80 	call	410ddb8 <__malloc_unlock>
 41051cc:	80800204 	addi	r2,r16,8
 41051d0:	00006c06 	br	4105384 <_malloc_r+0x258>
 41051d4:	00bffe04 	movi	r2,-8
 41051d8:	88a2703a 	and	r17,r17,r2
 41051dc:	88006616 	blt	r17,zero,4105378 <_malloc_r+0x24c>
 41051e0:	89406536 	bltu	r17,r5,4105378 <_malloc_r+0x24c>
 41051e4:	410dd940 	call	410dd94 <__malloc_lock>
 41051e8:	88807e28 	cmpgeui	r2,r17,504
 41051ec:	10012226 	beq	r2,zero,4105678 <_malloc_r+0x54c>
 41051f0:	8804d27a 	srli	r2,r17,9
 41051f4:	10006f26 	beq	r2,zero,41053b4 <_malloc_r+0x288>
 41051f8:	10c00168 	cmpgeui	r3,r2,5
 41051fc:	1800fe1e 	bne	r3,zero,41055f8 <_malloc_r+0x4cc>
 4105200:	8804d1ba 	srli	r2,r17,6
 4105204:	11c00e44 	addi	r7,r2,57
 4105208:	380890fa 	slli	r4,r7,3
 410520c:	12000e04 	addi	r8,r2,56
 4105210:	04c10474 	movhi	r19,1041
 4105214:	9cc5cd04 	addi	r19,r19,5940
 4105218:	9909883a 	add	r4,r19,r4
 410521c:	24000117 	ldw	r16,4(r4)
 4105220:	213ffe04 	addi	r4,r4,-8
 4105224:	24000b26 	beq	r4,r16,4105254 <_malloc_r+0x128>
 4105228:	01bfff04 	movi	r6,-4
 410522c:	00000306 	br	410523c <_malloc_r+0x110>
 4105230:	1800d60e 	bge	r3,zero,410558c <_malloc_r+0x460>
 4105234:	84000317 	ldw	r16,12(r16)
 4105238:	24000626 	beq	r4,r16,4105254 <_malloc_r+0x128>
 410523c:	80800117 	ldw	r2,4(r16)
 4105240:	1184703a 	and	r2,r2,r6
 4105244:	1447c83a 	sub	r3,r2,r17
 4105248:	19400408 	cmpgei	r5,r3,16
 410524c:	283ff826 	beq	r5,zero,4105230 <_malloc_r+0x104>
 4105250:	400f883a 	mov	r7,r8
 4105254:	9c000417 	ldw	r16,16(r19)
 4105258:	02410474 	movhi	r9,1041
 410525c:	4a45cf04 	addi	r9,r9,5948
 4105260:	82405f26 	beq	r16,r9,41053e0 <_malloc_r+0x2b4>
 4105264:	80c00117 	ldw	r3,4(r16)
 4105268:	00bfff04 	movi	r2,-4
 410526c:	1884703a 	and	r2,r3,r2
 4105270:	1447c83a 	sub	r3,r2,r17
 4105274:	19000410 	cmplti	r4,r3,16
 4105278:	20010a26 	beq	r4,zero,41056a4 <_malloc_r+0x578>
 410527c:	9a400515 	stw	r9,20(r19)
 4105280:	9a400415 	stw	r9,16(r19)
 4105284:	1800ff0e 	bge	r3,zero,4105684 <_malloc_r+0x558>
 4105288:	10c08028 	cmpgeui	r3,r2,512
 410528c:	1800c11e 	bne	r3,zero,4105594 <_malloc_r+0x468>
 4105290:	1006d0fa 	srli	r3,r2,3
 4105294:	1008d17a 	srli	r4,r2,5
 4105298:	00800044 	movi	r2,1
 410529c:	18c00044 	addi	r3,r3,1
 41052a0:	180690fa 	slli	r3,r3,3
 41052a4:	99400117 	ldw	r5,4(r19)
 41052a8:	1104983a 	sll	r2,r2,r4
 41052ac:	98c7883a 	add	r3,r19,r3
 41052b0:	19000017 	ldw	r4,0(r3)
 41052b4:	1144b03a 	or	r2,r2,r5
 41052b8:	197ffe04 	addi	r5,r3,-8
 41052bc:	81400315 	stw	r5,12(r16)
 41052c0:	81000215 	stw	r4,8(r16)
 41052c4:	98800115 	stw	r2,4(r19)
 41052c8:	1c000015 	stw	r16,0(r3)
 41052cc:	24000315 	stw	r16,12(r4)
 41052d0:	3807d0ba 	srai	r3,r7,2
 41052d4:	01000044 	movi	r4,1
 41052d8:	20c8983a 	sll	r4,r4,r3
 41052dc:	11004536 	bltu	r2,r4,41053f4 <_malloc_r+0x2c8>
 41052e0:	2086703a 	and	r3,r4,r2
 41052e4:	18000a1e 	bne	r3,zero,4105310 <_malloc_r+0x1e4>
 41052e8:	00ffff04 	movi	r3,-4
 41052ec:	2109883a 	add	r4,r4,r4
 41052f0:	38ce703a 	and	r7,r7,r3
 41052f4:	2086703a 	and	r3,r4,r2
 41052f8:	39c00104 	addi	r7,r7,4
 41052fc:	1800041e 	bne	r3,zero,4105310 <_malloc_r+0x1e4>
 4105300:	2109883a 	add	r4,r4,r4
 4105304:	2086703a 	and	r3,r4,r2
 4105308:	39c00104 	addi	r7,r7,4
 410530c:	183ffc26 	beq	r3,zero,4105300 <_malloc_r+0x1d4>
 4105310:	02bfff04 	movi	r10,-4
 4105314:	381690fa 	slli	r11,r7,3
 4105318:	3819883a 	mov	r12,r7
 410531c:	9ad7883a 	add	r11,r19,r11
 4105320:	5811883a 	mov	r8,r11
 4105324:	40800317 	ldw	r2,12(r8)
 4105328:	4080bc26 	beq	r8,r2,410561c <_malloc_r+0x4f0>
 410532c:	10c00117 	ldw	r3,4(r2)
 4105330:	1021883a 	mov	r16,r2
 4105334:	10800317 	ldw	r2,12(r2)
 4105338:	1a86703a 	and	r3,r3,r10
 410533c:	1c4bc83a 	sub	r5,r3,r17
 4105340:	29800410 	cmplti	r6,r5,16
 4105344:	3000ba26 	beq	r6,zero,4105630 <_malloc_r+0x504>
 4105348:	283ff716 	blt	r5,zero,4105328 <_malloc_r+0x1fc>
 410534c:	80c7883a 	add	r3,r16,r3
 4105350:	19400117 	ldw	r5,4(r3)
 4105354:	81800217 	ldw	r6,8(r16)
 4105358:	9009883a 	mov	r4,r18
 410535c:	29400054 	ori	r5,r5,1
 4105360:	19400115 	stw	r5,4(r3)
 4105364:	30800315 	stw	r2,12(r6)
 4105368:	11800215 	stw	r6,8(r2)
 410536c:	410ddb80 	call	410ddb8 <__malloc_unlock>
 4105370:	80800204 	addi	r2,r16,8
 4105374:	00000306 	br	4105384 <_malloc_r+0x258>
 4105378:	00800304 	movi	r2,12
 410537c:	90800015 	stw	r2,0(r18)
 4105380:	0005883a 	mov	r2,zero
 4105384:	dfc00917 	ldw	ra,36(sp)
 4105388:	df000817 	ldw	fp,32(sp)
 410538c:	ddc00717 	ldw	r23,28(sp)
 4105390:	dd800617 	ldw	r22,24(sp)
 4105394:	dd400517 	ldw	r21,20(sp)
 4105398:	dd000417 	ldw	r20,16(sp)
 410539c:	dcc00317 	ldw	r19,12(sp)
 41053a0:	dc800217 	ldw	r18,8(sp)
 41053a4:	dc400117 	ldw	r17,4(sp)
 41053a8:	dc000017 	ldw	r16,0(sp)
 41053ac:	dec00a04 	addi	sp,sp,40
 41053b0:	f800283a 	ret
 41053b4:	01008004 	movi	r4,512
 41053b8:	01c01004 	movi	r7,64
 41053bc:	02000fc4 	movi	r8,63
 41053c0:	003f9306 	br	4105210 <_malloc_r+0xe4>
 41053c4:	14000317 	ldw	r16,12(r2)
 41053c8:	39c00084 	addi	r7,r7,2
 41053cc:	143f721e 	bne	r2,r16,4105198 <_malloc_r+0x6c>
 41053d0:	9c000417 	ldw	r16,16(r19)
 41053d4:	02410474 	movhi	r9,1041
 41053d8:	4a45cf04 	addi	r9,r9,5948
 41053dc:	827fa11e 	bne	r16,r9,4105264 <_malloc_r+0x138>
 41053e0:	3807d0ba 	srai	r3,r7,2
 41053e4:	01000044 	movi	r4,1
 41053e8:	98800117 	ldw	r2,4(r19)
 41053ec:	20c8983a 	sll	r4,r4,r3
 41053f0:	113fbb2e 	bgeu	r2,r4,41052e0 <_malloc_r+0x1b4>
 41053f4:	9c000217 	ldw	r16,8(r19)
 41053f8:	00bfff04 	movi	r2,-4
 41053fc:	85400117 	ldw	r21,4(r16)
 4105400:	a8ac703a 	and	r22,r21,r2
 4105404:	b4400336 	bltu	r22,r17,4105414 <_malloc_r+0x2e8>
 4105408:	b445c83a 	sub	r2,r22,r17
 410540c:	10c00408 	cmpgei	r3,r2,16
 4105410:	1800541e 	bne	r3,zero,4105564 <_malloc_r+0x438>
 4105414:	00810474 	movhi	r2,1041
 4105418:	108bde17 	ldw	r2,12152(r2)
 410541c:	00c10474 	movhi	r3,1041
 4105420:	1d531e17 	ldw	r21,19576(r3)
 4105424:	10bfffd8 	cmpnei	r2,r2,-1
 4105428:	85b9883a 	add	fp,r16,r22
 410542c:	8d6b883a 	add	r21,r17,r21
 4105430:	1000d626 	beq	r2,zero,410578c <_malloc_r+0x660>
 4105434:	ad4403c4 	addi	r21,r21,4111
 4105438:	00bc0004 	movi	r2,-4096
 410543c:	a8aa703a 	and	r21,r21,r2
 4105440:	a80b883a 	mov	r5,r21
 4105444:	9009883a 	mov	r4,r18
 4105448:	4106dbc0 	call	4106dbc <_sbrk_r>
 410544c:	102f883a 	mov	r23,r2
 4105450:	10bfffd8 	cmpnei	r2,r2,-1
 4105454:	1000a826 	beq	r2,zero,41056f8 <_malloc_r+0x5cc>
 4105458:	bf00a636 	bltu	r23,fp,41056f4 <_malloc_r+0x5c8>
 410545c:	00810474 	movhi	r2,1041
 4105460:	15132817 	ldw	r20,19616(r2)
 4105464:	ad29883a 	add	r20,r21,r20
 4105468:	15132815 	stw	r20,19616(r2)
 410546c:	a007883a 	mov	r3,r20
 4105470:	e5c0ec26 	beq	fp,r23,4105824 <_malloc_r+0x6f8>
 4105474:	00810474 	movhi	r2,1041
 4105478:	108bde17 	ldw	r2,12152(r2)
 410547c:	10bfffd8 	cmpnei	r2,r2,-1
 4105480:	1000ef26 	beq	r2,zero,4105840 <_malloc_r+0x714>
 4105484:	bf39c83a 	sub	fp,r23,fp
 4105488:	e0c7883a 	add	r3,fp,r3
 410548c:	00810474 	movhi	r2,1041
 4105490:	10d32815 	stw	r3,19616(r2)
 4105494:	bf0001cc 	andi	fp,r23,7
 4105498:	e000c526 	beq	fp,zero,41057b0 <_malloc_r+0x684>
 410549c:	bf2fc83a 	sub	r23,r23,fp
 41054a0:	bdc00204 	addi	r23,r23,8
 41054a4:	05040204 	movi	r20,4104
 41054a8:	a729c83a 	sub	r20,r20,fp
 41054ac:	bd6b883a 	add	r21,r23,r21
 41054b0:	a569c83a 	sub	r20,r20,r21
 41054b4:	a503ffcc 	andi	r20,r20,4095
 41054b8:	a00b883a 	mov	r5,r20
 41054bc:	9009883a 	mov	r4,r18
 41054c0:	4106dbc0 	call	4106dbc <_sbrk_r>
 41054c4:	10ffffe0 	cmpeqi	r3,r2,-1
 41054c8:	1800f31e 	bne	r3,zero,4105898 <_malloc_r+0x76c>
 41054cc:	15c5c83a 	sub	r2,r2,r23
 41054d0:	152b883a 	add	r21,r2,r20
 41054d4:	00810474 	movhi	r2,1041
 41054d8:	11532817 	ldw	r5,19616(r2)
 41054dc:	9dc00215 	stw	r23,8(r19)
 41054e0:	ad400054 	ori	r21,r21,1
 41054e4:	a169883a 	add	r20,r20,r5
 41054e8:	15132815 	stw	r20,19616(r2)
 41054ec:	bd400115 	stw	r21,4(r23)
 41054f0:	84c0d626 	beq	r16,r19,410584c <_malloc_r+0x720>
 41054f4:	b0800428 	cmpgeui	r2,r22,16
 41054f8:	1000d626 	beq	r2,zero,4105854 <_malloc_r+0x728>
 41054fc:	80c00117 	ldw	r3,4(r16)
 4105500:	013ffe04 	movi	r4,-8
 4105504:	b0bffd04 	addi	r2,r22,-12
 4105508:	1104703a 	and	r2,r2,r4
 410550c:	18c0004c 	andi	r3,r3,1
 4105510:	1886b03a 	or	r3,r3,r2
 4105514:	80c00115 	stw	r3,4(r16)
 4105518:	01000144 	movi	r4,5
 410551c:	8087883a 	add	r3,r16,r2
 4105520:	19000115 	stw	r4,4(r3)
 4105524:	19000215 	stw	r4,8(r3)
 4105528:	10800428 	cmpgeui	r2,r2,16
 410552c:	1000df1e 	bne	r2,zero,41058ac <_malloc_r+0x780>
 4105530:	bd400117 	ldw	r21,4(r23)
 4105534:	b821883a 	mov	r16,r23
 4105538:	00810474 	movhi	r2,1041
 410553c:	10931d17 	ldw	r2,19572(r2)
 4105540:	1500022e 	bgeu	r2,r20,410554c <_malloc_r+0x420>
 4105544:	00810474 	movhi	r2,1041
 4105548:	15131d15 	stw	r20,19572(r2)
 410554c:	00810474 	movhi	r2,1041
 4105550:	10931c17 	ldw	r2,19568(r2)
 4105554:	15006a2e 	bgeu	r2,r20,4105700 <_malloc_r+0x5d4>
 4105558:	00810474 	movhi	r2,1041
 410555c:	15131c15 	stw	r20,19568(r2)
 4105560:	00006706 	br	4105700 <_malloc_r+0x5d4>
 4105564:	88c00054 	ori	r3,r17,1
 4105568:	80c00115 	stw	r3,4(r16)
 410556c:	8463883a 	add	r17,r16,r17
 4105570:	10800054 	ori	r2,r2,1
 4105574:	9c400215 	stw	r17,8(r19)
 4105578:	88800115 	stw	r2,4(r17)
 410557c:	9009883a 	mov	r4,r18
 4105580:	410ddb80 	call	410ddb8 <__malloc_unlock>
 4105584:	80800204 	addi	r2,r16,8
 4105588:	003f7e06 	br	4105384 <_malloc_r+0x258>
 410558c:	81000317 	ldw	r4,12(r16)
 4105590:	003f0506 	br	41051a8 <_malloc_r+0x7c>
 4105594:	1006d27a 	srli	r3,r2,9
 4105598:	19000168 	cmpgeui	r4,r3,5
 410559c:	20005026 	beq	r4,zero,41056e0 <_malloc_r+0x5b4>
 41055a0:	19000568 	cmpgeui	r4,r3,21
 41055a4:	20008c1e 	bne	r4,zero,41057d8 <_malloc_r+0x6ac>
 41055a8:	19401704 	addi	r5,r3,92
 41055ac:	280a90fa 	slli	r5,r5,3
 41055b0:	190016c4 	addi	r4,r3,91
 41055b4:	994b883a 	add	r5,r19,r5
 41055b8:	28c00017 	ldw	r3,0(r5)
 41055bc:	297ffe04 	addi	r5,r5,-8
 41055c0:	28c07426 	beq	r5,r3,4105794 <_malloc_r+0x668>
 41055c4:	01bfff04 	movi	r6,-4
 41055c8:	19000117 	ldw	r4,4(r3)
 41055cc:	2188703a 	and	r4,r4,r6
 41055d0:	1100022e 	bgeu	r2,r4,41055dc <_malloc_r+0x4b0>
 41055d4:	18c00217 	ldw	r3,8(r3)
 41055d8:	28fffb1e 	bne	r5,r3,41055c8 <_malloc_r+0x49c>
 41055dc:	19400317 	ldw	r5,12(r3)
 41055e0:	98800117 	ldw	r2,4(r19)
 41055e4:	81400315 	stw	r5,12(r16)
 41055e8:	80c00215 	stw	r3,8(r16)
 41055ec:	2c000215 	stw	r16,8(r5)
 41055f0:	1c000315 	stw	r16,12(r3)
 41055f4:	003f3606 	br	41052d0 <_malloc_r+0x1a4>
 41055f8:	10c00568 	cmpgeui	r3,r2,21
 41055fc:	18004a26 	beq	r3,zero,4105728 <_malloc_r+0x5fc>
 4105600:	10c01568 	cmpgeui	r3,r2,85
 4105604:	18007b1e 	bne	r3,zero,41057f4 <_malloc_r+0x6c8>
 4105608:	8804d33a 	srli	r2,r17,12
 410560c:	11c01bc4 	addi	r7,r2,111
 4105610:	380890fa 	slli	r4,r7,3
 4105614:	12001b84 	addi	r8,r2,110
 4105618:	003efd06 	br	4105210 <_malloc_r+0xe4>
 410561c:	63000044 	addi	r12,r12,1
 4105620:	608000cc 	andi	r2,r12,3
 4105624:	42000204 	addi	r8,r8,8
 4105628:	103f3e1e 	bne	r2,zero,4105324 <_malloc_r+0x1f8>
 410562c:	00004506 	br	4105744 <_malloc_r+0x618>
 4105630:	81000217 	ldw	r4,8(r16)
 4105634:	89800054 	ori	r6,r17,1
 4105638:	81800115 	stw	r6,4(r16)
 410563c:	20800315 	stw	r2,12(r4)
 4105640:	11000215 	stw	r4,8(r2)
 4105644:	8463883a 	add	r17,r16,r17
 4105648:	9c400515 	stw	r17,20(r19)
 410564c:	9c400415 	stw	r17,16(r19)
 4105650:	28800054 	ori	r2,r5,1
 4105654:	88800115 	stw	r2,4(r17)
 4105658:	8a400315 	stw	r9,12(r17)
 410565c:	8a400215 	stw	r9,8(r17)
 4105660:	80c7883a 	add	r3,r16,r3
 4105664:	19400015 	stw	r5,0(r3)
 4105668:	9009883a 	mov	r4,r18
 410566c:	410ddb80 	call	410ddb8 <__malloc_unlock>
 4105670:	80800204 	addi	r2,r16,8
 4105674:	003f4306 	br	4105384 <_malloc_r+0x258>
 4105678:	880ed0fa 	srli	r7,r17,3
 410567c:	88800204 	addi	r2,r17,8
 4105680:	003ebf06 	br	4105180 <_malloc_r+0x54>
 4105684:	8085883a 	add	r2,r16,r2
 4105688:	10c00117 	ldw	r3,4(r2)
 410568c:	9009883a 	mov	r4,r18
 4105690:	18c00054 	ori	r3,r3,1
 4105694:	10c00115 	stw	r3,4(r2)
 4105698:	410ddb80 	call	410ddb8 <__malloc_unlock>
 410569c:	80800204 	addi	r2,r16,8
 41056a0:	003f3806 	br	4105384 <_malloc_r+0x258>
 41056a4:	89000054 	ori	r4,r17,1
 41056a8:	81000115 	stw	r4,4(r16)
 41056ac:	8463883a 	add	r17,r16,r17
 41056b0:	9c400515 	stw	r17,20(r19)
 41056b4:	9c400415 	stw	r17,16(r19)
 41056b8:	19000054 	ori	r4,r3,1
 41056bc:	89000115 	stw	r4,4(r17)
 41056c0:	8085883a 	add	r2,r16,r2
 41056c4:	8a400315 	stw	r9,12(r17)
 41056c8:	8a400215 	stw	r9,8(r17)
 41056cc:	10c00015 	stw	r3,0(r2)
 41056d0:	9009883a 	mov	r4,r18
 41056d4:	410ddb80 	call	410ddb8 <__malloc_unlock>
 41056d8:	80800204 	addi	r2,r16,8
 41056dc:	003f2906 	br	4105384 <_malloc_r+0x258>
 41056e0:	1006d1ba 	srli	r3,r2,6
 41056e4:	19400e44 	addi	r5,r3,57
 41056e8:	280a90fa 	slli	r5,r5,3
 41056ec:	19000e04 	addi	r4,r3,56
 41056f0:	003fb006 	br	41055b4 <_malloc_r+0x488>
 41056f4:	84c04626 	beq	r16,r19,4105810 <_malloc_r+0x6e4>
 41056f8:	9c000217 	ldw	r16,8(r19)
 41056fc:	85400117 	ldw	r21,4(r16)
 4105700:	00bfff04 	movi	r2,-4
 4105704:	a8aa703a 	and	r21,r21,r2
 4105708:	ac45c83a 	sub	r2,r21,r17
 410570c:	ac400236 	bltu	r21,r17,4105718 <_malloc_r+0x5ec>
 4105710:	10c00408 	cmpgei	r3,r2,16
 4105714:	183f931e 	bne	r3,zero,4105564 <_malloc_r+0x438>
 4105718:	9009883a 	mov	r4,r18
 410571c:	410ddb80 	call	410ddb8 <__malloc_unlock>
 4105720:	0005883a 	mov	r2,zero
 4105724:	003f1706 	br	4105384 <_malloc_r+0x258>
 4105728:	11c01704 	addi	r7,r2,92
 410572c:	380890fa 	slli	r4,r7,3
 4105730:	120016c4 	addi	r8,r2,91
 4105734:	003eb606 	br	4105210 <_malloc_r+0xe4>
 4105738:	58800217 	ldw	r2,8(r11)
 410573c:	39ffffc4 	addi	r7,r7,-1
 4105740:	12c0701e 	bne	r2,r11,4105904 <_malloc_r+0x7d8>
 4105744:	388000cc 	andi	r2,r7,3
 4105748:	5afffe04 	addi	r11,r11,-8
 410574c:	103ffa1e 	bne	r2,zero,4105738 <_malloc_r+0x60c>
 4105750:	98c00117 	ldw	r3,4(r19)
 4105754:	0104303a 	nor	r2,zero,r4
 4105758:	10c4703a 	and	r2,r2,r3
 410575c:	98800115 	stw	r2,4(r19)
 4105760:	2109883a 	add	r4,r4,r4
 4105764:	113f2336 	bltu	r2,r4,41053f4 <_malloc_r+0x2c8>
 4105768:	203f2226 	beq	r4,zero,41053f4 <_malloc_r+0x2c8>
 410576c:	2086703a 	and	r3,r4,r2
 4105770:	1800041e 	bne	r3,zero,4105784 <_malloc_r+0x658>
 4105774:	2109883a 	add	r4,r4,r4
 4105778:	2086703a 	and	r3,r4,r2
 410577c:	63000104 	addi	r12,r12,4
 4105780:	183ffc26 	beq	r3,zero,4105774 <_malloc_r+0x648>
 4105784:	600f883a 	mov	r7,r12
 4105788:	003ee206 	br	4105314 <_malloc_r+0x1e8>
 410578c:	ad400404 	addi	r21,r21,16
 4105790:	003f2b06 	br	4105440 <_malloc_r+0x314>
 4105794:	2009d0ba 	srai	r4,r4,2
 4105798:	00800044 	movi	r2,1
 410579c:	99800117 	ldw	r6,4(r19)
 41057a0:	1104983a 	sll	r2,r2,r4
 41057a4:	1184b03a 	or	r2,r2,r6
 41057a8:	98800115 	stw	r2,4(r19)
 41057ac:	003f8d06 	br	41055e4 <_malloc_r+0x4b8>
 41057b0:	bd69883a 	add	r20,r23,r21
 41057b4:	0529c83a 	sub	r20,zero,r20
 41057b8:	a503ffcc 	andi	r20,r20,4095
 41057bc:	a00b883a 	mov	r5,r20
 41057c0:	9009883a 	mov	r4,r18
 41057c4:	4106dbc0 	call	4106dbc <_sbrk_r>
 41057c8:	10ffffe0 	cmpeqi	r3,r2,-1
 41057cc:	183f3f26 	beq	r3,zero,41054cc <_malloc_r+0x3a0>
 41057d0:	0029883a 	mov	r20,zero
 41057d4:	003f3f06 	br	41054d4 <_malloc_r+0x3a8>
 41057d8:	19001568 	cmpgeui	r4,r3,85
 41057dc:	2000201e 	bne	r4,zero,4105860 <_malloc_r+0x734>
 41057e0:	1006d33a 	srli	r3,r2,12
 41057e4:	19401bc4 	addi	r5,r3,111
 41057e8:	280a90fa 	slli	r5,r5,3
 41057ec:	19001b84 	addi	r4,r3,110
 41057f0:	003f7006 	br	41055b4 <_malloc_r+0x488>
 41057f4:	10c05568 	cmpgeui	r3,r2,341
 41057f8:	1800201e 	bne	r3,zero,410587c <_malloc_r+0x750>
 41057fc:	8804d3fa 	srli	r2,r17,15
 4105800:	11c01e04 	addi	r7,r2,120
 4105804:	380890fa 	slli	r4,r7,3
 4105808:	12001dc4 	addi	r8,r2,119
 410580c:	003e8006 	br	4105210 <_malloc_r+0xe4>
 4105810:	00810474 	movhi	r2,1041
 4105814:	10d32817 	ldw	r3,19616(r2)
 4105818:	a8c7883a 	add	r3,r21,r3
 410581c:	10d32815 	stw	r3,19616(r2)
 4105820:	003f1406 	br	4105474 <_malloc_r+0x348>
 4105824:	e083ffcc 	andi	r2,fp,4095
 4105828:	103f121e 	bne	r2,zero,4105474 <_malloc_r+0x348>
 410582c:	9c000217 	ldw	r16,8(r19)
 4105830:	b56b883a 	add	r21,r22,r21
 4105834:	ad400054 	ori	r21,r21,1
 4105838:	85400115 	stw	r21,4(r16)
 410583c:	003f3e06 	br	4105538 <_malloc_r+0x40c>
 4105840:	00810474 	movhi	r2,1041
 4105844:	15cbde15 	stw	r23,12152(r2)
 4105848:	003f1206 	br	4105494 <_malloc_r+0x368>
 410584c:	b821883a 	mov	r16,r23
 4105850:	003f3906 	br	4105538 <_malloc_r+0x40c>
 4105854:	00800044 	movi	r2,1
 4105858:	b8800115 	stw	r2,4(r23)
 410585c:	003fae06 	br	4105718 <_malloc_r+0x5ec>
 4105860:	19005568 	cmpgeui	r4,r3,341
 4105864:	2000191e 	bne	r4,zero,41058cc <_malloc_r+0x7a0>
 4105868:	1006d3fa 	srli	r3,r2,15
 410586c:	19401e04 	addi	r5,r3,120
 4105870:	280a90fa 	slli	r5,r5,3
 4105874:	19001dc4 	addi	r4,r3,119
 4105878:	003f4e06 	br	41055b4 <_malloc_r+0x488>
 410587c:	10815568 	cmpgeui	r2,r2,1365
 4105880:	1000191e 	bne	r2,zero,41058e8 <_malloc_r+0x7bc>
 4105884:	8804d4ba 	srli	r2,r17,18
 4105888:	11c01f44 	addi	r7,r2,125
 410588c:	380890fa 	slli	r4,r7,3
 4105890:	12001f04 	addi	r8,r2,124
 4105894:	003e5e06 	br	4105210 <_malloc_r+0xe4>
 4105898:	e73ffe04 	addi	fp,fp,-8
 410589c:	af2b883a 	add	r21,r21,fp
 41058a0:	adebc83a 	sub	r21,r21,r23
 41058a4:	0029883a 	mov	r20,zero
 41058a8:	003f0a06 	br	41054d4 <_malloc_r+0x3a8>
 41058ac:	81400204 	addi	r5,r16,8
 41058b0:	9009883a 	mov	r4,r18
 41058b4:	4104a880 	call	4104a88 <_free_r>
 41058b8:	9c000217 	ldw	r16,8(r19)
 41058bc:	00810474 	movhi	r2,1041
 41058c0:	15132817 	ldw	r20,19616(r2)
 41058c4:	85400117 	ldw	r21,4(r16)
 41058c8:	003f1b06 	br	4105538 <_malloc_r+0x40c>
 41058cc:	18c15568 	cmpgeui	r3,r3,1365
 41058d0:	1800091e 	bne	r3,zero,41058f8 <_malloc_r+0x7cc>
 41058d4:	1006d4ba 	srli	r3,r2,18
 41058d8:	19401f44 	addi	r5,r3,125
 41058dc:	280a90fa 	slli	r5,r5,3
 41058e0:	19001f04 	addi	r4,r3,124
 41058e4:	003f3306 	br	41055b4 <_malloc_r+0x488>
 41058e8:	0100fe04 	movi	r4,1016
 41058ec:	01c01fc4 	movi	r7,127
 41058f0:	02001f84 	movi	r8,126
 41058f4:	003e4606 	br	4105210 <_malloc_r+0xe4>
 41058f8:	0140fe04 	movi	r5,1016
 41058fc:	01001f84 	movi	r4,126
 4105900:	003f2c06 	br	41055b4 <_malloc_r+0x488>
 4105904:	98800117 	ldw	r2,4(r19)
 4105908:	003f9506 	br	4105760 <_malloc_r+0x634>

0410590c <memchr>:
 410590c:	208000cc 	andi	r2,r4,3
 4105910:	280f883a 	mov	r7,r5
 4105914:	10000e26 	beq	r2,zero,4105950 <memchr+0x44>
 4105918:	30bfffc4 	addi	r2,r6,-1
 410591c:	30001726 	beq	r6,zero,410597c <memchr+0x70>
 4105920:	29803fcc 	andi	r6,r5,255
 4105924:	00000606 	br	4105940 <memchr+0x34>
 4105928:	21000044 	addi	r4,r4,1
 410592c:	20c000cc 	andi	r3,r4,3
 4105930:	18000826 	beq	r3,zero,4105954 <memchr+0x48>
 4105934:	10bfffc4 	addi	r2,r2,-1
 4105938:	10ffffe0 	cmpeqi	r3,r2,-1
 410593c:	18000f1e 	bne	r3,zero,410597c <memchr+0x70>
 4105940:	20c00003 	ldbu	r3,0(r4)
 4105944:	19bff81e 	bne	r3,r6,4105928 <memchr+0x1c>
 4105948:	2005883a 	mov	r2,r4
 410594c:	f800283a 	ret
 4105950:	3005883a 	mov	r2,r6
 4105954:	10c00128 	cmpgeui	r3,r2,4
 4105958:	18000a1e 	bne	r3,zero,4105984 <memchr+0x78>
 410595c:	10001e26 	beq	r2,zero,41059d8 <memchr+0xcc>
 4105960:	2087883a 	add	r3,r4,r2
 4105964:	39803fcc 	andi	r6,r7,255
 4105968:	2005883a 	mov	r2,r4
 410596c:	11000003 	ldbu	r4,0(r2)
 4105970:	21bff626 	beq	r4,r6,410594c <memchr+0x40>
 4105974:	10800044 	addi	r2,r2,1
 4105978:	18bffc1e 	bne	r3,r2,410596c <memchr+0x60>
 410597c:	0005883a 	mov	r2,zero
 4105980:	f800283a 	ret
 4105984:	29403fcc 	andi	r5,r5,255
 4105988:	280c923a 	slli	r6,r5,8
 410598c:	027fbff4 	movhi	r9,65279
 4105990:	02202074 	movhi	r8,32897
 4105994:	314ab03a 	or	r5,r6,r5
 4105998:	280c943a 	slli	r6,r5,16
 410599c:	4a7fbfc4 	addi	r9,r9,-257
 41059a0:	42202004 	addi	r8,r8,-32640
 41059a4:	314cb03a 	or	r6,r6,r5
 41059a8:	20c00017 	ldw	r3,0(r4)
 41059ac:	30c6f03a 	xor	r3,r6,r3
 41059b0:	1a4b883a 	add	r5,r3,r9
 41059b4:	00c6303a 	nor	r3,zero,r3
 41059b8:	28c6703a 	and	r3,r5,r3
 41059bc:	1a06703a 	and	r3,r3,r8
 41059c0:	183fe71e 	bne	r3,zero,4105960 <memchr+0x54>
 41059c4:	10bfff04 	addi	r2,r2,-4
 41059c8:	10c00128 	cmpgeui	r3,r2,4
 41059cc:	21000104 	addi	r4,r4,4
 41059d0:	183ff51e 	bne	r3,zero,41059a8 <memchr+0x9c>
 41059d4:	003fe106 	br	410595c <memchr+0x50>
 41059d8:	f800283a 	ret

041059dc <memcpy>:
 41059dc:	30c00430 	cmpltui	r3,r6,16
 41059e0:	2005883a 	mov	r2,r4
 41059e4:	18002d1e 	bne	r3,zero,4105a9c <memcpy+0xc0>
 41059e8:	2906b03a 	or	r3,r5,r4
 41059ec:	18c000cc 	andi	r3,r3,3
 41059f0:	1800351e 	bne	r3,zero,4105ac8 <memcpy+0xec>
 41059f4:	32fffc04 	addi	r11,r6,-16
 41059f8:	5816d13a 	srli	r11,r11,4
 41059fc:	280f883a 	mov	r7,r5
 4105a00:	2007883a 	mov	r3,r4
 4105a04:	5ac00044 	addi	r11,r11,1
 4105a08:	5816913a 	slli	r11,r11,4
 4105a0c:	22d5883a 	add	r10,r4,r11
 4105a10:	39000117 	ldw	r4,4(r7)
 4105a14:	3a400017 	ldw	r9,0(r7)
 4105a18:	3a000217 	ldw	r8,8(r7)
 4105a1c:	19000115 	stw	r4,4(r3)
 4105a20:	39000317 	ldw	r4,12(r7)
 4105a24:	1a400015 	stw	r9,0(r3)
 4105a28:	1a000215 	stw	r8,8(r3)
 4105a2c:	19000315 	stw	r4,12(r3)
 4105a30:	18c00404 	addi	r3,r3,16
 4105a34:	39c00404 	addi	r7,r7,16
 4105a38:	50fff51e 	bne	r10,r3,4105a10 <memcpy+0x34>
 4105a3c:	3100030c 	andi	r4,r6,12
 4105a40:	2acb883a 	add	r5,r5,r11
 4105a44:	320003cc 	andi	r8,r6,15
 4105a48:	20002226 	beq	r4,zero,4105ad4 <memcpy+0xf8>
 4105a4c:	280f883a 	mov	r7,r5
 4105a50:	1813883a 	mov	r9,r3
 4105a54:	39c00104 	addi	r7,r7,4
 4105a58:	3abfff17 	ldw	r10,-4(r7)
 4105a5c:	41c9c83a 	sub	r4,r8,r7
 4105a60:	2909883a 	add	r4,r5,r4
 4105a64:	4a800015 	stw	r10,0(r9)
 4105a68:	21000128 	cmpgeui	r4,r4,4
 4105a6c:	4a400104 	addi	r9,r9,4
 4105a70:	203ff81e 	bne	r4,zero,4105a54 <memcpy+0x78>
 4105a74:	413fff04 	addi	r4,r8,-4
 4105a78:	2008d0ba 	srli	r4,r4,2
 4105a7c:	318000cc 	andi	r6,r6,3
 4105a80:	31ffffc4 	addi	r7,r6,-1
 4105a84:	21000044 	addi	r4,r4,1
 4105a88:	200890ba 	slli	r4,r4,2
 4105a8c:	1907883a 	add	r3,r3,r4
 4105a90:	290b883a 	add	r5,r5,r4
 4105a94:	3000041e 	bne	r6,zero,4105aa8 <memcpy+0xcc>
 4105a98:	f800283a 	ret
 4105a9c:	2007883a 	mov	r3,r4
 4105aa0:	31ffffc4 	addi	r7,r6,-1
 4105aa4:	303ffc26 	beq	r6,zero,4105a98 <memcpy+0xbc>
 4105aa8:	39c00044 	addi	r7,r7,1
 4105aac:	19cf883a 	add	r7,r3,r7
 4105ab0:	29800003 	ldbu	r6,0(r5)
 4105ab4:	18c00044 	addi	r3,r3,1
 4105ab8:	29400044 	addi	r5,r5,1
 4105abc:	19bfffc5 	stb	r6,-1(r3)
 4105ac0:	38fffb1e 	bne	r7,r3,4105ab0 <memcpy+0xd4>
 4105ac4:	f800283a 	ret
 4105ac8:	31ffffc4 	addi	r7,r6,-1
 4105acc:	2007883a 	mov	r3,r4
 4105ad0:	003ff506 	br	4105aa8 <memcpy+0xcc>
 4105ad4:	400d883a 	mov	r6,r8
 4105ad8:	003ff106 	br	4105aa0 <memcpy+0xc4>

04105adc <memset>:
 4105adc:	20c000cc 	andi	r3,r4,3
 4105ae0:	2005883a 	mov	r2,r4
 4105ae4:	18003626 	beq	r3,zero,4105bc0 <memset+0xe4>
 4105ae8:	31ffffc4 	addi	r7,r6,-1
 4105aec:	30003326 	beq	r6,zero,4105bbc <memset+0xe0>
 4105af0:	2811883a 	mov	r8,r5
 4105af4:	2007883a 	mov	r3,r4
 4105af8:	00000306 	br	4105b08 <memset+0x2c>
 4105afc:	39ffffc4 	addi	r7,r7,-1
 4105b00:	39bfffe0 	cmpeqi	r6,r7,-1
 4105b04:	30002d1e 	bne	r6,zero,4105bbc <memset+0xe0>
 4105b08:	18c00044 	addi	r3,r3,1
 4105b0c:	198000cc 	andi	r6,r3,3
 4105b10:	1a3fffc5 	stb	r8,-1(r3)
 4105b14:	303ff91e 	bne	r6,zero,4105afc <memset+0x20>
 4105b18:	39000130 	cmpltui	r4,r7,4
 4105b1c:	2000221e 	bne	r4,zero,4105ba8 <memset+0xcc>
 4105b20:	29003fcc 	andi	r4,r5,255
 4105b24:	200c923a 	slli	r6,r4,8
 4105b28:	3a000430 	cmpltui	r8,r7,16
 4105b2c:	3108b03a 	or	r4,r6,r4
 4105b30:	200c943a 	slli	r6,r4,16
 4105b34:	310cb03a 	or	r6,r6,r4
 4105b38:	40000e1e 	bne	r8,zero,4105b74 <memset+0x98>
 4105b3c:	393ffc04 	addi	r4,r7,-16
 4105b40:	2008d13a 	srli	r4,r4,4
 4105b44:	21000044 	addi	r4,r4,1
 4105b48:	2008913a 	slli	r4,r4,4
 4105b4c:	1909883a 	add	r4,r3,r4
 4105b50:	19800015 	stw	r6,0(r3)
 4105b54:	19800115 	stw	r6,4(r3)
 4105b58:	19800215 	stw	r6,8(r3)
 4105b5c:	19800315 	stw	r6,12(r3)
 4105b60:	18c00404 	addi	r3,r3,16
 4105b64:	20fffa1e 	bne	r4,r3,4105b50 <memset+0x74>
 4105b68:	3900030c 	andi	r4,r7,12
 4105b6c:	39c003cc 	andi	r7,r7,15
 4105b70:	20000d26 	beq	r4,zero,4105ba8 <memset+0xcc>
 4105b74:	1811883a 	mov	r8,r3
 4105b78:	42000104 	addi	r8,r8,4
 4105b7c:	3a09c83a 	sub	r4,r7,r8
 4105b80:	1909883a 	add	r4,r3,r4
 4105b84:	21000128 	cmpgeui	r4,r4,4
 4105b88:	41bfff15 	stw	r6,-4(r8)
 4105b8c:	203ffa1e 	bne	r4,zero,4105b78 <memset+0x9c>
 4105b90:	393fff04 	addi	r4,r7,-4
 4105b94:	2008d0ba 	srli	r4,r4,2
 4105b98:	39c000cc 	andi	r7,r7,3
 4105b9c:	21000044 	addi	r4,r4,1
 4105ba0:	200890ba 	slli	r4,r4,2
 4105ba4:	1907883a 	add	r3,r3,r4
 4105ba8:	38000426 	beq	r7,zero,4105bbc <memset+0xe0>
 4105bac:	19cf883a 	add	r7,r3,r7
 4105bb0:	18c00044 	addi	r3,r3,1
 4105bb4:	197fffc5 	stb	r5,-1(r3)
 4105bb8:	38fffd1e 	bne	r7,r3,4105bb0 <memset+0xd4>
 4105bbc:	f800283a 	ret
 4105bc0:	2007883a 	mov	r3,r4
 4105bc4:	300f883a 	mov	r7,r6
 4105bc8:	003fd306 	br	4105b18 <memset+0x3c>

04105bcc <_Balloc>:
 4105bcc:	20801317 	ldw	r2,76(r4)
 4105bd0:	defffc04 	addi	sp,sp,-16
 4105bd4:	dc400115 	stw	r17,4(sp)
 4105bd8:	dc000015 	stw	r16,0(sp)
 4105bdc:	dfc00315 	stw	ra,12(sp)
 4105be0:	dc800215 	stw	r18,8(sp)
 4105be4:	2021883a 	mov	r16,r4
 4105be8:	2823883a 	mov	r17,r5
 4105bec:	10000e26 	beq	r2,zero,4105c28 <_Balloc+0x5c>
 4105bf0:	880690ba 	slli	r3,r17,2
 4105bf4:	10c7883a 	add	r3,r2,r3
 4105bf8:	18800017 	ldw	r2,0(r3)
 4105bfc:	10001126 	beq	r2,zero,4105c44 <_Balloc+0x78>
 4105c00:	11000017 	ldw	r4,0(r2)
 4105c04:	19000015 	stw	r4,0(r3)
 4105c08:	10000415 	stw	zero,16(r2)
 4105c0c:	10000315 	stw	zero,12(r2)
 4105c10:	dfc00317 	ldw	ra,12(sp)
 4105c14:	dc800217 	ldw	r18,8(sp)
 4105c18:	dc400117 	ldw	r17,4(sp)
 4105c1c:	dc000017 	ldw	r16,0(sp)
 4105c20:	dec00404 	addi	sp,sp,16
 4105c24:	f800283a 	ret
 4105c28:	01800844 	movi	r6,33
 4105c2c:	01400104 	movi	r5,4
 4105c30:	410864c0 	call	410864c <_calloc_r>
 4105c34:	80801315 	stw	r2,76(r16)
 4105c38:	103fed1e 	bne	r2,zero,4105bf0 <_Balloc+0x24>
 4105c3c:	0005883a 	mov	r2,zero
 4105c40:	003ff306 	br	4105c10 <_Balloc+0x44>
 4105c44:	04800044 	movi	r18,1
 4105c48:	9464983a 	sll	r18,r18,r17
 4105c4c:	01400044 	movi	r5,1
 4105c50:	8009883a 	mov	r4,r16
 4105c54:	91800144 	addi	r6,r18,5
 4105c58:	300c90ba 	slli	r6,r6,2
 4105c5c:	410864c0 	call	410864c <_calloc_r>
 4105c60:	103ff626 	beq	r2,zero,4105c3c <_Balloc+0x70>
 4105c64:	14400115 	stw	r17,4(r2)
 4105c68:	14800215 	stw	r18,8(r2)
 4105c6c:	003fe606 	br	4105c08 <_Balloc+0x3c>

04105c70 <_Bfree>:
 4105c70:	28000726 	beq	r5,zero,4105c90 <_Bfree+0x20>
 4105c74:	28c00117 	ldw	r3,4(r5)
 4105c78:	20801317 	ldw	r2,76(r4)
 4105c7c:	180690ba 	slli	r3,r3,2
 4105c80:	10c5883a 	add	r2,r2,r3
 4105c84:	10c00017 	ldw	r3,0(r2)
 4105c88:	28c00015 	stw	r3,0(r5)
 4105c8c:	11400015 	stw	r5,0(r2)
 4105c90:	f800283a 	ret

04105c94 <__multadd>:
 4105c94:	defff704 	addi	sp,sp,-36
 4105c98:	dc800215 	stw	r18,8(sp)
 4105c9c:	2c800417 	ldw	r18,16(r5)
 4105ca0:	ddc00715 	stw	r23,28(sp)
 4105ca4:	dd800615 	stw	r22,24(sp)
 4105ca8:	dd400515 	stw	r21,20(sp)
 4105cac:	dd000415 	stw	r20,16(sp)
 4105cb0:	dcc00315 	stw	r19,12(sp)
 4105cb4:	dc400115 	stw	r17,4(sp)
 4105cb8:	dfc00815 	stw	ra,32(sp)
 4105cbc:	dc000015 	stw	r16,0(sp)
 4105cc0:	2827883a 	mov	r19,r5
 4105cc4:	2029883a 	mov	r20,r4
 4105cc8:	302b883a 	mov	r21,r6
 4105ccc:	3823883a 	mov	r17,r7
 4105cd0:	2d800504 	addi	r22,r5,20
 4105cd4:	002f883a 	mov	r23,zero
 4105cd8:	b4000017 	ldw	r16,0(r22)
 4105cdc:	a80b883a 	mov	r5,r21
 4105ce0:	b5800104 	addi	r22,r22,4
 4105ce4:	813fffcc 	andi	r4,r16,65535
 4105ce8:	410aec00 	call	410aec0 <__mulsi3>
 4105cec:	8008d43a 	srli	r4,r16,16
 4105cf0:	a80b883a 	mov	r5,r21
 4105cf4:	1461883a 	add	r16,r2,r17
 4105cf8:	410aec00 	call	410aec0 <__mulsi3>
 4105cfc:	800ed43a 	srli	r7,r16,16
 4105d00:	843fffcc 	andi	r16,r16,65535
 4105d04:	bdc00044 	addi	r23,r23,1
 4105d08:	11c5883a 	add	r2,r2,r7
 4105d0c:	1006943a 	slli	r3,r2,16
 4105d10:	1022d43a 	srli	r17,r2,16
 4105d14:	1c21883a 	add	r16,r3,r16
 4105d18:	b43fff15 	stw	r16,-4(r22)
 4105d1c:	bcbfee16 	blt	r23,r18,4105cd8 <__multadd+0x44>
 4105d20:	88000826 	beq	r17,zero,4105d44 <__multadd+0xb0>
 4105d24:	98800217 	ldw	r2,8(r19)
 4105d28:	9080120e 	bge	r18,r2,4105d74 <__multadd+0xe0>
 4105d2c:	90800144 	addi	r2,r18,5
 4105d30:	100490ba 	slli	r2,r2,2
 4105d34:	94800044 	addi	r18,r18,1
 4105d38:	9885883a 	add	r2,r19,r2
 4105d3c:	14400015 	stw	r17,0(r2)
 4105d40:	9c800415 	stw	r18,16(r19)
 4105d44:	9805883a 	mov	r2,r19
 4105d48:	dfc00817 	ldw	ra,32(sp)
 4105d4c:	ddc00717 	ldw	r23,28(sp)
 4105d50:	dd800617 	ldw	r22,24(sp)
 4105d54:	dd400517 	ldw	r21,20(sp)
 4105d58:	dd000417 	ldw	r20,16(sp)
 4105d5c:	dcc00317 	ldw	r19,12(sp)
 4105d60:	dc800217 	ldw	r18,8(sp)
 4105d64:	dc400117 	ldw	r17,4(sp)
 4105d68:	dc000017 	ldw	r16,0(sp)
 4105d6c:	dec00904 	addi	sp,sp,36
 4105d70:	f800283a 	ret
 4105d74:	99400117 	ldw	r5,4(r19)
 4105d78:	a009883a 	mov	r4,r20
 4105d7c:	29400044 	addi	r5,r5,1
 4105d80:	4105bcc0 	call	4105bcc <_Balloc>
 4105d84:	1021883a 	mov	r16,r2
 4105d88:	10001226 	beq	r2,zero,4105dd4 <__multadd+0x140>
 4105d8c:	99800417 	ldw	r6,16(r19)
 4105d90:	99400304 	addi	r5,r19,12
 4105d94:	11000304 	addi	r4,r2,12
 4105d98:	31800084 	addi	r6,r6,2
 4105d9c:	300c90ba 	slli	r6,r6,2
 4105da0:	41059dc0 	call	41059dc <memcpy>
 4105da4:	98000926 	beq	r19,zero,4105dcc <__multadd+0x138>
 4105da8:	98c00117 	ldw	r3,4(r19)
 4105dac:	a0801317 	ldw	r2,76(r20)
 4105db0:	180690ba 	slli	r3,r3,2
 4105db4:	10c5883a 	add	r2,r2,r3
 4105db8:	10c00017 	ldw	r3,0(r2)
 4105dbc:	98c00015 	stw	r3,0(r19)
 4105dc0:	14c00015 	stw	r19,0(r2)
 4105dc4:	8027883a 	mov	r19,r16
 4105dc8:	003fd806 	br	4105d2c <__multadd+0x98>
 4105dcc:	8027883a 	mov	r19,r16
 4105dd0:	003fd606 	br	4105d2c <__multadd+0x98>
 4105dd4:	01c10474 	movhi	r7,1041
 4105dd8:	01010474 	movhi	r4,1041
 4105ddc:	39c33804 	addi	r7,r7,3296
 4105de0:	000d883a 	mov	r6,zero
 4105de4:	01402d44 	movi	r5,181
 4105de8:	21034d04 	addi	r4,r4,3380
 4105dec:	41085d40 	call	41085d4 <__assert_func>

04105df0 <__s2b>:
 4105df0:	defff904 	addi	sp,sp,-28
 4105df4:	dc800215 	stw	r18,8(sp)
 4105df8:	dc000015 	stw	r16,0(sp)
 4105dfc:	2025883a 	mov	r18,r4
 4105e00:	2821883a 	mov	r16,r5
 4105e04:	39000204 	addi	r4,r7,8
 4105e08:	01400244 	movi	r5,9
 4105e0c:	dcc00315 	stw	r19,12(sp)
 4105e10:	dc400115 	stw	r17,4(sp)
 4105e14:	dfc00615 	stw	ra,24(sp)
 4105e18:	3823883a 	mov	r17,r7
 4105e1c:	dd400515 	stw	r21,20(sp)
 4105e20:	dd000415 	stw	r20,16(sp)
 4105e24:	3027883a 	mov	r19,r6
 4105e28:	41003780 	call	4100378 <__divsi3>
 4105e2c:	88c00290 	cmplti	r3,r17,10
 4105e30:	1800341e 	bne	r3,zero,4105f04 <__s2b+0x114>
 4105e34:	00c00044 	movi	r3,1
 4105e38:	000b883a 	mov	r5,zero
 4105e3c:	18c7883a 	add	r3,r3,r3
 4105e40:	29400044 	addi	r5,r5,1
 4105e44:	18bffd16 	blt	r3,r2,4105e3c <__s2b+0x4c>
 4105e48:	9009883a 	mov	r4,r18
 4105e4c:	4105bcc0 	call	4105bcc <_Balloc>
 4105e50:	100b883a 	mov	r5,r2
 4105e54:	10002d26 	beq	r2,zero,4105f0c <__s2b+0x11c>
 4105e58:	d8800717 	ldw	r2,28(sp)
 4105e5c:	28800515 	stw	r2,20(r5)
 4105e60:	00800044 	movi	r2,1
 4105e64:	28800415 	stw	r2,16(r5)
 4105e68:	98800290 	cmplti	r2,r19,10
 4105e6c:	1000221e 	bne	r2,zero,4105ef8 <__s2b+0x108>
 4105e70:	85400244 	addi	r21,r16,9
 4105e74:	a829883a 	mov	r20,r21
 4105e78:	84e1883a 	add	r16,r16,r19
 4105e7c:	a1c00007 	ldb	r7,0(r20)
 4105e80:	01800284 	movi	r6,10
 4105e84:	9009883a 	mov	r4,r18
 4105e88:	39fff404 	addi	r7,r7,-48
 4105e8c:	4105c940 	call	4105c94 <__multadd>
 4105e90:	a5000044 	addi	r20,r20,1
 4105e94:	100b883a 	mov	r5,r2
 4105e98:	a43ff81e 	bne	r20,r16,4105e7c <__s2b+0x8c>
 4105e9c:	9c3ffe04 	addi	r16,r19,-8
 4105ea0:	ac21883a 	add	r16,r21,r16
 4105ea4:	9c400a0e 	bge	r19,r17,4105ed0 <__s2b+0xe0>
 4105ea8:	8ce3c83a 	sub	r17,r17,r19
 4105eac:	8463883a 	add	r17,r16,r17
 4105eb0:	81c00007 	ldb	r7,0(r16)
 4105eb4:	01800284 	movi	r6,10
 4105eb8:	9009883a 	mov	r4,r18
 4105ebc:	39fff404 	addi	r7,r7,-48
 4105ec0:	4105c940 	call	4105c94 <__multadd>
 4105ec4:	84000044 	addi	r16,r16,1
 4105ec8:	100b883a 	mov	r5,r2
 4105ecc:	8c3ff81e 	bne	r17,r16,4105eb0 <__s2b+0xc0>
 4105ed0:	2805883a 	mov	r2,r5
 4105ed4:	dfc00617 	ldw	ra,24(sp)
 4105ed8:	dd400517 	ldw	r21,20(sp)
 4105edc:	dd000417 	ldw	r20,16(sp)
 4105ee0:	dcc00317 	ldw	r19,12(sp)
 4105ee4:	dc800217 	ldw	r18,8(sp)
 4105ee8:	dc400117 	ldw	r17,4(sp)
 4105eec:	dc000017 	ldw	r16,0(sp)
 4105ef0:	dec00704 	addi	sp,sp,28
 4105ef4:	f800283a 	ret
 4105ef8:	84000284 	addi	r16,r16,10
 4105efc:	04c00244 	movi	r19,9
 4105f00:	003fe806 	br	4105ea4 <__s2b+0xb4>
 4105f04:	000b883a 	mov	r5,zero
 4105f08:	003fcf06 	br	4105e48 <__s2b+0x58>
 4105f0c:	01c10474 	movhi	r7,1041
 4105f10:	01010474 	movhi	r4,1041
 4105f14:	39c33804 	addi	r7,r7,3296
 4105f18:	000d883a 	mov	r6,zero
 4105f1c:	01403384 	movi	r5,206
 4105f20:	21034d04 	addi	r4,r4,3380
 4105f24:	41085d40 	call	41085d4 <__assert_func>

04105f28 <__hi0bits>:
 4105f28:	20bfffec 	andhi	r2,r4,65535
 4105f2c:	1000131e 	bne	r2,zero,4105f7c <__hi0bits+0x54>
 4105f30:	2008943a 	slli	r4,r4,16
 4105f34:	00800404 	movi	r2,16
 4105f38:	20ffc02c 	andhi	r3,r4,65280
 4105f3c:	1800021e 	bne	r3,zero,4105f48 <__hi0bits+0x20>
 4105f40:	2008923a 	slli	r4,r4,8
 4105f44:	10800204 	addi	r2,r2,8
 4105f48:	20fc002c 	andhi	r3,r4,61440
 4105f4c:	1800021e 	bne	r3,zero,4105f58 <__hi0bits+0x30>
 4105f50:	2008913a 	slli	r4,r4,4
 4105f54:	10800104 	addi	r2,r2,4
 4105f58:	20f0002c 	andhi	r3,r4,49152
 4105f5c:	1800021e 	bne	r3,zero,4105f68 <__hi0bits+0x40>
 4105f60:	200890ba 	slli	r4,r4,2
 4105f64:	10800084 	addi	r2,r2,2
 4105f68:	20000316 	blt	r4,zero,4105f78 <__hi0bits+0x50>
 4105f6c:	2110002c 	andhi	r4,r4,16384
 4105f70:	10800044 	addi	r2,r2,1
 4105f74:	20000326 	beq	r4,zero,4105f84 <__hi0bits+0x5c>
 4105f78:	f800283a 	ret
 4105f7c:	0005883a 	mov	r2,zero
 4105f80:	003fed06 	br	4105f38 <__hi0bits+0x10>
 4105f84:	00800804 	movi	r2,32
 4105f88:	f800283a 	ret

04105f8c <__lo0bits>:
 4105f8c:	20c00017 	ldw	r3,0(r4)
 4105f90:	188001cc 	andi	r2,r3,7
 4105f94:	10000826 	beq	r2,zero,4105fb8 <__lo0bits+0x2c>
 4105f98:	1880004c 	andi	r2,r3,1
 4105f9c:	10001f1e 	bne	r2,zero,410601c <__lo0bits+0x90>
 4105fa0:	1880008c 	andi	r2,r3,2
 4105fa4:	10002126 	beq	r2,zero,410602c <__lo0bits+0xa0>
 4105fa8:	1806d07a 	srli	r3,r3,1
 4105fac:	00800044 	movi	r2,1
 4105fb0:	20c00015 	stw	r3,0(r4)
 4105fb4:	f800283a 	ret
 4105fb8:	18bfffcc 	andi	r2,r3,65535
 4105fbc:	10001426 	beq	r2,zero,4106010 <__lo0bits+0x84>
 4105fc0:	0005883a 	mov	r2,zero
 4105fc4:	19403fcc 	andi	r5,r3,255
 4105fc8:	2800021e 	bne	r5,zero,4105fd4 <__lo0bits+0x48>
 4105fcc:	1806d23a 	srli	r3,r3,8
 4105fd0:	10800204 	addi	r2,r2,8
 4105fd4:	194003cc 	andi	r5,r3,15
 4105fd8:	2800021e 	bne	r5,zero,4105fe4 <__lo0bits+0x58>
 4105fdc:	1806d13a 	srli	r3,r3,4
 4105fe0:	10800104 	addi	r2,r2,4
 4105fe4:	194000cc 	andi	r5,r3,3
 4105fe8:	2800021e 	bne	r5,zero,4105ff4 <__lo0bits+0x68>
 4105fec:	1806d0ba 	srli	r3,r3,2
 4105ff0:	10800084 	addi	r2,r2,2
 4105ff4:	1940004c 	andi	r5,r3,1
 4105ff8:	2800031e 	bne	r5,zero,4106008 <__lo0bits+0x7c>
 4105ffc:	1806d07a 	srli	r3,r3,1
 4106000:	10800044 	addi	r2,r2,1
 4106004:	18000726 	beq	r3,zero,4106024 <__lo0bits+0x98>
 4106008:	20c00015 	stw	r3,0(r4)
 410600c:	f800283a 	ret
 4106010:	1806d43a 	srli	r3,r3,16
 4106014:	00800404 	movi	r2,16
 4106018:	003fea06 	br	4105fc4 <__lo0bits+0x38>
 410601c:	0005883a 	mov	r2,zero
 4106020:	f800283a 	ret
 4106024:	00800804 	movi	r2,32
 4106028:	f800283a 	ret
 410602c:	1806d0ba 	srli	r3,r3,2
 4106030:	00800084 	movi	r2,2
 4106034:	20c00015 	stw	r3,0(r4)
 4106038:	f800283a 	ret

0410603c <__i2b>:
 410603c:	20c01317 	ldw	r3,76(r4)
 4106040:	defffd04 	addi	sp,sp,-12
 4106044:	dc400115 	stw	r17,4(sp)
 4106048:	dc000015 	stw	r16,0(sp)
 410604c:	dfc00215 	stw	ra,8(sp)
 4106050:	2021883a 	mov	r16,r4
 4106054:	2823883a 	mov	r17,r5
 4106058:	18000d26 	beq	r3,zero,4106090 <__i2b+0x54>
 410605c:	18800117 	ldw	r2,4(r3)
 4106060:	10001826 	beq	r2,zero,41060c4 <__i2b+0x88>
 4106064:	11000017 	ldw	r4,0(r2)
 4106068:	19000115 	stw	r4,4(r3)
 410606c:	00c00044 	movi	r3,1
 4106070:	10000315 	stw	zero,12(r2)
 4106074:	14400515 	stw	r17,20(r2)
 4106078:	10c00415 	stw	r3,16(r2)
 410607c:	dfc00217 	ldw	ra,8(sp)
 4106080:	dc400117 	ldw	r17,4(sp)
 4106084:	dc000017 	ldw	r16,0(sp)
 4106088:	dec00304 	addi	sp,sp,12
 410608c:	f800283a 	ret
 4106090:	01800844 	movi	r6,33
 4106094:	01400104 	movi	r5,4
 4106098:	410864c0 	call	410864c <_calloc_r>
 410609c:	80801315 	stw	r2,76(r16)
 41060a0:	1007883a 	mov	r3,r2
 41060a4:	103fed1e 	bne	r2,zero,410605c <__i2b+0x20>
 41060a8:	01c10474 	movhi	r7,1041
 41060ac:	01010474 	movhi	r4,1041
 41060b0:	39c33804 	addi	r7,r7,3296
 41060b4:	000d883a 	mov	r6,zero
 41060b8:	01405004 	movi	r5,320
 41060bc:	21034d04 	addi	r4,r4,3380
 41060c0:	41085d40 	call	41085d4 <__assert_func>
 41060c4:	01800704 	movi	r6,28
 41060c8:	01400044 	movi	r5,1
 41060cc:	8009883a 	mov	r4,r16
 41060d0:	410864c0 	call	410864c <_calloc_r>
 41060d4:	103ff426 	beq	r2,zero,41060a8 <__i2b+0x6c>
 41060d8:	00c00044 	movi	r3,1
 41060dc:	10c00115 	stw	r3,4(r2)
 41060e0:	00c00084 	movi	r3,2
 41060e4:	10c00215 	stw	r3,8(r2)
 41060e8:	003fe006 	br	410606c <__i2b+0x30>

041060ec <__multiply>:
 41060ec:	defff004 	addi	sp,sp,-64
 41060f0:	dd800c15 	stw	r22,48(sp)
 41060f4:	dc400715 	stw	r17,28(sp)
 41060f8:	2d800417 	ldw	r22,16(r5)
 41060fc:	34400417 	ldw	r17,16(r6)
 4106100:	dc800815 	stw	r18,32(sp)
 4106104:	dc000615 	stw	r16,24(sp)
 4106108:	dfc00f15 	stw	ra,60(sp)
 410610c:	df000e15 	stw	fp,56(sp)
 4106110:	ddc00d15 	stw	r23,52(sp)
 4106114:	dd400b15 	stw	r21,44(sp)
 4106118:	dd000a15 	stw	r20,40(sp)
 410611c:	dcc00915 	stw	r19,36(sp)
 4106120:	2825883a 	mov	r18,r5
 4106124:	3021883a 	mov	r16,r6
 4106128:	b4400516 	blt	r22,r17,4106140 <__multiply+0x54>
 410612c:	8807883a 	mov	r3,r17
 4106130:	2821883a 	mov	r16,r5
 4106134:	b023883a 	mov	r17,r22
 4106138:	3025883a 	mov	r18,r6
 410613c:	182d883a 	mov	r22,r3
 4106140:	80800217 	ldw	r2,8(r16)
 4106144:	8d87883a 	add	r3,r17,r22
 4106148:	d8c00015 	stw	r3,0(sp)
 410614c:	81400117 	ldw	r5,4(r16)
 4106150:	10c0010e 	bge	r2,r3,4106158 <__multiply+0x6c>
 4106154:	29400044 	addi	r5,r5,1
 4106158:	4105bcc0 	call	4105bcc <_Balloc>
 410615c:	d8800515 	stw	r2,20(sp)
 4106160:	10008c26 	beq	r2,zero,4106394 <__multiply+0x2a8>
 4106164:	d8800017 	ldw	r2,0(sp)
 4106168:	102690ba 	slli	r19,r2,2
 410616c:	d8800517 	ldw	r2,20(sp)
 4106170:	15000504 	addi	r20,r2,20
 4106174:	a4c5883a 	add	r2,r20,r19
 4106178:	d8800115 	stw	r2,4(sp)
 410617c:	a0800a2e 	bgeu	r20,r2,41061a8 <__multiply+0xbc>
 4106180:	d8800117 	ldw	r2,4(sp)
 4106184:	d8c00517 	ldw	r3,20(sp)
 4106188:	000b883a 	mov	r5,zero
 410618c:	a009883a 	mov	r4,r20
 4106190:	10cdc83a 	sub	r6,r2,r3
 4106194:	31bffac4 	addi	r6,r6,-21
 4106198:	300cd0ba 	srli	r6,r6,2
 410619c:	31800044 	addi	r6,r6,1
 41061a0:	300c90ba 	slli	r6,r6,2
 41061a4:	4105adc0 	call	4105adc <memset>
 41061a8:	b02c90ba 	slli	r22,r22,2
 41061ac:	882290ba 	slli	r17,r17,2
 41061b0:	94800504 	addi	r18,r18,20
 41061b4:	80800504 	addi	r2,r16,20
 41061b8:	9587883a 	add	r3,r18,r22
 41061bc:	d8800315 	stw	r2,12(sp)
 41061c0:	d8c00215 	stw	r3,8(sp)
 41061c4:	1463883a 	add	r17,r2,r17
 41061c8:	90c0542e 	bgeu	r18,r3,410631c <__multiply+0x230>
 41061cc:	80800544 	addi	r2,r16,21
 41061d0:	88806d36 	bltu	r17,r2,4106388 <__multiply+0x29c>
 41061d4:	8c05c83a 	sub	r2,r17,r16
 41061d8:	10bffac4 	addi	r2,r2,-21
 41061dc:	1004d0ba 	srli	r2,r2,2
 41061e0:	10800044 	addi	r2,r2,1
 41061e4:	100490ba 	slli	r2,r2,2
 41061e8:	d8800415 	stw	r2,16(sp)
 41061ec:	00000606 	br	4106208 <__multiply+0x11c>
 41061f0:	102ad43a 	srli	r21,r2,16
 41061f4:	a800271e 	bne	r21,zero,4106294 <__multiply+0x1a8>
 41061f8:	d8800217 	ldw	r2,8(sp)
 41061fc:	94800104 	addi	r18,r18,4
 4106200:	a5000104 	addi	r20,r20,4
 4106204:	9080452e 	bgeu	r18,r2,410631c <__multiply+0x230>
 4106208:	90800017 	ldw	r2,0(r18)
 410620c:	15ffffcc 	andi	r23,r2,65535
 4106210:	b83ff726 	beq	r23,zero,41061f0 <__multiply+0x104>
 4106214:	dd400317 	ldw	r21,12(sp)
 4106218:	a02d883a 	mov	r22,r20
 410621c:	0027883a 	mov	r19,zero
 4106220:	af000017 	ldw	fp,0(r21)
 4106224:	b4000017 	ldw	r16,0(r22)
 4106228:	b80b883a 	mov	r5,r23
 410622c:	e13fffcc 	andi	r4,fp,65535
 4106230:	410aec00 	call	410aec0 <__mulsi3>
 4106234:	e008d43a 	srli	r4,fp,16
 4106238:	823fffcc 	andi	r8,r16,65535
 410623c:	1205883a 	add	r2,r2,r8
 4106240:	b80b883a 	mov	r5,r23
 4106244:	14e7883a 	add	r19,r2,r19
 4106248:	8020d43a 	srli	r16,r16,16
 410624c:	410aec00 	call	410aec0 <__mulsi3>
 4106250:	9808d43a 	srli	r4,r19,16
 4106254:	1405883a 	add	r2,r2,r16
 4106258:	98ffffcc 	andi	r3,r19,65535
 410625c:	1105883a 	add	r2,r2,r4
 4106260:	1008943a 	slli	r4,r2,16
 4106264:	b5800104 	addi	r22,r22,4
 4106268:	ad400104 	addi	r21,r21,4
 410626c:	20c6b03a 	or	r3,r4,r3
 4106270:	b0ffff15 	stw	r3,-4(r22)
 4106274:	1026d43a 	srli	r19,r2,16
 4106278:	ac7fe936 	bltu	r21,r17,4106220 <__multiply+0x134>
 410627c:	d8800417 	ldw	r2,16(sp)
 4106280:	a085883a 	add	r2,r20,r2
 4106284:	14c00015 	stw	r19,0(r2)
 4106288:	90800017 	ldw	r2,0(r18)
 410628c:	102ad43a 	srli	r21,r2,16
 4106290:	a83fd926 	beq	r21,zero,41061f8 <__multiply+0x10c>
 4106294:	a5c00017 	ldw	r23,0(r20)
 4106298:	dd800317 	ldw	r22,12(sp)
 410629c:	a027883a 	mov	r19,r20
 41062a0:	b821883a 	mov	r16,r23
 41062a4:	0039883a 	mov	fp,zero
 41062a8:	b100000b 	ldhu	r4,0(r22)
 41062ac:	a80b883a 	mov	r5,r21
 41062b0:	9cc00104 	addi	r19,r19,4
 41062b4:	410aec00 	call	410aec0 <__mulsi3>
 41062b8:	800cd43a 	srli	r6,r16,16
 41062bc:	b8ffffcc 	andi	r3,r23,65535
 41062c0:	b5800104 	addi	r22,r22,4
 41062c4:	118d883a 	add	r6,r2,r6
 41062c8:	3739883a 	add	fp,r6,fp
 41062cc:	e004943a 	slli	r2,fp,16
 41062d0:	9c000017 	ldw	r16,0(r19)
 41062d4:	a80b883a 	mov	r5,r21
 41062d8:	10c6b03a 	or	r3,r2,r3
 41062dc:	98ffff15 	stw	r3,-4(r19)
 41062e0:	b13fff8b 	ldhu	r4,-2(r22)
 41062e4:	410aec00 	call	410aec0 <__mulsi3>
 41062e8:	e00cd43a 	srli	r6,fp,16
 41062ec:	80ffffcc 	andi	r3,r16,65535
 41062f0:	10c7883a 	add	r3,r2,r3
 41062f4:	19af883a 	add	r23,r3,r6
 41062f8:	b838d43a 	srli	fp,r23,16
 41062fc:	b47fea36 	bltu	r22,r17,41062a8 <__multiply+0x1bc>
 4106300:	d8800417 	ldw	r2,16(sp)
 4106304:	94800104 	addi	r18,r18,4
 4106308:	a085883a 	add	r2,r20,r2
 410630c:	15c00015 	stw	r23,0(r2)
 4106310:	d8800217 	ldw	r2,8(sp)
 4106314:	a5000104 	addi	r20,r20,4
 4106318:	90bfbb36 	bltu	r18,r2,4106208 <__multiply+0x11c>
 410631c:	d8800017 	ldw	r2,0(sp)
 4106320:	00800516 	blt	zero,r2,4106338 <__multiply+0x24c>
 4106324:	00000906 	br	410634c <__multiply+0x260>
 4106328:	d8800017 	ldw	r2,0(sp)
 410632c:	10bfffc4 	addi	r2,r2,-1
 4106330:	d8800015 	stw	r2,0(sp)
 4106334:	10000526 	beq	r2,zero,410634c <__multiply+0x260>
 4106338:	d8c00117 	ldw	r3,4(sp)
 410633c:	18bfff17 	ldw	r2,-4(r3)
 4106340:	18ffff04 	addi	r3,r3,-4
 4106344:	d8c00115 	stw	r3,4(sp)
 4106348:	103ff726 	beq	r2,zero,4106328 <__multiply+0x23c>
 410634c:	d8800517 	ldw	r2,20(sp)
 4106350:	d8c00017 	ldw	r3,0(sp)
 4106354:	10c00415 	stw	r3,16(r2)
 4106358:	dfc00f17 	ldw	ra,60(sp)
 410635c:	df000e17 	ldw	fp,56(sp)
 4106360:	ddc00d17 	ldw	r23,52(sp)
 4106364:	dd800c17 	ldw	r22,48(sp)
 4106368:	dd400b17 	ldw	r21,44(sp)
 410636c:	dd000a17 	ldw	r20,40(sp)
 4106370:	dcc00917 	ldw	r19,36(sp)
 4106374:	dc800817 	ldw	r18,32(sp)
 4106378:	dc400717 	ldw	r17,28(sp)
 410637c:	dc000617 	ldw	r16,24(sp)
 4106380:	dec01004 	addi	sp,sp,64
 4106384:	f800283a 	ret
 4106388:	00800104 	movi	r2,4
 410638c:	d8800415 	stw	r2,16(sp)
 4106390:	003f9d06 	br	4106208 <__multiply+0x11c>
 4106394:	01c10474 	movhi	r7,1041
 4106398:	01010474 	movhi	r4,1041
 410639c:	39c33804 	addi	r7,r7,3296
 41063a0:	000d883a 	mov	r6,zero
 41063a4:	01405744 	movi	r5,349
 41063a8:	21034d04 	addi	r4,r4,3380
 41063ac:	41085d40 	call	41085d4 <__assert_func>

041063b0 <__pow5mult>:
 41063b0:	defffb04 	addi	sp,sp,-20
 41063b4:	dcc00315 	stw	r19,12(sp)
 41063b8:	dc000015 	stw	r16,0(sp)
 41063bc:	dfc00415 	stw	ra,16(sp)
 41063c0:	dc800215 	stw	r18,8(sp)
 41063c4:	dc400115 	stw	r17,4(sp)
 41063c8:	308000cc 	andi	r2,r6,3
 41063cc:	3021883a 	mov	r16,r6
 41063d0:	2027883a 	mov	r19,r4
 41063d4:	10002d1e 	bne	r2,zero,410648c <__pow5mult+0xdc>
 41063d8:	2825883a 	mov	r18,r5
 41063dc:	8021d0ba 	srai	r16,r16,2
 41063e0:	80001926 	beq	r16,zero,4106448 <__pow5mult+0x98>
 41063e4:	9c401217 	ldw	r17,72(r19)
 41063e8:	8800061e 	bne	r17,zero,4106404 <__pow5mult+0x54>
 41063ec:	00002f06 	br	41064ac <__pow5mult+0xfc>
 41063f0:	8021d07a 	srai	r16,r16,1
 41063f4:	80001426 	beq	r16,zero,4106448 <__pow5mult+0x98>
 41063f8:	88800017 	ldw	r2,0(r17)
 41063fc:	10001a26 	beq	r2,zero,4106468 <__pow5mult+0xb8>
 4106400:	1023883a 	mov	r17,r2
 4106404:	8080004c 	andi	r2,r16,1
 4106408:	103ff926 	beq	r2,zero,41063f0 <__pow5mult+0x40>
 410640c:	880d883a 	mov	r6,r17
 4106410:	900b883a 	mov	r5,r18
 4106414:	9809883a 	mov	r4,r19
 4106418:	41060ec0 	call	41060ec <__multiply>
 410641c:	90001926 	beq	r18,zero,4106484 <__pow5mult+0xd4>
 4106420:	91000117 	ldw	r4,4(r18)
 4106424:	98c01317 	ldw	r3,76(r19)
 4106428:	8021d07a 	srai	r16,r16,1
 410642c:	200890ba 	slli	r4,r4,2
 4106430:	1907883a 	add	r3,r3,r4
 4106434:	19000017 	ldw	r4,0(r3)
 4106438:	91000015 	stw	r4,0(r18)
 410643c:	1c800015 	stw	r18,0(r3)
 4106440:	1025883a 	mov	r18,r2
 4106444:	803fec1e 	bne	r16,zero,41063f8 <__pow5mult+0x48>
 4106448:	9005883a 	mov	r2,r18
 410644c:	dfc00417 	ldw	ra,16(sp)
 4106450:	dcc00317 	ldw	r19,12(sp)
 4106454:	dc800217 	ldw	r18,8(sp)
 4106458:	dc400117 	ldw	r17,4(sp)
 410645c:	dc000017 	ldw	r16,0(sp)
 4106460:	dec00504 	addi	sp,sp,20
 4106464:	f800283a 	ret
 4106468:	880d883a 	mov	r6,r17
 410646c:	880b883a 	mov	r5,r17
 4106470:	9809883a 	mov	r4,r19
 4106474:	41060ec0 	call	41060ec <__multiply>
 4106478:	88800015 	stw	r2,0(r17)
 410647c:	10000015 	stw	zero,0(r2)
 4106480:	003fdf06 	br	4106400 <__pow5mult+0x50>
 4106484:	1025883a 	mov	r18,r2
 4106488:	003fd906 	br	41063f0 <__pow5mult+0x40>
 410648c:	100490ba 	slli	r2,r2,2
 4106490:	00c10474 	movhi	r3,1041
 4106494:	000f883a 	mov	r7,zero
 4106498:	10c7883a 	add	r3,r2,r3
 410649c:	19835c17 	ldw	r6,3440(r3)
 41064a0:	4105c940 	call	4105c94 <__multadd>
 41064a4:	1025883a 	mov	r18,r2
 41064a8:	003fcc06 	br	41063dc <__pow5mult+0x2c>
 41064ac:	01400044 	movi	r5,1
 41064b0:	9809883a 	mov	r4,r19
 41064b4:	4105bcc0 	call	4105bcc <_Balloc>
 41064b8:	1023883a 	mov	r17,r2
 41064bc:	10000726 	beq	r2,zero,41064dc <__pow5mult+0x12c>
 41064c0:	00809c44 	movi	r2,625
 41064c4:	88800515 	stw	r2,20(r17)
 41064c8:	00800044 	movi	r2,1
 41064cc:	88800415 	stw	r2,16(r17)
 41064d0:	9c401215 	stw	r17,72(r19)
 41064d4:	88000015 	stw	zero,0(r17)
 41064d8:	003fca06 	br	4106404 <__pow5mult+0x54>
 41064dc:	01c10474 	movhi	r7,1041
 41064e0:	01010474 	movhi	r4,1041
 41064e4:	39c33804 	addi	r7,r7,3296
 41064e8:	000d883a 	mov	r6,zero
 41064ec:	01405004 	movi	r5,320
 41064f0:	21034d04 	addi	r4,r4,3380
 41064f4:	41085d40 	call	41085d4 <__assert_func>

041064f8 <__lshift>:
 41064f8:	defff804 	addi	sp,sp,-32
 41064fc:	dd800615 	stw	r22,24(sp)
 4106500:	dc000015 	stw	r16,0(sp)
 4106504:	302dd17a 	srai	r22,r6,5
 4106508:	2c000417 	ldw	r16,16(r5)
 410650c:	28800217 	ldw	r2,8(r5)
 4106510:	dd000415 	stw	r20,16(sp)
 4106514:	b421883a 	add	r16,r22,r16
 4106518:	dcc00315 	stw	r19,12(sp)
 410651c:	dc800215 	stw	r18,8(sp)
 4106520:	dc400115 	stw	r17,4(sp)
 4106524:	dfc00715 	stw	ra,28(sp)
 4106528:	dd400515 	stw	r21,20(sp)
 410652c:	85000044 	addi	r20,r16,1
 4106530:	2827883a 	mov	r19,r5
 4106534:	3025883a 	mov	r18,r6
 4106538:	29400117 	ldw	r5,4(r5)
 410653c:	2023883a 	mov	r17,r4
 4106540:	1500030e 	bge	r2,r20,4106550 <__lshift+0x58>
 4106544:	1085883a 	add	r2,r2,r2
 4106548:	29400044 	addi	r5,r5,1
 410654c:	153ffd16 	blt	r2,r20,4106544 <__lshift+0x4c>
 4106550:	8809883a 	mov	r4,r17
 4106554:	4105bcc0 	call	4105bcc <_Balloc>
 4106558:	102b883a 	mov	r21,r2
 410655c:	10004126 	beq	r2,zero,4106664 <__lshift+0x16c>
 4106560:	11000504 	addi	r4,r2,20
 4106564:	0580050e 	bge	zero,r22,410657c <__lshift+0x84>
 4106568:	b02c90ba 	slli	r22,r22,2
 410656c:	000b883a 	mov	r5,zero
 4106570:	b00d883a 	mov	r6,r22
 4106574:	4105adc0 	call	4105adc <memset>
 4106578:	1589883a 	add	r4,r2,r22
 410657c:	9a000417 	ldw	r8,16(r19)
 4106580:	98c00504 	addi	r3,r19,20
 4106584:	948007cc 	andi	r18,r18,31
 4106588:	401090ba 	slli	r8,r8,2
 410658c:	1a11883a 	add	r8,r3,r8
 4106590:	90002c26 	beq	r18,zero,4106644 <__lshift+0x14c>
 4106594:	01400804 	movi	r5,32
 4106598:	2c8bc83a 	sub	r5,r5,r18
 410659c:	2005883a 	mov	r2,r4
 41065a0:	000f883a 	mov	r7,zero
 41065a4:	19800017 	ldw	r6,0(r3)
 41065a8:	10800104 	addi	r2,r2,4
 41065ac:	18c00104 	addi	r3,r3,4
 41065b0:	348c983a 	sll	r6,r6,r18
 41065b4:	31ccb03a 	or	r6,r6,r7
 41065b8:	11bfff15 	stw	r6,-4(r2)
 41065bc:	19bfff17 	ldw	r6,-4(r3)
 41065c0:	314ed83a 	srl	r7,r6,r5
 41065c4:	1a3ff736 	bltu	r3,r8,41065a4 <__lshift+0xac>
 41065c8:	98800544 	addi	r2,r19,21
 41065cc:	40802336 	bltu	r8,r2,410665c <__lshift+0x164>
 41065d0:	44c7c83a 	sub	r3,r8,r19
 41065d4:	18fffac4 	addi	r3,r3,-21
 41065d8:	1806d0ba 	srli	r3,r3,2
 41065dc:	18c00044 	addi	r3,r3,1
 41065e0:	180690ba 	slli	r3,r3,2
 41065e4:	20c9883a 	add	r4,r4,r3
 41065e8:	21c00015 	stw	r7,0(r4)
 41065ec:	38000126 	beq	r7,zero,41065f4 <__lshift+0xfc>
 41065f0:	a021883a 	mov	r16,r20
 41065f4:	ac000415 	stw	r16,16(r21)
 41065f8:	98000726 	beq	r19,zero,4106618 <__lshift+0x120>
 41065fc:	98c00117 	ldw	r3,4(r19)
 4106600:	88801317 	ldw	r2,76(r17)
 4106604:	180690ba 	slli	r3,r3,2
 4106608:	10c5883a 	add	r2,r2,r3
 410660c:	10c00017 	ldw	r3,0(r2)
 4106610:	98c00015 	stw	r3,0(r19)
 4106614:	14c00015 	stw	r19,0(r2)
 4106618:	a805883a 	mov	r2,r21
 410661c:	dfc00717 	ldw	ra,28(sp)
 4106620:	dd800617 	ldw	r22,24(sp)
 4106624:	dd400517 	ldw	r21,20(sp)
 4106628:	dd000417 	ldw	r20,16(sp)
 410662c:	dcc00317 	ldw	r19,12(sp)
 4106630:	dc800217 	ldw	r18,8(sp)
 4106634:	dc400117 	ldw	r17,4(sp)
 4106638:	dc000017 	ldw	r16,0(sp)
 410663c:	dec00804 	addi	sp,sp,32
 4106640:	f800283a 	ret
 4106644:	18800017 	ldw	r2,0(r3)
 4106648:	18c00104 	addi	r3,r3,4
 410664c:	21000104 	addi	r4,r4,4
 4106650:	20bfff15 	stw	r2,-4(r4)
 4106654:	1a3ffb36 	bltu	r3,r8,4106644 <__lshift+0x14c>
 4106658:	003fe606 	br	41065f4 <__lshift+0xfc>
 410665c:	00c00104 	movi	r3,4
 4106660:	003fe006 	br	41065e4 <__lshift+0xec>
 4106664:	01c10474 	movhi	r7,1041
 4106668:	01010474 	movhi	r4,1041
 410666c:	39c33804 	addi	r7,r7,3296
 4106670:	000d883a 	mov	r6,zero
 4106674:	01407644 	movi	r5,473
 4106678:	21034d04 	addi	r4,r4,3380
 410667c:	41085d40 	call	41085d4 <__assert_func>

04106680 <__mcmp>:
 4106680:	21800417 	ldw	r6,16(r4)
 4106684:	28c00417 	ldw	r3,16(r5)
 4106688:	30c5c83a 	sub	r2,r6,r3
 410668c:	30c00e1e 	bne	r6,r3,41066c8 <__mcmp+0x48>
 4106690:	180690ba 	slli	r3,r3,2
 4106694:	21c00504 	addi	r7,r4,20
 4106698:	29400504 	addi	r5,r5,20
 410669c:	38c9883a 	add	r4,r7,r3
 41066a0:	28c7883a 	add	r3,r5,r3
 41066a4:	00000106 	br	41066ac <__mcmp+0x2c>
 41066a8:	3900082e 	bgeu	r7,r4,41066cc <__mcmp+0x4c>
 41066ac:	21bfff17 	ldw	r6,-4(r4)
 41066b0:	197fff17 	ldw	r5,-4(r3)
 41066b4:	213fff04 	addi	r4,r4,-4
 41066b8:	18ffff04 	addi	r3,r3,-4
 41066bc:	317ffa26 	beq	r6,r5,41066a8 <__mcmp+0x28>
 41066c0:	3140032e 	bgeu	r6,r5,41066d0 <__mcmp+0x50>
 41066c4:	00bfffc4 	movi	r2,-1
 41066c8:	f800283a 	ret
 41066cc:	f800283a 	ret
 41066d0:	00800044 	movi	r2,1
 41066d4:	f800283a 	ret

041066d8 <__mdiff>:
 41066d8:	28800417 	ldw	r2,16(r5)
 41066dc:	30c00417 	ldw	r3,16(r6)
 41066e0:	defffc04 	addi	sp,sp,-16
 41066e4:	dc800215 	stw	r18,8(sp)
 41066e8:	dc400115 	stw	r17,4(sp)
 41066ec:	dc000015 	stw	r16,0(sp)
 41066f0:	dfc00315 	stw	ra,12(sp)
 41066f4:	2823883a 	mov	r17,r5
 41066f8:	3021883a 	mov	r16,r6
 41066fc:	10e5c83a 	sub	r18,r2,r3
 4106700:	10c0641e 	bne	r2,r3,4106894 <__mdiff+0x1bc>
 4106704:	180c90ba 	slli	r6,r3,2
 4106708:	29400504 	addi	r5,r5,20
 410670c:	80c00504 	addi	r3,r16,20
 4106710:	2985883a 	add	r2,r5,r6
 4106714:	1987883a 	add	r3,r3,r6
 4106718:	00000106 	br	4106720 <__mdiff+0x48>
 410671c:	2880642e 	bgeu	r5,r2,41068b0 <__mdiff+0x1d8>
 4106720:	11bfff17 	ldw	r6,-4(r2)
 4106724:	19ffff17 	ldw	r7,-4(r3)
 4106728:	10bfff04 	addi	r2,r2,-4
 410672c:	18ffff04 	addi	r3,r3,-4
 4106730:	31fffa26 	beq	r6,r7,410671c <__mdiff+0x44>
 4106734:	31c05236 	bltu	r6,r7,4106880 <__mdiff+0x1a8>
 4106738:	89400117 	ldw	r5,4(r17)
 410673c:	4105bcc0 	call	4105bcc <_Balloc>
 4106740:	10006226 	beq	r2,zero,41068cc <__mdiff+0x1f4>
 4106744:	8a400417 	ldw	r9,16(r17)
 4106748:	83000417 	ldw	r12,16(r16)
 410674c:	8ac00504 	addi	r11,r17,20
 4106750:	481090ba 	slli	r8,r9,2
 4106754:	601890ba 	slli	r12,r12,2
 4106758:	81800504 	addi	r6,r16,20
 410675c:	13400504 	addi	r13,r2,20
 4106760:	14800315 	stw	r18,12(r2)
 4106764:	5a11883a 	add	r8,r11,r8
 4106768:	3319883a 	add	r12,r6,r12
 410676c:	681d883a 	mov	r14,r13
 4106770:	5815883a 	mov	r10,r11
 4106774:	0007883a 	mov	r3,zero
 4106778:	51000017 	ldw	r4,0(r10)
 410677c:	31c00017 	ldw	r7,0(r6)
 4106780:	73800104 	addi	r14,r14,4
 4106784:	217fffcc 	andi	r5,r4,65535
 4106788:	28cb883a 	add	r5,r5,r3
 410678c:	38ffffcc 	andi	r3,r7,65535
 4106790:	28cbc83a 	sub	r5,r5,r3
 4106794:	380ed43a 	srli	r7,r7,16
 4106798:	2006d43a 	srli	r3,r4,16
 410679c:	2809d43a 	srai	r4,r5,16
 41067a0:	297fffcc 	andi	r5,r5,65535
 41067a4:	19c7c83a 	sub	r3,r3,r7
 41067a8:	1907883a 	add	r3,r3,r4
 41067ac:	1808943a 	slli	r4,r3,16
 41067b0:	31800104 	addi	r6,r6,4
 41067b4:	1807d43a 	srai	r3,r3,16
 41067b8:	214ab03a 	or	r5,r4,r5
 41067bc:	717fff15 	stw	r5,-4(r14)
 41067c0:	52800104 	addi	r10,r10,4
 41067c4:	333fec36 	bltu	r6,r12,4106778 <__mdiff+0xa0>
 41067c8:	640fc83a 	sub	r7,r12,r16
 41067cc:	39fffac4 	addi	r7,r7,-21
 41067d0:	84000544 	addi	r16,r16,21
 41067d4:	380ed0ba 	srli	r7,r7,2
 41067d8:	64003336 	bltu	r12,r16,41068a8 <__mdiff+0x1d0>
 41067dc:	380890ba 	slli	r4,r7,2
 41067e0:	6909883a 	add	r4,r13,r4
 41067e4:	64002e36 	bltu	r12,r16,41068a0 <__mdiff+0x1c8>
 41067e8:	39800044 	addi	r6,r7,1
 41067ec:	300c90ba 	slli	r6,r6,2
 41067f0:	5997883a 	add	r11,r11,r6
 41067f4:	699b883a 	add	r13,r13,r6
 41067f8:	5a00152e 	bgeu	r11,r8,4106850 <__mdiff+0x178>
 41067fc:	680f883a 	mov	r7,r13
 4106800:	580d883a 	mov	r6,r11
 4106804:	31000017 	ldw	r4,0(r6)
 4106808:	39c00104 	addi	r7,r7,4
 410680c:	31800104 	addi	r6,r6,4
 4106810:	217fffcc 	andi	r5,r4,65535
 4106814:	28cb883a 	add	r5,r5,r3
 4106818:	2815d43a 	srai	r10,r5,16
 410681c:	2006d43a 	srli	r3,r4,16
 4106820:	297fffcc 	andi	r5,r5,65535
 4106824:	1a87883a 	add	r3,r3,r10
 4106828:	1814943a 	slli	r10,r3,16
 410682c:	1807d43a 	srai	r3,r3,16
 4106830:	514ab03a 	or	r5,r10,r5
 4106834:	397fff15 	stw	r5,-4(r7)
 4106838:	323ff236 	bltu	r6,r8,4106804 <__mdiff+0x12c>
 410683c:	413fffc4 	addi	r4,r8,-1
 4106840:	22c9c83a 	sub	r4,r4,r11
 4106844:	2008d0ba 	srli	r4,r4,2
 4106848:	200890ba 	slli	r4,r4,2
 410684c:	6909883a 	add	r4,r13,r4
 4106850:	2800041e 	bne	r5,zero,4106864 <__mdiff+0x18c>
 4106854:	20ffff17 	ldw	r3,-4(r4)
 4106858:	4a7fffc4 	addi	r9,r9,-1
 410685c:	213fff04 	addi	r4,r4,-4
 4106860:	183ffc26 	beq	r3,zero,4106854 <__mdiff+0x17c>
 4106864:	12400415 	stw	r9,16(r2)
 4106868:	dfc00317 	ldw	ra,12(sp)
 410686c:	dc800217 	ldw	r18,8(sp)
 4106870:	dc400117 	ldw	r17,4(sp)
 4106874:	dc000017 	ldw	r16,0(sp)
 4106878:	dec00404 	addi	sp,sp,16
 410687c:	f800283a 	ret
 4106880:	8805883a 	mov	r2,r17
 4106884:	04800044 	movi	r18,1
 4106888:	8023883a 	mov	r17,r16
 410688c:	1021883a 	mov	r16,r2
 4106890:	003fa906 	br	4106738 <__mdiff+0x60>
 4106894:	903ffa16 	blt	r18,zero,4106880 <__mdiff+0x1a8>
 4106898:	0025883a 	mov	r18,zero
 410689c:	003fa606 	br	4106738 <__mdiff+0x60>
 41068a0:	01800104 	movi	r6,4
 41068a4:	003fd206 	br	41067f0 <__mdiff+0x118>
 41068a8:	0009883a 	mov	r4,zero
 41068ac:	003fcc06 	br	41067e0 <__mdiff+0x108>
 41068b0:	000b883a 	mov	r5,zero
 41068b4:	4105bcc0 	call	4105bcc <_Balloc>
 41068b8:	10000b26 	beq	r2,zero,41068e8 <__mdiff+0x210>
 41068bc:	00c00044 	movi	r3,1
 41068c0:	10c00415 	stw	r3,16(r2)
 41068c4:	10000515 	stw	zero,20(r2)
 41068c8:	003fe706 	br	4106868 <__mdiff+0x190>
 41068cc:	01c10474 	movhi	r7,1041
 41068d0:	01010474 	movhi	r4,1041
 41068d4:	39c33804 	addi	r7,r7,3296
 41068d8:	000d883a 	mov	r6,zero
 41068dc:	01409004 	movi	r5,576
 41068e0:	21034d04 	addi	r4,r4,3380
 41068e4:	41085d40 	call	41085d4 <__assert_func>
 41068e8:	01c10474 	movhi	r7,1041
 41068ec:	01010474 	movhi	r4,1041
 41068f0:	39c33804 	addi	r7,r7,3296
 41068f4:	000d883a 	mov	r6,zero
 41068f8:	01408c84 	movi	r5,562
 41068fc:	21034d04 	addi	r4,r4,3380
 4106900:	41085d40 	call	41085d4 <__assert_func>

04106904 <__ulp>:
 4106904:	28dffc2c 	andhi	r3,r5,32752
 4106908:	017f3034 	movhi	r5,64704
 410690c:	1947883a 	add	r3,r3,r5
 4106910:	00c0020e 	bge	zero,r3,410691c <__ulp+0x18>
 4106914:	0005883a 	mov	r2,zero
 4106918:	f800283a 	ret
 410691c:	00c7c83a 	sub	r3,zero,r3
 4106920:	1807d53a 	srai	r3,r3,20
 4106924:	18800508 	cmpgei	r2,r3,20
 4106928:	1000041e 	bne	r2,zero,410693c <__ulp+0x38>
 410692c:	00800234 	movhi	r2,8
 4106930:	10c7d83a 	sra	r3,r2,r3
 4106934:	0005883a 	mov	r2,zero
 4106938:	f800283a 	ret
 410693c:	193ffb04 	addi	r4,r3,-20
 4106940:	208007c8 	cmpgei	r2,r4,31
 4106944:	0007883a 	mov	r3,zero
 4106948:	1000031e 	bne	r2,zero,4106958 <__ulp+0x54>
 410694c:	00a00034 	movhi	r2,32768
 4106950:	1104d83a 	srl	r2,r2,r4
 4106954:	f800283a 	ret
 4106958:	00800044 	movi	r2,1
 410695c:	f800283a 	ret

04106960 <__b2d>:
 4106960:	defffa04 	addi	sp,sp,-24
 4106964:	dc400115 	stw	r17,4(sp)
 4106968:	24400417 	ldw	r17,16(r4)
 410696c:	dc000015 	stw	r16,0(sp)
 4106970:	24000504 	addi	r16,r4,20
 4106974:	882290ba 	slli	r17,r17,2
 4106978:	dc800215 	stw	r18,8(sp)
 410697c:	dd000415 	stw	r20,16(sp)
 4106980:	8463883a 	add	r17,r16,r17
 4106984:	8cbfff17 	ldw	r18,-4(r17)
 4106988:	dcc00315 	stw	r19,12(sp)
 410698c:	dfc00515 	stw	ra,20(sp)
 4106990:	9009883a 	mov	r4,r18
 4106994:	2827883a 	mov	r19,r5
 4106998:	4105f280 	call	4105f28 <__hi0bits>
 410699c:	00c00804 	movi	r3,32
 41069a0:	1889c83a 	sub	r4,r3,r2
 41069a4:	99000015 	stw	r4,0(r19)
 41069a8:	110002c8 	cmpgei	r4,r2,11
 41069ac:	8d3fff04 	addi	r20,r17,-4
 41069b0:	20002026 	beq	r4,zero,4106a34 <__b2d+0xd4>
 41069b4:	10bffd44 	addi	r2,r2,-11
 41069b8:	85000e2e 	bgeu	r16,r20,41069f4 <__b2d+0x94>
 41069bc:	897ffe17 	ldw	r5,-8(r17)
 41069c0:	10001226 	beq	r2,zero,4106a0c <__b2d+0xac>
 41069c4:	1889c83a 	sub	r4,r3,r2
 41069c8:	90a4983a 	sll	r18,r18,r2
 41069cc:	2906d83a 	srl	r3,r5,r4
 41069d0:	89bffe04 	addi	r6,r17,-8
 41069d4:	2884983a 	sll	r2,r5,r2
 41069d8:	90e4b03a 	or	r18,r18,r3
 41069dc:	90cffc34 	orhi	r3,r18,16368
 41069e0:	81800c2e 	bgeu	r16,r6,4106a14 <__b2d+0xb4>
 41069e4:	897ffd17 	ldw	r5,-12(r17)
 41069e8:	2908d83a 	srl	r4,r5,r4
 41069ec:	1104b03a 	or	r2,r2,r4
 41069f0:	00000806 	br	4106a14 <__b2d+0xb4>
 41069f4:	10000426 	beq	r2,zero,4106a08 <__b2d+0xa8>
 41069f8:	90a4983a 	sll	r18,r18,r2
 41069fc:	0005883a 	mov	r2,zero
 4106a00:	90cffc34 	orhi	r3,r18,16368
 4106a04:	00000306 	br	4106a14 <__b2d+0xb4>
 4106a08:	000b883a 	mov	r5,zero
 4106a0c:	90cffc34 	orhi	r3,r18,16368
 4106a10:	2805883a 	mov	r2,r5
 4106a14:	dfc00517 	ldw	ra,20(sp)
 4106a18:	dd000417 	ldw	r20,16(sp)
 4106a1c:	dcc00317 	ldw	r19,12(sp)
 4106a20:	dc800217 	ldw	r18,8(sp)
 4106a24:	dc400117 	ldw	r17,4(sp)
 4106a28:	dc000017 	ldw	r16,0(sp)
 4106a2c:	dec00604 	addi	sp,sp,24
 4106a30:	f800283a 	ret
 4106a34:	014002c4 	movi	r5,11
 4106a38:	2889c83a 	sub	r4,r5,r2
 4106a3c:	9106d83a 	srl	r3,r18,r4
 4106a40:	18cffc34 	orhi	r3,r3,16368
 4106a44:	85000536 	bltu	r16,r20,4106a5c <__b2d+0xfc>
 4106a48:	000b883a 	mov	r5,zero
 4106a4c:	10800544 	addi	r2,r2,21
 4106a50:	9084983a 	sll	r2,r18,r2
 4106a54:	1144b03a 	or	r2,r2,r5
 4106a58:	003fee06 	br	4106a14 <__b2d+0xb4>
 4106a5c:	897ffe17 	ldw	r5,-8(r17)
 4106a60:	290ad83a 	srl	r5,r5,r4
 4106a64:	003ff906 	br	4106a4c <__b2d+0xec>

04106a68 <__d2b>:
 4106a68:	defff804 	addi	sp,sp,-32
 4106a6c:	dd000615 	stw	r20,24(sp)
 4106a70:	2829883a 	mov	r20,r5
 4106a74:	01400044 	movi	r5,1
 4106a78:	dcc00515 	stw	r19,20(sp)
 4106a7c:	dc000215 	stw	r16,8(sp)
 4106a80:	dfc00715 	stw	ra,28(sp)
 4106a84:	dc800415 	stw	r18,16(sp)
 4106a88:	dc400315 	stw	r17,12(sp)
 4106a8c:	3021883a 	mov	r16,r6
 4106a90:	3827883a 	mov	r19,r7
 4106a94:	4105bcc0 	call	4105bcc <_Balloc>
 4106a98:	10004526 	beq	r2,zero,4106bb0 <__d2b+0x148>
 4106a9c:	8024d53a 	srli	r18,r16,20
 4106aa0:	01800434 	movhi	r6,16
 4106aa4:	31bfffc4 	addi	r6,r6,-1
 4106aa8:	9481ffcc 	andi	r18,r18,2047
 4106aac:	1023883a 	mov	r17,r2
 4106ab0:	81a0703a 	and	r16,r16,r6
 4106ab4:	90000126 	beq	r18,zero,4106abc <__d2b+0x54>
 4106ab8:	84000434 	orhi	r16,r16,16
 4106abc:	dc000115 	stw	r16,4(sp)
 4106ac0:	a0002226 	beq	r20,zero,4106b4c <__d2b+0xe4>
 4106ac4:	d809883a 	mov	r4,sp
 4106ac8:	dd000015 	stw	r20,0(sp)
 4106acc:	4105f8c0 	call	4105f8c <__lo0bits>
 4106ad0:	d8c00117 	ldw	r3,4(sp)
 4106ad4:	10003326 	beq	r2,zero,4106ba4 <__d2b+0x13c>
 4106ad8:	01000804 	movi	r4,32
 4106adc:	2089c83a 	sub	r4,r4,r2
 4106ae0:	1908983a 	sll	r4,r3,r4
 4106ae4:	d9400017 	ldw	r5,0(sp)
 4106ae8:	1886d83a 	srl	r3,r3,r2
 4106aec:	2148b03a 	or	r4,r4,r5
 4106af0:	89000515 	stw	r4,20(r17)
 4106af4:	d8c00115 	stw	r3,4(sp)
 4106af8:	88c00615 	stw	r3,24(r17)
 4106afc:	1800271e 	bne	r3,zero,4106b9c <__d2b+0x134>
 4106b00:	04000044 	movi	r16,1
 4106b04:	8c000415 	stw	r16,16(r17)
 4106b08:	90001926 	beq	r18,zero,4106b70 <__d2b+0x108>
 4106b0c:	00c00d44 	movi	r3,53
 4106b10:	94bef344 	addi	r18,r18,-1075
 4106b14:	90a5883a 	add	r18,r18,r2
 4106b18:	1885c83a 	sub	r2,r3,r2
 4106b1c:	d8c00817 	ldw	r3,32(sp)
 4106b20:	9c800015 	stw	r18,0(r19)
 4106b24:	18800015 	stw	r2,0(r3)
 4106b28:	8805883a 	mov	r2,r17
 4106b2c:	dfc00717 	ldw	ra,28(sp)
 4106b30:	dd000617 	ldw	r20,24(sp)
 4106b34:	dcc00517 	ldw	r19,20(sp)
 4106b38:	dc800417 	ldw	r18,16(sp)
 4106b3c:	dc400317 	ldw	r17,12(sp)
 4106b40:	dc000217 	ldw	r16,8(sp)
 4106b44:	dec00804 	addi	sp,sp,32
 4106b48:	f800283a 	ret
 4106b4c:	d9000104 	addi	r4,sp,4
 4106b50:	4105f8c0 	call	4105f8c <__lo0bits>
 4106b54:	00c00044 	movi	r3,1
 4106b58:	88c00415 	stw	r3,16(r17)
 4106b5c:	d8c00117 	ldw	r3,4(sp)
 4106b60:	10800804 	addi	r2,r2,32
 4106b64:	04000044 	movi	r16,1
 4106b68:	88c00515 	stw	r3,20(r17)
 4106b6c:	903fe71e 	bne	r18,zero,4106b0c <__d2b+0xa4>
 4106b70:	800690ba 	slli	r3,r16,2
 4106b74:	10bef384 	addi	r2,r2,-1074
 4106b78:	98800015 	stw	r2,0(r19)
 4106b7c:	88c5883a 	add	r2,r17,r3
 4106b80:	11000417 	ldw	r4,16(r2)
 4106b84:	8020917a 	slli	r16,r16,5
 4106b88:	4105f280 	call	4105f28 <__hi0bits>
 4106b8c:	80a1c83a 	sub	r16,r16,r2
 4106b90:	d8800817 	ldw	r2,32(sp)
 4106b94:	14000015 	stw	r16,0(r2)
 4106b98:	003fe306 	br	4106b28 <__d2b+0xc0>
 4106b9c:	04000084 	movi	r16,2
 4106ba0:	003fd806 	br	4106b04 <__d2b+0x9c>
 4106ba4:	d9000017 	ldw	r4,0(sp)
 4106ba8:	89000515 	stw	r4,20(r17)
 4106bac:	003fd206 	br	4106af8 <__d2b+0x90>
 4106bb0:	01c10474 	movhi	r7,1041
 4106bb4:	01010474 	movhi	r4,1041
 4106bb8:	39c33804 	addi	r7,r7,3296
 4106bbc:	000d883a 	mov	r6,zero
 4106bc0:	0140c284 	movi	r5,778
 4106bc4:	21034d04 	addi	r4,r4,3380
 4106bc8:	41085d40 	call	41085d4 <__assert_func>

04106bcc <__ratio>:
 4106bcc:	defff904 	addi	sp,sp,-28
 4106bd0:	dc400315 	stw	r17,12(sp)
 4106bd4:	2823883a 	mov	r17,r5
 4106bd8:	d80b883a 	mov	r5,sp
 4106bdc:	dfc00615 	stw	ra,24(sp)
 4106be0:	dcc00515 	stw	r19,20(sp)
 4106be4:	dc800415 	stw	r18,16(sp)
 4106be8:	2027883a 	mov	r19,r4
 4106bec:	dc000215 	stw	r16,8(sp)
 4106bf0:	41069600 	call	4106960 <__b2d>
 4106bf4:	d9400104 	addi	r5,sp,4
 4106bf8:	8809883a 	mov	r4,r17
 4106bfc:	1025883a 	mov	r18,r2
 4106c00:	1821883a 	mov	r16,r3
 4106c04:	41069600 	call	4106960 <__b2d>
 4106c08:	89000417 	ldw	r4,16(r17)
 4106c0c:	9a000417 	ldw	r8,16(r19)
 4106c10:	d9400117 	ldw	r5,4(sp)
 4106c14:	100d883a 	mov	r6,r2
 4106c18:	4111c83a 	sub	r8,r8,r4
 4106c1c:	d9000017 	ldw	r4,0(sp)
 4106c20:	4010917a 	slli	r8,r8,5
 4106c24:	180f883a 	mov	r7,r3
 4106c28:	2149c83a 	sub	r4,r4,r5
 4106c2c:	4111883a 	add	r8,r8,r4
 4106c30:	02000c0e 	bge	zero,r8,4106c64 <__ratio+0x98>
 4106c34:	4010953a 	slli	r8,r8,20
 4106c38:	4421883a 	add	r16,r8,r16
 4106c3c:	9009883a 	mov	r4,r18
 4106c40:	800b883a 	mov	r5,r16
 4106c44:	410b7d80 	call	410b7d8 <__divdf3>
 4106c48:	dfc00617 	ldw	ra,24(sp)
 4106c4c:	dcc00517 	ldw	r19,20(sp)
 4106c50:	dc800417 	ldw	r18,16(sp)
 4106c54:	dc400317 	ldw	r17,12(sp)
 4106c58:	dc000217 	ldw	r16,8(sp)
 4106c5c:	dec00704 	addi	sp,sp,28
 4106c60:	f800283a 	ret
 4106c64:	4010953a 	slli	r8,r8,20
 4106c68:	1a0fc83a 	sub	r7,r3,r8
 4106c6c:	003ff306 	br	4106c3c <__ratio+0x70>

04106c70 <_mprec_log10>:
 4106c70:	defffe04 	addi	sp,sp,-8
 4106c74:	dc000015 	stw	r16,0(sp)
 4106c78:	dfc00115 	stw	ra,4(sp)
 4106c7c:	20800608 	cmpgei	r2,r4,24
 4106c80:	2021883a 	mov	r16,r4
 4106c84:	10000f26 	beq	r2,zero,4106cc4 <_mprec_log10+0x54>
 4106c88:	0009883a 	mov	r4,zero
 4106c8c:	014ffc34 	movhi	r5,16368
 4106c90:	000d883a 	mov	r6,zero
 4106c94:	01d00934 	movhi	r7,16420
 4106c98:	410c3580 	call	410c358 <__muldf3>
 4106c9c:	843fffc4 	addi	r16,r16,-1
 4106ca0:	1009883a 	mov	r4,r2
 4106ca4:	180b883a 	mov	r5,r3
 4106ca8:	803ff91e 	bne	r16,zero,4106c90 <_mprec_log10+0x20>
 4106cac:	2005883a 	mov	r2,r4
 4106cb0:	2807883a 	mov	r3,r5
 4106cb4:	dfc00117 	ldw	ra,4(sp)
 4106cb8:	dc000017 	ldw	r16,0(sp)
 4106cbc:	dec00204 	addi	sp,sp,8
 4106cc0:	f800283a 	ret
 4106cc4:	202090fa 	slli	r16,r4,3
 4106cc8:	00810474 	movhi	r2,1041
 4106ccc:	10837404 	addi	r2,r2,3536
 4106cd0:	1421883a 	add	r16,r2,r16
 4106cd4:	81000017 	ldw	r4,0(r16)
 4106cd8:	81400117 	ldw	r5,4(r16)
 4106cdc:	003ff306 	br	4106cac <_mprec_log10+0x3c>

04106ce0 <__copybits>:
 4106ce0:	297fffc4 	addi	r5,r5,-1
 4106ce4:	280fd17a 	srai	r7,r5,5
 4106ce8:	31400417 	ldw	r5,16(r6)
 4106cec:	30800504 	addi	r2,r6,20
 4106cf0:	39c00044 	addi	r7,r7,1
 4106cf4:	280a90ba 	slli	r5,r5,2
 4106cf8:	380e90ba 	slli	r7,r7,2
 4106cfc:	114b883a 	add	r5,r2,r5
 4106d00:	21cf883a 	add	r7,r4,r7
 4106d04:	11400c2e 	bgeu	r2,r5,4106d38 <__copybits+0x58>
 4106d08:	2007883a 	mov	r3,r4
 4106d0c:	12000017 	ldw	r8,0(r2)
 4106d10:	10800104 	addi	r2,r2,4
 4106d14:	18c00104 	addi	r3,r3,4
 4106d18:	1a3fff15 	stw	r8,-4(r3)
 4106d1c:	117ffb36 	bltu	r2,r5,4106d0c <__copybits+0x2c>
 4106d20:	2985c83a 	sub	r2,r5,r6
 4106d24:	10bffac4 	addi	r2,r2,-21
 4106d28:	1004d0ba 	srli	r2,r2,2
 4106d2c:	10800044 	addi	r2,r2,1
 4106d30:	100490ba 	slli	r2,r2,2
 4106d34:	2089883a 	add	r4,r4,r2
 4106d38:	21c0072e 	bgeu	r4,r7,4106d58 <__copybits+0x78>
 4106d3c:	39bfffc4 	addi	r6,r7,-1
 4106d40:	310dc83a 	sub	r6,r6,r4
 4106d44:	300cd0ba 	srli	r6,r6,2
 4106d48:	000b883a 	mov	r5,zero
 4106d4c:	31800044 	addi	r6,r6,1
 4106d50:	300c90ba 	slli	r6,r6,2
 4106d54:	4105adc1 	jmpi	4105adc <memset>
 4106d58:	f800283a 	ret

04106d5c <__any_on>:
 4106d5c:	20c00417 	ldw	r3,16(r4)
 4106d60:	280dd17a 	srai	r6,r5,5
 4106d64:	21000504 	addi	r4,r4,20
 4106d68:	1980080e 	bge	r3,r6,4106d8c <__any_on+0x30>
 4106d6c:	180490ba 	slli	r2,r3,2
 4106d70:	2085883a 	add	r2,r4,r2
 4106d74:	20800f2e 	bgeu	r4,r2,4106db4 <__any_on+0x58>
 4106d78:	10ffff17 	ldw	r3,-4(r2)
 4106d7c:	10bfff04 	addi	r2,r2,-4
 4106d80:	183ffc26 	beq	r3,zero,4106d74 <__any_on+0x18>
 4106d84:	00800044 	movi	r2,1
 4106d88:	f800283a 	ret
 4106d8c:	300490ba 	slli	r2,r6,2
 4106d90:	2085883a 	add	r2,r4,r2
 4106d94:	30fff70e 	bge	r6,r3,4106d74 <__any_on+0x18>
 4106d98:	294007cc 	andi	r5,r5,31
 4106d9c:	283ff526 	beq	r5,zero,4106d74 <__any_on+0x18>
 4106da0:	11800017 	ldw	r6,0(r2)
 4106da4:	3146d83a 	srl	r3,r6,r5
 4106da8:	194a983a 	sll	r5,r3,r5
 4106dac:	317ff51e 	bne	r6,r5,4106d84 <__any_on+0x28>
 4106db0:	003ff006 	br	4106d74 <__any_on+0x18>
 4106db4:	0005883a 	mov	r2,zero
 4106db8:	f800283a 	ret

04106dbc <_sbrk_r>:
 4106dbc:	defffe04 	addi	sp,sp,-8
 4106dc0:	dc000015 	stw	r16,0(sp)
 4106dc4:	00810474 	movhi	r2,1041
 4106dc8:	2021883a 	mov	r16,r4
 4106dcc:	2809883a 	mov	r4,r5
 4106dd0:	dfc00115 	stw	ra,4(sp)
 4106dd4:	10131f15 	stw	zero,19580(r2)
 4106dd8:	410df900 	call	410df90 <sbrk>
 4106ddc:	10ffffd8 	cmpnei	r3,r2,-1
 4106de0:	18000426 	beq	r3,zero,4106df4 <_sbrk_r+0x38>
 4106de4:	dfc00117 	ldw	ra,4(sp)
 4106de8:	dc000017 	ldw	r16,0(sp)
 4106dec:	dec00204 	addi	sp,sp,8
 4106df0:	f800283a 	ret
 4106df4:	00c10474 	movhi	r3,1041
 4106df8:	18d31f17 	ldw	r3,19580(r3)
 4106dfc:	183ff926 	beq	r3,zero,4106de4 <_sbrk_r+0x28>
 4106e00:	80c00015 	stw	r3,0(r16)
 4106e04:	dfc00117 	ldw	ra,4(sp)
 4106e08:	dc000017 	ldw	r16,0(sp)
 4106e0c:	dec00204 	addi	sp,sp,8
 4106e10:	f800283a 	ret

04106e14 <__sread>:
 4106e14:	defffe04 	addi	sp,sp,-8
 4106e18:	dc000015 	stw	r16,0(sp)
 4106e1c:	2821883a 	mov	r16,r5
 4106e20:	2940038f 	ldh	r5,14(r5)
 4106e24:	dfc00115 	stw	ra,4(sp)
 4106e28:	410935c0 	call	410935c <_read_r>
 4106e2c:	10000716 	blt	r2,zero,4106e4c <__sread+0x38>
 4106e30:	80c01417 	ldw	r3,80(r16)
 4106e34:	1887883a 	add	r3,r3,r2
 4106e38:	80c01415 	stw	r3,80(r16)
 4106e3c:	dfc00117 	ldw	ra,4(sp)
 4106e40:	dc000017 	ldw	r16,0(sp)
 4106e44:	dec00204 	addi	sp,sp,8
 4106e48:	f800283a 	ret
 4106e4c:	80c0030b 	ldhu	r3,12(r16)
 4106e50:	18fbffcc 	andi	r3,r3,61439
 4106e54:	80c0030d 	sth	r3,12(r16)
 4106e58:	dfc00117 	ldw	ra,4(sp)
 4106e5c:	dc000017 	ldw	r16,0(sp)
 4106e60:	dec00204 	addi	sp,sp,8
 4106e64:	f800283a 	ret

04106e68 <__seofread>:
 4106e68:	0005883a 	mov	r2,zero
 4106e6c:	f800283a 	ret

04106e70 <__swrite>:
 4106e70:	2880030b 	ldhu	r2,12(r5)
 4106e74:	defffb04 	addi	sp,sp,-20
 4106e78:	dcc00315 	stw	r19,12(sp)
 4106e7c:	dc800215 	stw	r18,8(sp)
 4106e80:	dc400115 	stw	r17,4(sp)
 4106e84:	dc000015 	stw	r16,0(sp)
 4106e88:	dfc00415 	stw	ra,16(sp)
 4106e8c:	10c0400c 	andi	r3,r2,256
 4106e90:	2821883a 	mov	r16,r5
 4106e94:	2023883a 	mov	r17,r4
 4106e98:	2940038f 	ldh	r5,14(r5)
 4106e9c:	3025883a 	mov	r18,r6
 4106ea0:	3827883a 	mov	r19,r7
 4106ea4:	18000c1e 	bne	r3,zero,4106ed8 <__swrite+0x68>
 4106ea8:	10bbffcc 	andi	r2,r2,61439
 4106eac:	980f883a 	mov	r7,r19
 4106eb0:	900d883a 	mov	r6,r18
 4106eb4:	8809883a 	mov	r4,r17
 4106eb8:	8080030d 	sth	r2,12(r16)
 4106ebc:	dfc00417 	ldw	ra,16(sp)
 4106ec0:	dcc00317 	ldw	r19,12(sp)
 4106ec4:	dc800217 	ldw	r18,8(sp)
 4106ec8:	dc400117 	ldw	r17,4(sp)
 4106ecc:	dc000017 	ldw	r16,0(sp)
 4106ed0:	dec00504 	addi	sp,sp,20
 4106ed4:	41085181 	jmpi	4108518 <_write_r>
 4106ed8:	01c00084 	movi	r7,2
 4106edc:	000d883a 	mov	r6,zero
 4106ee0:	410917c0 	call	410917c <_lseek_r>
 4106ee4:	8080030b 	ldhu	r2,12(r16)
 4106ee8:	8140038f 	ldh	r5,14(r16)
 4106eec:	003fee06 	br	4106ea8 <__swrite+0x38>

04106ef0 <__sseek>:
 4106ef0:	defffe04 	addi	sp,sp,-8
 4106ef4:	dc000015 	stw	r16,0(sp)
 4106ef8:	2821883a 	mov	r16,r5
 4106efc:	2940038f 	ldh	r5,14(r5)
 4106f00:	dfc00115 	stw	ra,4(sp)
 4106f04:	410917c0 	call	410917c <_lseek_r>
 4106f08:	10ffffd8 	cmpnei	r3,r2,-1
 4106f0c:	18000826 	beq	r3,zero,4106f30 <__sseek+0x40>
 4106f10:	80c0030b 	ldhu	r3,12(r16)
 4106f14:	80801415 	stw	r2,80(r16)
 4106f18:	18c40014 	ori	r3,r3,4096
 4106f1c:	80c0030d 	sth	r3,12(r16)
 4106f20:	dfc00117 	ldw	ra,4(sp)
 4106f24:	dc000017 	ldw	r16,0(sp)
 4106f28:	dec00204 	addi	sp,sp,8
 4106f2c:	f800283a 	ret
 4106f30:	80c0030b 	ldhu	r3,12(r16)
 4106f34:	18fbffcc 	andi	r3,r3,61439
 4106f38:	80c0030d 	sth	r3,12(r16)
 4106f3c:	dfc00117 	ldw	ra,4(sp)
 4106f40:	dc000017 	ldw	r16,0(sp)
 4106f44:	dec00204 	addi	sp,sp,8
 4106f48:	f800283a 	ret

04106f4c <__sclose>:
 4106f4c:	2940038f 	ldh	r5,14(r5)
 4106f50:	410857c1 	jmpi	410857c <_close_r>

04106f54 <strlen>:
 4106f54:	208000cc 	andi	r2,r4,3
 4106f58:	10000926 	beq	r2,zero,4106f80 <strlen+0x2c>
 4106f5c:	2005883a 	mov	r2,r4
 4106f60:	00000306 	br	4106f70 <strlen+0x1c>
 4106f64:	10800044 	addi	r2,r2,1
 4106f68:	10c000cc 	andi	r3,r2,3
 4106f6c:	18000526 	beq	r3,zero,4106f84 <strlen+0x30>
 4106f70:	10c00007 	ldb	r3,0(r2)
 4106f74:	183ffb1e 	bne	r3,zero,4106f64 <strlen+0x10>
 4106f78:	1105c83a 	sub	r2,r2,r4
 4106f7c:	f800283a 	ret
 4106f80:	2005883a 	mov	r2,r4
 4106f84:	11400017 	ldw	r5,0(r2)
 4106f88:	01ffbff4 	movhi	r7,65279
 4106f8c:	39ffbfc4 	addi	r7,r7,-257
 4106f90:	29c7883a 	add	r3,r5,r7
 4106f94:	01a02074 	movhi	r6,32897
 4106f98:	014a303a 	nor	r5,zero,r5
 4106f9c:	1946703a 	and	r3,r3,r5
 4106fa0:	31a02004 	addi	r6,r6,-32640
 4106fa4:	1986703a 	and	r3,r3,r6
 4106fa8:	1800071e 	bne	r3,zero,4106fc8 <strlen+0x74>
 4106fac:	11400117 	ldw	r5,4(r2)
 4106fb0:	10800104 	addi	r2,r2,4
 4106fb4:	29c7883a 	add	r3,r5,r7
 4106fb8:	014a303a 	nor	r5,zero,r5
 4106fbc:	1946703a 	and	r3,r3,r5
 4106fc0:	1986703a 	and	r3,r3,r6
 4106fc4:	183ff926 	beq	r3,zero,4106fac <strlen+0x58>
 4106fc8:	10c00007 	ldb	r3,0(r2)
 4106fcc:	183fea26 	beq	r3,zero,4106f78 <strlen+0x24>
 4106fd0:	10c00047 	ldb	r3,1(r2)
 4106fd4:	10800044 	addi	r2,r2,1
 4106fd8:	183fe726 	beq	r3,zero,4106f78 <strlen+0x24>
 4106fdc:	10c00047 	ldb	r3,1(r2)
 4106fe0:	10800044 	addi	r2,r2,1
 4106fe4:	183ffa1e 	bne	r3,zero,4106fd0 <strlen+0x7c>
 4106fe8:	003fe306 	br	4106f78 <strlen+0x24>

04106fec <__sprint_r.part.0>:
 4106fec:	28801917 	ldw	r2,100(r5)
 4106ff0:	defff604 	addi	sp,sp,-40
 4106ff4:	dcc00315 	stw	r19,12(sp)
 4106ff8:	dfc00915 	stw	ra,36(sp)
 4106ffc:	df000815 	stw	fp,32(sp)
 4107000:	ddc00715 	stw	r23,28(sp)
 4107004:	dd800615 	stw	r22,24(sp)
 4107008:	dd400515 	stw	r21,20(sp)
 410700c:	dd000415 	stw	r20,16(sp)
 4107010:	dc800215 	stw	r18,8(sp)
 4107014:	dc400115 	stw	r17,4(sp)
 4107018:	dc000015 	stw	r16,0(sp)
 410701c:	1088000c 	andi	r2,r2,8192
 4107020:	3027883a 	mov	r19,r6
 4107024:	10002c26 	beq	r2,zero,41070d8 <__sprint_r.part.0+0xec>
 4107028:	30800217 	ldw	r2,8(r6)
 410702c:	35000017 	ldw	r20,0(r6)
 4107030:	2821883a 	mov	r16,r5
 4107034:	2023883a 	mov	r17,r4
 4107038:	05bfff04 	movi	r22,-4
 410703c:	10002426 	beq	r2,zero,41070d0 <__sprint_r.part.0+0xe4>
 4107040:	a5400117 	ldw	r21,4(r20)
 4107044:	a5c00017 	ldw	r23,0(r20)
 4107048:	a824d0ba 	srli	r18,r21,2
 410704c:	90001b26 	beq	r18,zero,41070bc <__sprint_r.part.0+0xd0>
 4107050:	0039883a 	mov	fp,zero
 4107054:	00000206 	br	4107060 <__sprint_r.part.0+0x74>
 4107058:	bdc00104 	addi	r23,r23,4
 410705c:	97001626 	beq	r18,fp,41070b8 <__sprint_r.part.0+0xcc>
 4107060:	b9400017 	ldw	r5,0(r23)
 4107064:	800d883a 	mov	r6,r16
 4107068:	8809883a 	mov	r4,r17
 410706c:	4108a6c0 	call	4108a6c <_fputwc_r>
 4107070:	10bfffe0 	cmpeqi	r2,r2,-1
 4107074:	e7000044 	addi	fp,fp,1
 4107078:	103ff726 	beq	r2,zero,4107058 <__sprint_r.part.0+0x6c>
 410707c:	00bfffc4 	movi	r2,-1
 4107080:	98000215 	stw	zero,8(r19)
 4107084:	98000115 	stw	zero,4(r19)
 4107088:	dfc00917 	ldw	ra,36(sp)
 410708c:	df000817 	ldw	fp,32(sp)
 4107090:	ddc00717 	ldw	r23,28(sp)
 4107094:	dd800617 	ldw	r22,24(sp)
 4107098:	dd400517 	ldw	r21,20(sp)
 410709c:	dd000417 	ldw	r20,16(sp)
 41070a0:	dcc00317 	ldw	r19,12(sp)
 41070a4:	dc800217 	ldw	r18,8(sp)
 41070a8:	dc400117 	ldw	r17,4(sp)
 41070ac:	dc000017 	ldw	r16,0(sp)
 41070b0:	dec00a04 	addi	sp,sp,40
 41070b4:	f800283a 	ret
 41070b8:	98800217 	ldw	r2,8(r19)
 41070bc:	adaa703a 	and	r21,r21,r22
 41070c0:	1545c83a 	sub	r2,r2,r21
 41070c4:	98800215 	stw	r2,8(r19)
 41070c8:	a5000204 	addi	r20,r20,8
 41070cc:	103fdc1e 	bne	r2,zero,4107040 <__sprint_r.part.0+0x54>
 41070d0:	0005883a 	mov	r2,zero
 41070d4:	003fea06 	br	4107080 <__sprint_r.part.0+0x94>
 41070d8:	4108b680 	call	4108b68 <__sfvwrite_r>
 41070dc:	003fe806 	br	4107080 <__sprint_r.part.0+0x94>

041070e0 <__sprint_r>:
 41070e0:	30c00217 	ldw	r3,8(r6)
 41070e4:	18000126 	beq	r3,zero,41070ec <__sprint_r+0xc>
 41070e8:	4106fec1 	jmpi	4106fec <__sprint_r.part.0>
 41070ec:	30000115 	stw	zero,4(r6)
 41070f0:	0005883a 	mov	r2,zero
 41070f4:	f800283a 	ret

041070f8 <___vfiprintf_internal_r>:
 41070f8:	deffcf04 	addi	sp,sp,-196
 41070fc:	dd802d15 	stw	r22,180(sp)
 4107100:	dd402c15 	stw	r21,176(sp)
 4107104:	dd002b15 	stw	r20,172(sp)
 4107108:	dfc03015 	stw	ra,192(sp)
 410710c:	df002f15 	stw	fp,188(sp)
 4107110:	ddc02e15 	stw	r23,184(sp)
 4107114:	dcc02a15 	stw	r19,168(sp)
 4107118:	dc802915 	stw	r18,164(sp)
 410711c:	dc402815 	stw	r17,160(sp)
 4107120:	dc002715 	stw	r16,156(sp)
 4107124:	d9c00415 	stw	r7,16(sp)
 4107128:	202d883a 	mov	r22,r4
 410712c:	282b883a 	mov	r21,r5
 4107130:	3029883a 	mov	r20,r6
 4107134:	20000226 	beq	r4,zero,4107140 <___vfiprintf_internal_r+0x48>
 4107138:	20800e17 	ldw	r2,56(r4)
 410713c:	1001bd26 	beq	r2,zero,4107834 <___vfiprintf_internal_r+0x73c>
 4107140:	a880030b 	ldhu	r2,12(r21)
 4107144:	10c8000c 	andi	r3,r2,8192
 4107148:	1800061e 	bne	r3,zero,4107164 <___vfiprintf_internal_r+0x6c>
 410714c:	a8c01917 	ldw	r3,100(r21)
 4107150:	0137ffc4 	movi	r4,-8193
 4107154:	10880014 	ori	r2,r2,8192
 4107158:	1906703a 	and	r3,r3,r4
 410715c:	a880030d 	sth	r2,12(r21)
 4107160:	a8c01915 	stw	r3,100(r21)
 4107164:	10c0020c 	andi	r3,r2,8
 4107168:	18010826 	beq	r3,zero,410758c <___vfiprintf_internal_r+0x494>
 410716c:	a8c00417 	ldw	r3,16(r21)
 4107170:	18010626 	beq	r3,zero,410758c <___vfiprintf_internal_r+0x494>
 4107174:	1080068c 	andi	r2,r2,26
 4107178:	10800298 	cmpnei	r2,r2,10
 410717c:	10010b26 	beq	r2,zero,41075ac <___vfiprintf_internal_r+0x4b4>
 4107180:	dc801704 	addi	r18,sp,92
 4107184:	dc800a15 	stw	r18,40(sp)
 4107188:	d8000c15 	stw	zero,48(sp)
 410718c:	d8000b15 	stw	zero,44(sp)
 4107190:	9021883a 	mov	r16,r18
 4107194:	d8000515 	stw	zero,20(sp)
 4107198:	d8000115 	stw	zero,4(sp)
 410719c:	a0800007 	ldb	r2,0(r20)
 41071a0:	1000e826 	beq	r2,zero,4107544 <___vfiprintf_internal_r+0x44c>
 41071a4:	a023883a 	mov	r17,r20
 41071a8:	00000306 	br	41071b8 <___vfiprintf_internal_r+0xc0>
 41071ac:	88800047 	ldb	r2,1(r17)
 41071b0:	8c400044 	addi	r17,r17,1
 41071b4:	10013326 	beq	r2,zero,4107684 <___vfiprintf_internal_r+0x58c>
 41071b8:	10800958 	cmpnei	r2,r2,37
 41071bc:	103ffb1e 	bne	r2,zero,41071ac <___vfiprintf_internal_r+0xb4>
 41071c0:	8d27c83a 	sub	r19,r17,r20
 41071c4:	8d01311e 	bne	r17,r20,410768c <___vfiprintf_internal_r+0x594>
 41071c8:	88800003 	ldbu	r2,0(r17)
 41071cc:	10803fcc 	andi	r2,r2,255
 41071d0:	1080201c 	xori	r2,r2,128
 41071d4:	10bfe004 	addi	r2,r2,-128
 41071d8:	1000da26 	beq	r2,zero,4107544 <___vfiprintf_internal_r+0x44c>
 41071dc:	88800047 	ldb	r2,1(r17)
 41071e0:	8d000044 	addi	r20,r17,1
 41071e4:	d8000945 	stb	zero,37(sp)
 41071e8:	000b883a 	mov	r5,zero
 41071ec:	000d883a 	mov	r6,zero
 41071f0:	023fffc4 	movi	r8,-1
 41071f4:	0023883a 	mov	r17,zero
 41071f8:	001b883a 	mov	r13,zero
 41071fc:	a5000044 	addi	r20,r20,1
 4107200:	10fff804 	addi	r3,r2,-32
 4107204:	19001668 	cmpgeui	r4,r3,89
 4107208:	20006c1e 	bne	r4,zero,41073bc <___vfiprintf_internal_r+0x2c4>
 410720c:	180690ba 	slli	r3,r3,2
 4107210:	01010434 	movhi	r4,1040
 4107214:	1909883a 	add	r4,r3,r4
 4107218:	20dc8817 	ldw	r3,29216(r4)
 410721c:	1800683a 	jmp	r3
 4107220:	04107b5c 	xori	r16,zero,16877
 4107224:	041073bc 	xorhi	r16,zero,16846
 4107228:	041073bc 	xorhi	r16,zero,16846
 410722c:	04107b50 	cmplti	r16,zero,16877
 4107230:	041073bc 	xorhi	r16,zero,16846
 4107234:	041073bc 	xorhi	r16,zero,16846
 4107238:	041073bc 	xorhi	r16,zero,16846
 410723c:	041073bc 	xorhi	r16,zero,16846
 4107240:	041073bc 	xorhi	r16,zero,16846
 4107244:	041073bc 	xorhi	r16,zero,16846
 4107248:	04107b28 	cmpgeui	r16,zero,16876
 410724c:	04107b18 	cmpnei	r16,zero,16876
 4107250:	041073bc 	xorhi	r16,zero,16846
 4107254:	04107b00 	call	4107b0 <__alt_mem_sdram_controller_0-0x3bef850>
 4107258:	04107ab4 	movhi	r16,16874
 410725c:	041073bc 	xorhi	r16,zero,16846
 4107260:	04107aa8 	cmpgeui	r16,zero,16874
 4107264:	04107384 	movi	r16,16846
 4107268:	04107384 	movi	r16,16846
 410726c:	04107384 	movi	r16,16846
 4107270:	04107384 	movi	r16,16846
 4107274:	04107384 	movi	r16,16846
 4107278:	04107384 	movi	r16,16846
 410727c:	04107384 	movi	r16,16846
 4107280:	04107384 	movi	r16,16846
 4107284:	04107384 	movi	r16,16846
 4107288:	041073bc 	xorhi	r16,zero,16846
 410728c:	041073bc 	xorhi	r16,zero,16846
 4107290:	041073bc 	xorhi	r16,zero,16846
 4107294:	041073bc 	xorhi	r16,zero,16846
 4107298:	041073bc 	xorhi	r16,zero,16846
 410729c:	041073bc 	xorhi	r16,zero,16846
 41072a0:	041073bc 	xorhi	r16,zero,16846
 41072a4:	041073bc 	xorhi	r16,zero,16846
 41072a8:	041073bc 	xorhi	r16,zero,16846
 41072ac:	041073bc 	xorhi	r16,zero,16846
 41072b0:	041079a4 	muli	r16,zero,16870
 41072b4:	041073bc 	xorhi	r16,zero,16846
 41072b8:	041073bc 	xorhi	r16,zero,16846
 41072bc:	041073bc 	xorhi	r16,zero,16846
 41072c0:	041073bc 	xorhi	r16,zero,16846
 41072c4:	041073bc 	xorhi	r16,zero,16846
 41072c8:	041073bc 	xorhi	r16,zero,16846
 41072cc:	041073bc 	xorhi	r16,zero,16846
 41072d0:	041073bc 	xorhi	r16,zero,16846
 41072d4:	041073bc 	xorhi	r16,zero,16846
 41072d8:	041073bc 	xorhi	r16,zero,16846
 41072dc:	0410761c 	xori	r16,zero,16856
 41072e0:	041073bc 	xorhi	r16,zero,16846
 41072e4:	041073bc 	xorhi	r16,zero,16846
 41072e8:	041073bc 	xorhi	r16,zero,16846
 41072ec:	041073bc 	xorhi	r16,zero,16846
 41072f0:	041073bc 	xorhi	r16,zero,16846
 41072f4:	041075f4 	movhi	r16,16855
 41072f8:	041073bc 	xorhi	r16,zero,16846
 41072fc:	041073bc 	xorhi	r16,zero,16846
 4107300:	04107bb0 	cmpltui	r16,zero,16878
 4107304:	041073bc 	xorhi	r16,zero,16846
 4107308:	041073bc 	xorhi	r16,zero,16846
 410730c:	041073bc 	xorhi	r16,zero,16846
 4107310:	041073bc 	xorhi	r16,zero,16846
 4107314:	041073bc 	xorhi	r16,zero,16846
 4107318:	041073bc 	xorhi	r16,zero,16846
 410731c:	041073bc 	xorhi	r16,zero,16846
 4107320:	041073bc 	xorhi	r16,zero,16846
 4107324:	041073bc 	xorhi	r16,zero,16846
 4107328:	041073bc 	xorhi	r16,zero,16846
 410732c:	04107b88 	cmpgei	r16,zero,16878
 4107330:	0410783c 	xorhi	r16,zero,16864
 4107334:	041073bc 	xorhi	r16,zero,16846
 4107338:	041073bc 	xorhi	r16,zero,16846
 410733c:	041073bc 	xorhi	r16,zero,16846
 4107340:	041078b0 	cmpltui	r16,zero,16866
 4107344:	0410783c 	xorhi	r16,zero,16864
 4107348:	041073bc 	xorhi	r16,zero,16846
 410734c:	041073bc 	xorhi	r16,zero,16846
 4107350:	04107c34 	movhi	r16,16880
 4107354:	041073bc 	xorhi	r16,zero,16846
 4107358:	04107bf8 	rdprs	r16,zero,16879
 410735c:	04107620 	cmpeqi	r16,zero,16856
 4107360:	04107968 	cmpgeui	r16,zero,16869
 4107364:	0410795c 	xori	r16,zero,16869
 4107368:	041073bc 	xorhi	r16,zero,16846
 410736c:	04107904 	movi	r16,16868
 4107370:	041073bc 	xorhi	r16,zero,16846
 4107374:	041075f8 	rdprs	r16,zero,16855
 4107378:	041073bc 	xorhi	r16,zero,16846
 410737c:	041073bc 	xorhi	r16,zero,16846
 4107380:	041078bc 	xorhi	r16,zero,16866
 4107384:	0023883a 	mov	r17,zero
 4107388:	113ff404 	addi	r4,r2,-48
 410738c:	880690ba 	slli	r3,r17,2
 4107390:	a0800007 	ldb	r2,0(r20)
 4107394:	a5000044 	addi	r20,r20,1
 4107398:	1c63883a 	add	r17,r3,r17
 410739c:	8c63883a 	add	r17,r17,r17
 41073a0:	2463883a 	add	r17,r4,r17
 41073a4:	113ff404 	addi	r4,r2,-48
 41073a8:	20c002b0 	cmpltui	r3,r4,10
 41073ac:	183ff71e 	bne	r3,zero,410738c <___vfiprintf_internal_r+0x294>
 41073b0:	10fff804 	addi	r3,r2,-32
 41073b4:	19001668 	cmpgeui	r4,r3,89
 41073b8:	203f9426 	beq	r4,zero,410720c <___vfiprintf_internal_r+0x114>
 41073bc:	29403fcc 	andi	r5,r5,255
 41073c0:	2803ed1e 	bne	r5,zero,4108378 <___vfiprintf_internal_r+0x1280>
 41073c4:	10005f26 	beq	r2,zero,4107544 <___vfiprintf_internal_r+0x44c>
 41073c8:	d8800d05 	stb	r2,52(sp)
 41073cc:	d8000945 	stb	zero,37(sp)
 41073d0:	05c00044 	movi	r23,1
 41073d4:	07000044 	movi	fp,1
 41073d8:	dcc00d04 	addi	r19,sp,52
 41073dc:	db400015 	stw	r13,0(sp)
 41073e0:	0011883a 	mov	r8,zero
 41073e4:	d8800017 	ldw	r2,0(sp)
 41073e8:	1380008c 	andi	r14,r2,2
 41073ec:	70000126 	beq	r14,zero,41073f4 <___vfiprintf_internal_r+0x2fc>
 41073f0:	bdc00084 	addi	r23,r23,2
 41073f4:	d8800017 	ldw	r2,0(sp)
 41073f8:	d9000b17 	ldw	r4,44(sp)
 41073fc:	1340210c 	andi	r13,r2,132
 4107400:	21800044 	addi	r6,r4,1
 4107404:	d8800c17 	ldw	r2,48(sp)
 4107408:	300b883a 	mov	r5,r6
 410740c:	6800021e 	bne	r13,zero,4107418 <___vfiprintf_internal_r+0x320>
 4107410:	8dc7c83a 	sub	r3,r17,r23
 4107414:	00c2e216 	blt	zero,r3,4107fa0 <___vfiprintf_internal_r+0xea8>
 4107418:	d8c00947 	ldb	r3,37(sp)
 410741c:	81800204 	addi	r6,r16,8
 4107420:	18000d26 	beq	r3,zero,4107458 <___vfiprintf_internal_r+0x360>
 4107424:	d8c00944 	addi	r3,sp,37
 4107428:	10800044 	addi	r2,r2,1
 410742c:	80c00015 	stw	r3,0(r16)
 4107430:	00c00044 	movi	r3,1
 4107434:	80c00115 	stw	r3,4(r16)
 4107438:	d8800c15 	stw	r2,48(sp)
 410743c:	d9400b15 	stw	r5,44(sp)
 4107440:	28c00208 	cmpgei	r3,r5,8
 4107444:	18029a1e 	bne	r3,zero,4107eb0 <___vfiprintf_internal_r+0xdb8>
 4107448:	2809883a 	mov	r4,r5
 410744c:	3021883a 	mov	r16,r6
 4107450:	29400044 	addi	r5,r5,1
 4107454:	31800204 	addi	r6,r6,8
 4107458:	70001826 	beq	r14,zero,41074bc <___vfiprintf_internal_r+0x3c4>
 410745c:	d8c00984 	addi	r3,sp,38
 4107460:	10800084 	addi	r2,r2,2
 4107464:	80c00015 	stw	r3,0(r16)
 4107468:	00c00084 	movi	r3,2
 410746c:	80c00115 	stw	r3,4(r16)
 4107470:	d8800c15 	stw	r2,48(sp)
 4107474:	d9400b15 	stw	r5,44(sp)
 4107478:	28c00208 	cmpgei	r3,r5,8
 410747c:	1802a426 	beq	r3,zero,4107f10 <___vfiprintf_internal_r+0xe18>
 4107480:	10032226 	beq	r2,zero,410810c <___vfiprintf_internal_r+0x1014>
 4107484:	d9800a04 	addi	r6,sp,40
 4107488:	a80b883a 	mov	r5,r21
 410748c:	b009883a 	mov	r4,r22
 4107490:	da000315 	stw	r8,12(sp)
 4107494:	db400215 	stw	r13,8(sp)
 4107498:	4106fec0 	call	4106fec <__sprint_r.part.0>
 410749c:	10002b1e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 41074a0:	d9000b17 	ldw	r4,44(sp)
 41074a4:	d8800c17 	ldw	r2,48(sp)
 41074a8:	da000317 	ldw	r8,12(sp)
 41074ac:	db400217 	ldw	r13,8(sp)
 41074b0:	d9801904 	addi	r6,sp,100
 41074b4:	21400044 	addi	r5,r4,1
 41074b8:	9021883a 	mov	r16,r18
 41074bc:	6b402018 	cmpnei	r13,r13,128
 41074c0:	6801e526 	beq	r13,zero,4107c58 <___vfiprintf_internal_r+0xb60>
 41074c4:	4711c83a 	sub	r8,r8,fp
 41074c8:	02022416 	blt	zero,r8,4107d5c <___vfiprintf_internal_r+0xc64>
 41074cc:	e085883a 	add	r2,fp,r2
 41074d0:	d9400b15 	stw	r5,44(sp)
 41074d4:	84c00015 	stw	r19,0(r16)
 41074d8:	87000115 	stw	fp,4(r16)
 41074dc:	d8800c15 	stw	r2,48(sp)
 41074e0:	29400210 	cmplti	r5,r5,8
 41074e4:	2800081e 	bne	r5,zero,4107508 <___vfiprintf_internal_r+0x410>
 41074e8:	10009826 	beq	r2,zero,410774c <___vfiprintf_internal_r+0x654>
 41074ec:	d9800a04 	addi	r6,sp,40
 41074f0:	a80b883a 	mov	r5,r21
 41074f4:	b009883a 	mov	r4,r22
 41074f8:	4106fec0 	call	4106fec <__sprint_r.part.0>
 41074fc:	1000131e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 4107500:	d8800c17 	ldw	r2,48(sp)
 4107504:	900d883a 	mov	r6,r18
 4107508:	d8c00017 	ldw	r3,0(sp)
 410750c:	1cc0010c 	andi	r19,r3,4
 4107510:	98000226 	beq	r19,zero,410751c <___vfiprintf_internal_r+0x424>
 4107514:	8de1c83a 	sub	r16,r17,r23
 4107518:	04009316 	blt	zero,r16,4107768 <___vfiprintf_internal_r+0x670>
 410751c:	8dc0010e 	bge	r17,r23,4107524 <___vfiprintf_internal_r+0x42c>
 4107520:	b823883a 	mov	r17,r23
 4107524:	d8c00117 	ldw	r3,4(sp)
 4107528:	1c47883a 	add	r3,r3,r17
 410752c:	d8c00115 	stw	r3,4(sp)
 4107530:	1002551e 	bne	r2,zero,4107e88 <___vfiprintf_internal_r+0xd90>
 4107534:	a0800007 	ldb	r2,0(r20)
 4107538:	d8000b15 	stw	zero,44(sp)
 410753c:	9021883a 	mov	r16,r18
 4107540:	103f181e 	bne	r2,zero,41071a4 <___vfiprintf_internal_r+0xac>
 4107544:	d8800c17 	ldw	r2,48(sp)
 4107548:	10038d1e 	bne	r2,zero,4108380 <___vfiprintf_internal_r+0x1288>
 410754c:	a880030b 	ldhu	r2,12(r21)
 4107550:	1080100c 	andi	r2,r2,64
 4107554:	1003a51e 	bne	r2,zero,41083ec <___vfiprintf_internal_r+0x12f4>
 4107558:	d8800117 	ldw	r2,4(sp)
 410755c:	dfc03017 	ldw	ra,192(sp)
 4107560:	df002f17 	ldw	fp,188(sp)
 4107564:	ddc02e17 	ldw	r23,184(sp)
 4107568:	dd802d17 	ldw	r22,180(sp)
 410756c:	dd402c17 	ldw	r21,176(sp)
 4107570:	dd002b17 	ldw	r20,172(sp)
 4107574:	dcc02a17 	ldw	r19,168(sp)
 4107578:	dc802917 	ldw	r18,164(sp)
 410757c:	dc402817 	ldw	r17,160(sp)
 4107580:	dc002717 	ldw	r16,156(sp)
 4107584:	dec03104 	addi	sp,sp,196
 4107588:	f800283a 	ret
 410758c:	a80b883a 	mov	r5,r21
 4107590:	b009883a 	mov	r4,r22
 4107594:	41027e80 	call	41027e8 <__swsetup_r>
 4107598:	1003941e 	bne	r2,zero,41083ec <___vfiprintf_internal_r+0x12f4>
 410759c:	a880030b 	ldhu	r2,12(r21)
 41075a0:	1080068c 	andi	r2,r2,26
 41075a4:	10800298 	cmpnei	r2,r2,10
 41075a8:	103ef51e 	bne	r2,zero,4107180 <___vfiprintf_internal_r+0x88>
 41075ac:	a880038f 	ldh	r2,14(r21)
 41075b0:	103ef316 	blt	r2,zero,4107180 <___vfiprintf_internal_r+0x88>
 41075b4:	d9c00417 	ldw	r7,16(sp)
 41075b8:	a00d883a 	mov	r6,r20
 41075bc:	a80b883a 	mov	r5,r21
 41075c0:	b009883a 	mov	r4,r22
 41075c4:	dfc03017 	ldw	ra,192(sp)
 41075c8:	df002f17 	ldw	fp,188(sp)
 41075cc:	ddc02e17 	ldw	r23,184(sp)
 41075d0:	dd802d17 	ldw	r22,180(sp)
 41075d4:	dd402c17 	ldw	r21,176(sp)
 41075d8:	dd002b17 	ldw	r20,172(sp)
 41075dc:	dcc02a17 	ldw	r19,168(sp)
 41075e0:	dc802917 	ldw	r18,164(sp)
 41075e4:	dc402817 	ldw	r17,160(sp)
 41075e8:	dc002717 	ldw	r16,156(sp)
 41075ec:	dec03104 	addi	sp,sp,196
 41075f0:	41084581 	jmpi	4108458 <__sbprintf>
 41075f4:	6b400414 	ori	r13,r13,16
 41075f8:	6880080c 	andi	r2,r13,32
 41075fc:	10004726 	beq	r2,zero,410771c <___vfiprintf_internal_r+0x624>
 4107600:	d8c00417 	ldw	r3,16(sp)
 4107604:	00800044 	movi	r2,1
 4107608:	1dc00017 	ldw	r23,0(r3)
 410760c:	1f000117 	ldw	fp,4(r3)
 4107610:	18c00204 	addi	r3,r3,8
 4107614:	d8c00415 	stw	r3,16(sp)
 4107618:	00000906 	br	4107640 <___vfiprintf_internal_r+0x548>
 410761c:	6b400414 	ori	r13,r13,16
 4107620:	6880080c 	andi	r2,r13,32
 4107624:	10003126 	beq	r2,zero,41076ec <___vfiprintf_internal_r+0x5f4>
 4107628:	d8c00417 	ldw	r3,16(sp)
 410762c:	0005883a 	mov	r2,zero
 4107630:	1dc00017 	ldw	r23,0(r3)
 4107634:	1f000117 	ldw	fp,4(r3)
 4107638:	18c00204 	addi	r3,r3,8
 410763c:	d8c00415 	stw	r3,16(sp)
 4107640:	d8000945 	stb	zero,37(sp)
 4107644:	40ffffe0 	cmpeqi	r3,r8,-1
 4107648:	001d883a 	mov	r14,zero
 410764c:	1800f01e 	bne	r3,zero,4107a10 <___vfiprintf_internal_r+0x918>
 4107650:	04ffdfc4 	movi	r19,-129
 4107654:	6cc8703a 	and	r4,r13,r19
 4107658:	bf06b03a 	or	r3,r23,fp
 410765c:	d9000015 	stw	r4,0(sp)
 4107660:	1802301e 	bne	r3,zero,4107f24 <___vfiprintf_internal_r+0xe2c>
 4107664:	4001f31e 	bne	r8,zero,4107e34 <___vfiprintf_internal_r+0xd3c>
 4107668:	10029e1e 	bne	r2,zero,41080e4 <___vfiprintf_internal_r+0xfec>
 410766c:	6f00004c 	andi	fp,r13,1
 4107670:	e002bc26 	beq	fp,zero,4108164 <___vfiprintf_internal_r+0x106c>
 4107674:	00800c04 	movi	r2,48
 4107678:	d88016c5 	stb	r2,91(sp)
 410767c:	dcc016c4 	addi	r19,sp,91
 4107680:	00010006 	br	4107a84 <___vfiprintf_internal_r+0x98c>
 4107684:	8d27c83a 	sub	r19,r17,r20
 4107688:	8d3fae26 	beq	r17,r20,4107544 <___vfiprintf_internal_r+0x44c>
 410768c:	d8c00c17 	ldw	r3,48(sp)
 4107690:	d8800b17 	ldw	r2,44(sp)
 4107694:	85000015 	stw	r20,0(r16)
 4107698:	98c7883a 	add	r3,r19,r3
 410769c:	10800044 	addi	r2,r2,1
 41076a0:	d8800b15 	stw	r2,44(sp)
 41076a4:	84c00115 	stw	r19,4(r16)
 41076a8:	d8c00c15 	stw	r3,48(sp)
 41076ac:	10800208 	cmpgei	r2,r2,8
 41076b0:	1000061e 	bne	r2,zero,41076cc <___vfiprintf_internal_r+0x5d4>
 41076b4:	84000204 	addi	r16,r16,8
 41076b8:	d8c00117 	ldw	r3,4(sp)
 41076bc:	88800003 	ldbu	r2,0(r17)
 41076c0:	1cc7883a 	add	r3,r3,r19
 41076c4:	d8c00115 	stw	r3,4(sp)
 41076c8:	003ec006 	br	41071cc <___vfiprintf_internal_r+0xd4>
 41076cc:	18028126 	beq	r3,zero,41080d4 <___vfiprintf_internal_r+0xfdc>
 41076d0:	d9800a04 	addi	r6,sp,40
 41076d4:	a80b883a 	mov	r5,r21
 41076d8:	b009883a 	mov	r4,r22
 41076dc:	4106fec0 	call	4106fec <__sprint_r.part.0>
 41076e0:	103f9a1e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 41076e4:	9021883a 	mov	r16,r18
 41076e8:	003ff306 	br	41076b8 <___vfiprintf_internal_r+0x5c0>
 41076ec:	d9000417 	ldw	r4,16(sp)
 41076f0:	6880040c 	andi	r2,r13,16
 41076f4:	20c00104 	addi	r3,r4,4
 41076f8:	1002ac1e 	bne	r2,zero,41081ac <___vfiprintf_internal_r+0x10b4>
 41076fc:	6880100c 	andi	r2,r13,64
 4107700:	1002fb26 	beq	r2,zero,41082f0 <___vfiprintf_internal_r+0x11f8>
 4107704:	d8800417 	ldw	r2,16(sp)
 4107708:	0039883a 	mov	fp,zero
 410770c:	d8c00415 	stw	r3,16(sp)
 4107710:	15c0000b 	ldhu	r23,0(r2)
 4107714:	0005883a 	mov	r2,zero
 4107718:	003fc906 	br	4107640 <___vfiprintf_internal_r+0x548>
 410771c:	d9000417 	ldw	r4,16(sp)
 4107720:	6880040c 	andi	r2,r13,16
 4107724:	20c00104 	addi	r3,r4,4
 4107728:	1002af1e 	bne	r2,zero,41081e8 <___vfiprintf_internal_r+0x10f0>
 410772c:	6880100c 	andi	r2,r13,64
 4107730:	1002fb26 	beq	r2,zero,4108320 <___vfiprintf_internal_r+0x1228>
 4107734:	d8800417 	ldw	r2,16(sp)
 4107738:	0039883a 	mov	fp,zero
 410773c:	d8c00415 	stw	r3,16(sp)
 4107740:	15c0000b 	ldhu	r23,0(r2)
 4107744:	00800044 	movi	r2,1
 4107748:	003fbd06 	br	4107640 <___vfiprintf_internal_r+0x548>
 410774c:	d8c00017 	ldw	r3,0(sp)
 4107750:	d8000b15 	stw	zero,44(sp)
 4107754:	1cc0010c 	andi	r19,r3,4
 4107758:	98024c26 	beq	r19,zero,410808c <___vfiprintf_internal_r+0xf94>
 410775c:	8de1c83a 	sub	r16,r17,r23
 4107760:	04024a0e 	bge	zero,r16,410808c <___vfiprintf_internal_r+0xf94>
 4107764:	900d883a 	mov	r6,r18
 4107768:	80c00450 	cmplti	r3,r16,17
 410776c:	d9000b17 	ldw	r4,44(sp)
 4107770:	01c10474 	movhi	r7,1041
 4107774:	18031a1e 	bne	r3,zero,41083e0 <___vfiprintf_internal_r+0x12e8>
 4107778:	39c3aa04 	addi	r7,r7,3752
 410777c:	04c00404 	movi	r19,16
 4107780:	00000606 	br	410779c <___vfiprintf_internal_r+0x6a4>
 4107784:	21400084 	addi	r5,r4,2
 4107788:	31800204 	addi	r6,r6,8
 410778c:	1809883a 	mov	r4,r3
 4107790:	843ffc04 	addi	r16,r16,-16
 4107794:	80c00448 	cmpgei	r3,r16,17
 4107798:	18001726 	beq	r3,zero,41077f8 <___vfiprintf_internal_r+0x700>
 410779c:	20c00044 	addi	r3,r4,1
 41077a0:	10800404 	addi	r2,r2,16
 41077a4:	31c00015 	stw	r7,0(r6)
 41077a8:	34c00115 	stw	r19,4(r6)
 41077ac:	d8800c15 	stw	r2,48(sp)
 41077b0:	d8c00b15 	stw	r3,44(sp)
 41077b4:	19400208 	cmpgei	r5,r3,8
 41077b8:	283ff226 	beq	r5,zero,4107784 <___vfiprintf_internal_r+0x68c>
 41077bc:	d9800a04 	addi	r6,sp,40
 41077c0:	a80b883a 	mov	r5,r21
 41077c4:	b009883a 	mov	r4,r22
 41077c8:	10011f26 	beq	r2,zero,4107c48 <___vfiprintf_internal_r+0xb50>
 41077cc:	d9c00015 	stw	r7,0(sp)
 41077d0:	4106fec0 	call	4106fec <__sprint_r.part.0>
 41077d4:	103f5d1e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 41077d8:	d9000b17 	ldw	r4,44(sp)
 41077dc:	843ffc04 	addi	r16,r16,-16
 41077e0:	80c00448 	cmpgei	r3,r16,17
 41077e4:	d8800c17 	ldw	r2,48(sp)
 41077e8:	d9c00017 	ldw	r7,0(sp)
 41077ec:	900d883a 	mov	r6,r18
 41077f0:	21400044 	addi	r5,r4,1
 41077f4:	183fe91e 	bne	r3,zero,410779c <___vfiprintf_internal_r+0x6a4>
 41077f8:	1405883a 	add	r2,r2,r16
 41077fc:	d9400b15 	stw	r5,44(sp)
 4107800:	31c00015 	stw	r7,0(r6)
 4107804:	34000115 	stw	r16,4(r6)
 4107808:	d8800c15 	stw	r2,48(sp)
 410780c:	29400210 	cmplti	r5,r5,8
 4107810:	283f421e 	bne	r5,zero,410751c <___vfiprintf_internal_r+0x424>
 4107814:	10021d26 	beq	r2,zero,410808c <___vfiprintf_internal_r+0xf94>
 4107818:	d9800a04 	addi	r6,sp,40
 410781c:	a80b883a 	mov	r5,r21
 4107820:	b009883a 	mov	r4,r22
 4107824:	4106fec0 	call	4106fec <__sprint_r.part.0>
 4107828:	103f481e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 410782c:	d8800c17 	ldw	r2,48(sp)
 4107830:	003f3a06 	br	410751c <___vfiprintf_internal_r+0x424>
 4107834:	41049240 	call	4104924 <__sinit>
 4107838:	003e4106 	br	4107140 <___vfiprintf_internal_r+0x48>
 410783c:	29403fcc 	andi	r5,r5,255
 4107840:	2802da1e 	bne	r5,zero,41083ac <___vfiprintf_internal_r+0x12b4>
 4107844:	6880080c 	andi	r2,r13,32
 4107848:	10005b26 	beq	r2,zero,41079b8 <___vfiprintf_internal_r+0x8c0>
 410784c:	d8c00417 	ldw	r3,16(sp)
 4107850:	18800117 	ldw	r2,4(r3)
 4107854:	1dc00017 	ldw	r23,0(r3)
 4107858:	18c00204 	addi	r3,r3,8
 410785c:	d8c00415 	stw	r3,16(sp)
 4107860:	1039883a 	mov	fp,r2
 4107864:	10006016 	blt	r2,zero,41079e8 <___vfiprintf_internal_r+0x8f0>
 4107868:	40bfffd8 	cmpnei	r2,r8,-1
 410786c:	db800943 	ldbu	r14,37(sp)
 4107870:	10000626 	beq	r2,zero,410788c <___vfiprintf_internal_r+0x794>
 4107874:	04ffdfc4 	movi	r19,-129
 4107878:	6cc6703a 	and	r3,r13,r19
 410787c:	bf04b03a 	or	r2,r23,fp
 4107880:	d8c00015 	stw	r3,0(sp)
 4107884:	10021626 	beq	r2,zero,41080e0 <___vfiprintf_internal_r+0xfe8>
 4107888:	db400017 	ldw	r13,0(sp)
 410788c:	e001a71e 	bne	fp,zero,4107f2c <___vfiprintf_internal_r+0xe34>
 4107890:	b88002a8 	cmpgeui	r2,r23,10
 4107894:	1001a51e 	bne	r2,zero,4107f2c <___vfiprintf_internal_r+0xe34>
 4107898:	bdc00c04 	addi	r23,r23,48
 410789c:	ddc016c5 	stb	r23,91(sp)
 41078a0:	db400015 	stw	r13,0(sp)
 41078a4:	07000044 	movi	fp,1
 41078a8:	dcc016c4 	addi	r19,sp,91
 41078ac:	00007506 	br	4107a84 <___vfiprintf_internal_r+0x98c>
 41078b0:	a0800007 	ldb	r2,0(r20)
 41078b4:	6b401014 	ori	r13,r13,64
 41078b8:	003e5006 	br	41071fc <___vfiprintf_internal_r+0x104>
 41078bc:	29403fcc 	andi	r5,r5,255
 41078c0:	2802bc1e 	bne	r5,zero,41083b4 <___vfiprintf_internal_r+0x12bc>
 41078c4:	00c10474 	movhi	r3,1041
 41078c8:	18c31f04 	addi	r3,r3,3196
 41078cc:	d8c00515 	stw	r3,20(sp)
 41078d0:	68c0080c 	andi	r3,r13,32
 41078d4:	1800bd26 	beq	r3,zero,4107bcc <___vfiprintf_internal_r+0xad4>
 41078d8:	d8c00417 	ldw	r3,16(sp)
 41078dc:	1dc00017 	ldw	r23,0(r3)
 41078e0:	1f000117 	ldw	fp,4(r3)
 41078e4:	18c00204 	addi	r3,r3,8
 41078e8:	d8c00415 	stw	r3,16(sp)
 41078ec:	68c0004c 	andi	r3,r13,1
 41078f0:	18000226 	beq	r3,zero,41078fc <___vfiprintf_internal_r+0x804>
 41078f4:	bf06b03a 	or	r3,r23,fp
 41078f8:	1802261e 	bne	r3,zero,4108194 <___vfiprintf_internal_r+0x109c>
 41078fc:	00800084 	movi	r2,2
 4107900:	003f4f06 	br	4107640 <___vfiprintf_internal_r+0x548>
 4107904:	d8800417 	ldw	r2,16(sp)
 4107908:	d8000945 	stb	zero,37(sp)
 410790c:	14c00017 	ldw	r19,0(r2)
 4107910:	10c00104 	addi	r3,r2,4
 4107914:	98026926 	beq	r19,zero,41082bc <___vfiprintf_internal_r+0x11c4>
 4107918:	40bfffe0 	cmpeqi	r2,r8,-1
 410791c:	1002411e 	bne	r2,zero,4108224 <___vfiprintf_internal_r+0x112c>
 4107920:	400d883a 	mov	r6,r8
 4107924:	000b883a 	mov	r5,zero
 4107928:	9809883a 	mov	r4,r19
 410792c:	d8c00315 	stw	r3,12(sp)
 4107930:	db400215 	stw	r13,8(sp)
 4107934:	da000015 	stw	r8,0(sp)
 4107938:	410590c0 	call	410590c <memchr>
 410793c:	da000017 	ldw	r8,0(sp)
 4107940:	db400217 	ldw	r13,8(sp)
 4107944:	d8c00317 	ldw	r3,12(sp)
 4107948:	10029426 	beq	r2,zero,410839c <___vfiprintf_internal_r+0x12a4>
 410794c:	14f9c83a 	sub	fp,r2,r19
 4107950:	e02f883a 	mov	r23,fp
 4107954:	d8c00415 	stw	r3,16(sp)
 4107958:	003ea006 	br	41073dc <___vfiprintf_internal_r+0x2e4>
 410795c:	a0800007 	ldb	r2,0(r20)
 4107960:	6b400814 	ori	r13,r13,32
 4107964:	003e2506 	br	41071fc <___vfiprintf_internal_r+0x104>
 4107968:	d8c00417 	ldw	r3,16(sp)
 410796c:	00800c04 	movi	r2,48
 4107970:	d8800985 	stb	r2,38(sp)
 4107974:	00801e04 	movi	r2,120
 4107978:	01010474 	movhi	r4,1041
 410797c:	d88009c5 	stb	r2,39(sp)
 4107980:	18800104 	addi	r2,r3,4
 4107984:	d8800415 	stw	r2,16(sp)
 4107988:	20831f04 	addi	r2,r4,3196
 410798c:	d8800515 	stw	r2,20(sp)
 4107990:	1dc00017 	ldw	r23,0(r3)
 4107994:	0039883a 	mov	fp,zero
 4107998:	6b400094 	ori	r13,r13,2
 410799c:	00800084 	movi	r2,2
 41079a0:	003f2706 	br	4107640 <___vfiprintf_internal_r+0x548>
 41079a4:	29403fcc 	andi	r5,r5,255
 41079a8:	2802841e 	bne	r5,zero,41083bc <___vfiprintf_internal_r+0x12c4>
 41079ac:	6b400414 	ori	r13,r13,16
 41079b0:	6880080c 	andi	r2,r13,32
 41079b4:	103fa51e 	bne	r2,zero,410784c <___vfiprintf_internal_r+0x754>
 41079b8:	d9000417 	ldw	r4,16(sp)
 41079bc:	6880040c 	andi	r2,r13,16
 41079c0:	20c00104 	addi	r3,r4,4
 41079c4:	1001ee1e 	bne	r2,zero,4108180 <___vfiprintf_internal_r+0x1088>
 41079c8:	6880100c 	andi	r2,r13,64
 41079cc:	10024e26 	beq	r2,zero,4108308 <___vfiprintf_internal_r+0x1210>
 41079d0:	d8800417 	ldw	r2,16(sp)
 41079d4:	d8c00415 	stw	r3,16(sp)
 41079d8:	15c0000f 	ldh	r23,0(r2)
 41079dc:	b839d7fa 	srai	fp,r23,31
 41079e0:	e005883a 	mov	r2,fp
 41079e4:	103fa00e 	bge	r2,zero,4107868 <___vfiprintf_internal_r+0x770>
 41079e8:	b804c03a 	cmpne	r2,r23,zero
 41079ec:	0739c83a 	sub	fp,zero,fp
 41079f0:	e0b9c83a 	sub	fp,fp,r2
 41079f4:	00800b44 	movi	r2,45
 41079f8:	d8800945 	stb	r2,37(sp)
 41079fc:	40ffffe0 	cmpeqi	r3,r8,-1
 4107a00:	05efc83a 	sub	r23,zero,r23
 4107a04:	03800b44 	movi	r14,45
 4107a08:	00800044 	movi	r2,1
 4107a0c:	183f1026 	beq	r3,zero,4107650 <___vfiprintf_internal_r+0x558>
 4107a10:	10c00060 	cmpeqi	r3,r2,1
 4107a14:	183f9d1e 	bne	r3,zero,410788c <___vfiprintf_internal_r+0x794>
 4107a18:	108000a0 	cmpeqi	r2,r2,2
 4107a1c:	10010a1e 	bne	r2,zero,4107e48 <___vfiprintf_internal_r+0xd50>
 4107a20:	9027883a 	mov	r19,r18
 4107a24:	e008977a 	slli	r4,fp,29
 4107a28:	b806d0fa 	srli	r3,r23,3
 4107a2c:	e038d0fa 	srli	fp,fp,3
 4107a30:	b88001cc 	andi	r2,r23,7
 4107a34:	10800c04 	addi	r2,r2,48
 4107a38:	20eeb03a 	or	r23,r4,r3
 4107a3c:	98bfffc5 	stb	r2,-1(r19)
 4107a40:	bf06b03a 	or	r3,r23,fp
 4107a44:	980b883a 	mov	r5,r19
 4107a48:	9cffffc4 	addi	r19,r19,-1
 4107a4c:	183ff51e 	bne	r3,zero,4107a24 <___vfiprintf_internal_r+0x92c>
 4107a50:	68c0004c 	andi	r3,r13,1
 4107a54:	18010926 	beq	r3,zero,4107e7c <___vfiprintf_internal_r+0xd84>
 4107a58:	10803fcc 	andi	r2,r2,255
 4107a5c:	1080201c 	xori	r2,r2,128
 4107a60:	10bfe004 	addi	r2,r2,-128
 4107a64:	10800c18 	cmpnei	r2,r2,48
 4107a68:	10010426 	beq	r2,zero,4107e7c <___vfiprintf_internal_r+0xd84>
 4107a6c:	297fff84 	addi	r5,r5,-2
 4107a70:	00800c04 	movi	r2,48
 4107a74:	98bfffc5 	stb	r2,-1(r19)
 4107a78:	9179c83a 	sub	fp,r18,r5
 4107a7c:	db400015 	stw	r13,0(sp)
 4107a80:	2827883a 	mov	r19,r5
 4107a84:	402f883a 	mov	r23,r8
 4107a88:	4700010e 	bge	r8,fp,4107a90 <___vfiprintf_internal_r+0x998>
 4107a8c:	e02f883a 	mov	r23,fp
 4107a90:	73803fcc 	andi	r14,r14,255
 4107a94:	7380201c 	xori	r14,r14,128
 4107a98:	73bfe004 	addi	r14,r14,-128
 4107a9c:	703e5126 	beq	r14,zero,41073e4 <___vfiprintf_internal_r+0x2ec>
 4107aa0:	bdc00044 	addi	r23,r23,1
 4107aa4:	003e4f06 	br	41073e4 <___vfiprintf_internal_r+0x2ec>
 4107aa8:	a0800007 	ldb	r2,0(r20)
 4107aac:	6b402014 	ori	r13,r13,128
 4107ab0:	003dd206 	br	41071fc <___vfiprintf_internal_r+0x104>
 4107ab4:	a0800007 	ldb	r2,0(r20)
 4107ab8:	a0c00044 	addi	r3,r20,1
 4107abc:	11000aa0 	cmpeqi	r4,r2,42
 4107ac0:	2002521e 	bne	r4,zero,410840c <___vfiprintf_internal_r+0x1314>
 4107ac4:	113ff404 	addi	r4,r2,-48
 4107ac8:	21c002b0 	cmpltui	r7,r4,10
 4107acc:	1829883a 	mov	r20,r3
 4107ad0:	0011883a 	mov	r8,zero
 4107ad4:	383dca26 	beq	r7,zero,4107200 <___vfiprintf_internal_r+0x108>
 4107ad8:	400690ba 	slli	r3,r8,2
 4107adc:	a0800007 	ldb	r2,0(r20)
 4107ae0:	a5000044 	addi	r20,r20,1
 4107ae4:	1a11883a 	add	r8,r3,r8
 4107ae8:	4211883a 	add	r8,r8,r8
 4107aec:	4111883a 	add	r8,r8,r4
 4107af0:	113ff404 	addi	r4,r2,-48
 4107af4:	20c002b0 	cmpltui	r3,r4,10
 4107af8:	183ff71e 	bne	r3,zero,4107ad8 <___vfiprintf_internal_r+0x9e0>
 4107afc:	003dc006 	br	4107200 <___vfiprintf_internal_r+0x108>
 4107b00:	a0800003 	ldbu	r2,0(r20)
 4107b04:	10803fcc 	andi	r2,r2,255
 4107b08:	1080201c 	xori	r2,r2,128
 4107b0c:	6b400114 	ori	r13,r13,4
 4107b10:	10bfe004 	addi	r2,r2,-128
 4107b14:	003db906 	br	41071fc <___vfiprintf_internal_r+0x104>
 4107b18:	a0800007 	ldb	r2,0(r20)
 4107b1c:	01400044 	movi	r5,1
 4107b20:	01800ac4 	movi	r6,43
 4107b24:	003db506 	br	41071fc <___vfiprintf_internal_r+0x104>
 4107b28:	d8c00417 	ldw	r3,16(sp)
 4107b2c:	a0800003 	ldbu	r2,0(r20)
 4107b30:	1c400017 	ldw	r17,0(r3)
 4107b34:	18c00104 	addi	r3,r3,4
 4107b38:	8801b716 	blt	r17,zero,4108218 <___vfiprintf_internal_r+0x1120>
 4107b3c:	d8c00415 	stw	r3,16(sp)
 4107b40:	10803fcc 	andi	r2,r2,255
 4107b44:	1080201c 	xori	r2,r2,128
 4107b48:	10bfe004 	addi	r2,r2,-128
 4107b4c:	003dab06 	br	41071fc <___vfiprintf_internal_r+0x104>
 4107b50:	a0800007 	ldb	r2,0(r20)
 4107b54:	6b400054 	ori	r13,r13,1
 4107b58:	003da806 	br	41071fc <___vfiprintf_internal_r+0x104>
 4107b5c:	30c03fcc 	andi	r3,r6,255
 4107b60:	18c0201c 	xori	r3,r3,128
 4107b64:	18ffe004 	addi	r3,r3,-128
 4107b68:	a0800003 	ldbu	r2,0(r20)
 4107b6c:	183ff41e 	bne	r3,zero,4107b40 <___vfiprintf_internal_r+0xa48>
 4107b70:	10803fcc 	andi	r2,r2,255
 4107b74:	1080201c 	xori	r2,r2,128
 4107b78:	01400044 	movi	r5,1
 4107b7c:	01800804 	movi	r6,32
 4107b80:	10bfe004 	addi	r2,r2,-128
 4107b84:	003d9d06 	br	41071fc <___vfiprintf_internal_r+0x104>
 4107b88:	d8c00417 	ldw	r3,16(sp)
 4107b8c:	d8000945 	stb	zero,37(sp)
 4107b90:	05c00044 	movi	r23,1
 4107b94:	18800017 	ldw	r2,0(r3)
 4107b98:	18c00104 	addi	r3,r3,4
 4107b9c:	d8c00415 	stw	r3,16(sp)
 4107ba0:	d8800d05 	stb	r2,52(sp)
 4107ba4:	07000044 	movi	fp,1
 4107ba8:	dcc00d04 	addi	r19,sp,52
 4107bac:	003e0b06 	br	41073dc <___vfiprintf_internal_r+0x2e4>
 4107bb0:	29403fcc 	andi	r5,r5,255
 4107bb4:	2802061e 	bne	r5,zero,41083d0 <___vfiprintf_internal_r+0x12d8>
 4107bb8:	00c10474 	movhi	r3,1041
 4107bbc:	18c32404 	addi	r3,r3,3216
 4107bc0:	d8c00515 	stw	r3,20(sp)
 4107bc4:	68c0080c 	andi	r3,r13,32
 4107bc8:	183f431e 	bne	r3,zero,41078d8 <___vfiprintf_internal_r+0x7e0>
 4107bcc:	d9400417 	ldw	r5,16(sp)
 4107bd0:	68c0040c 	andi	r3,r13,16
 4107bd4:	29000104 	addi	r4,r5,4
 4107bd8:	18017f1e 	bne	r3,zero,41081d8 <___vfiprintf_internal_r+0x10e0>
 4107bdc:	68c0100c 	andi	r3,r13,64
 4107be0:	1801be26 	beq	r3,zero,41082dc <___vfiprintf_internal_r+0x11e4>
 4107be4:	d8c00417 	ldw	r3,16(sp)
 4107be8:	0039883a 	mov	fp,zero
 4107bec:	d9000415 	stw	r4,16(sp)
 4107bf0:	1dc0000b 	ldhu	r23,0(r3)
 4107bf4:	003f3d06 	br	41078ec <___vfiprintf_internal_r+0x7f4>
 4107bf8:	29403fcc 	andi	r5,r5,255
 4107bfc:	2801f61e 	bne	r5,zero,41083d8 <___vfiprintf_internal_r+0x12e0>
 4107c00:	d9000417 	ldw	r4,16(sp)
 4107c04:	6880080c 	andi	r2,r13,32
 4107c08:	20c00017 	ldw	r3,0(r4)
 4107c0c:	21000104 	addi	r4,r4,4
 4107c10:	10016b1e 	bne	r2,zero,41081c0 <___vfiprintf_internal_r+0x10c8>
 4107c14:	6880040c 	andi	r2,r13,16
 4107c18:	1001951e 	bne	r2,zero,4108270 <___vfiprintf_internal_r+0x1178>
 4107c1c:	6b40100c 	andi	r13,r13,64
 4107c20:	68019326 	beq	r13,zero,4108270 <___vfiprintf_internal_r+0x1178>
 4107c24:	d8800117 	ldw	r2,4(sp)
 4107c28:	d9000415 	stw	r4,16(sp)
 4107c2c:	1880000d 	sth	r2,0(r3)
 4107c30:	003d5a06 	br	410719c <___vfiprintf_internal_r+0xa4>
 4107c34:	a0800007 	ldb	r2,0(r20)
 4107c38:	10c01b18 	cmpnei	r3,r2,108
 4107c3c:	18019826 	beq	r3,zero,41082a0 <___vfiprintf_internal_r+0x11a8>
 4107c40:	6b400414 	ori	r13,r13,16
 4107c44:	003d6d06 	br	41071fc <___vfiprintf_internal_r+0x104>
 4107c48:	01400044 	movi	r5,1
 4107c4c:	0009883a 	mov	r4,zero
 4107c50:	900d883a 	mov	r6,r18
 4107c54:	003ece06 	br	4107790 <___vfiprintf_internal_r+0x698>
 4107c58:	8dc7c83a 	sub	r3,r17,r23
 4107c5c:	00fe190e 	bge	zero,r3,41074c4 <___vfiprintf_internal_r+0x3cc>
 4107c60:	19c00450 	cmplti	r7,r3,17
 4107c64:	3801e41e 	bne	r7,zero,41083f8 <___vfiprintf_internal_r+0x1300>
 4107c68:	01c10474 	movhi	r7,1041
 4107c6c:	39c3a604 	addi	r7,r7,3736
 4107c70:	03400404 	movi	r13,16
 4107c74:	00000606 	br	4107c90 <___vfiprintf_internal_r+0xb98>
 4107c78:	23800084 	addi	r14,r4,2
 4107c7c:	84000204 	addi	r16,r16,8
 4107c80:	2809883a 	mov	r4,r5
 4107c84:	18fffc04 	addi	r3,r3,-16
 4107c88:	19400448 	cmpgei	r5,r3,17
 4107c8c:	28001c26 	beq	r5,zero,4107d00 <___vfiprintf_internal_r+0xc08>
 4107c90:	21400044 	addi	r5,r4,1
 4107c94:	10800404 	addi	r2,r2,16
 4107c98:	81c00015 	stw	r7,0(r16)
 4107c9c:	83400115 	stw	r13,4(r16)
 4107ca0:	d8800c15 	stw	r2,48(sp)
 4107ca4:	d9400b15 	stw	r5,44(sp)
 4107ca8:	29800208 	cmpgei	r6,r5,8
 4107cac:	303ff226 	beq	r6,zero,4107c78 <___vfiprintf_internal_r+0xb80>
 4107cb0:	d9800a04 	addi	r6,sp,40
 4107cb4:	a80b883a 	mov	r5,r21
 4107cb8:	b009883a 	mov	r4,r22
 4107cbc:	10007826 	beq	r2,zero,4107ea0 <___vfiprintf_internal_r+0xda8>
 4107cc0:	d9c00615 	stw	r7,24(sp)
 4107cc4:	d8c00315 	stw	r3,12(sp)
 4107cc8:	da000215 	stw	r8,8(sp)
 4107ccc:	4106fec0 	call	4106fec <__sprint_r.part.0>
 4107cd0:	103e1e1e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 4107cd4:	d8c00317 	ldw	r3,12(sp)
 4107cd8:	d9000b17 	ldw	r4,44(sp)
 4107cdc:	d8800c17 	ldw	r2,48(sp)
 4107ce0:	18fffc04 	addi	r3,r3,-16
 4107ce4:	19400448 	cmpgei	r5,r3,17
 4107ce8:	d9c00617 	ldw	r7,24(sp)
 4107cec:	da000217 	ldw	r8,8(sp)
 4107cf0:	9021883a 	mov	r16,r18
 4107cf4:	23800044 	addi	r14,r4,1
 4107cf8:	03400404 	movi	r13,16
 4107cfc:	283fe41e 	bne	r5,zero,4107c90 <___vfiprintf_internal_r+0xb98>
 4107d00:	83400204 	addi	r13,r16,8
 4107d04:	10c5883a 	add	r2,r2,r3
 4107d08:	80c00115 	stw	r3,4(r16)
 4107d0c:	81c00015 	stw	r7,0(r16)
 4107d10:	d8800c15 	stw	r2,48(sp)
 4107d14:	db800b15 	stw	r14,44(sp)
 4107d18:	70c00208 	cmpgei	r3,r14,8
 4107d1c:	18011326 	beq	r3,zero,410816c <___vfiprintf_internal_r+0x1074>
 4107d20:	10018826 	beq	r2,zero,4108344 <___vfiprintf_internal_r+0x124c>
 4107d24:	d9800a04 	addi	r6,sp,40
 4107d28:	a80b883a 	mov	r5,r21
 4107d2c:	b009883a 	mov	r4,r22
 4107d30:	da000215 	stw	r8,8(sp)
 4107d34:	4106fec0 	call	4106fec <__sprint_r.part.0>
 4107d38:	103e041e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 4107d3c:	da000217 	ldw	r8,8(sp)
 4107d40:	d9000b17 	ldw	r4,44(sp)
 4107d44:	d8800c17 	ldw	r2,48(sp)
 4107d48:	4711c83a 	sub	r8,r8,fp
 4107d4c:	d9801904 	addi	r6,sp,100
 4107d50:	21400044 	addi	r5,r4,1
 4107d54:	9021883a 	mov	r16,r18
 4107d58:	023ddc0e 	bge	zero,r8,41074cc <___vfiprintf_internal_r+0x3d4>
 4107d5c:	40c00450 	cmplti	r3,r8,17
 4107d60:	01c10474 	movhi	r7,1041
 4107d64:	1801741e 	bne	r3,zero,4108338 <___vfiprintf_internal_r+0x1240>
 4107d68:	39c3a604 	addi	r7,r7,3736
 4107d6c:	03400404 	movi	r13,16
 4107d70:	00000606 	br	4107d8c <___vfiprintf_internal_r+0xc94>
 4107d74:	21400084 	addi	r5,r4,2
 4107d78:	84000204 	addi	r16,r16,8
 4107d7c:	1809883a 	mov	r4,r3
 4107d80:	423ffc04 	addi	r8,r8,-16
 4107d84:	40c00448 	cmpgei	r3,r8,17
 4107d88:	18001a26 	beq	r3,zero,4107df4 <___vfiprintf_internal_r+0xcfc>
 4107d8c:	20c00044 	addi	r3,r4,1
 4107d90:	10800404 	addi	r2,r2,16
 4107d94:	81c00015 	stw	r7,0(r16)
 4107d98:	83400115 	stw	r13,4(r16)
 4107d9c:	d8800c15 	stw	r2,48(sp)
 4107da0:	d8c00b15 	stw	r3,44(sp)
 4107da4:	19400208 	cmpgei	r5,r3,8
 4107da8:	283ff226 	beq	r5,zero,4107d74 <___vfiprintf_internal_r+0xc7c>
 4107dac:	d9800a04 	addi	r6,sp,40
 4107db0:	a80b883a 	mov	r5,r21
 4107db4:	b009883a 	mov	r4,r22
 4107db8:	10001a26 	beq	r2,zero,4107e24 <___vfiprintf_internal_r+0xd2c>
 4107dbc:	d9c00315 	stw	r7,12(sp)
 4107dc0:	da000215 	stw	r8,8(sp)
 4107dc4:	4106fec0 	call	4106fec <__sprint_r.part.0>
 4107dc8:	103de01e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 4107dcc:	da000217 	ldw	r8,8(sp)
 4107dd0:	d9000b17 	ldw	r4,44(sp)
 4107dd4:	d8800c17 	ldw	r2,48(sp)
 4107dd8:	423ffc04 	addi	r8,r8,-16
 4107ddc:	40c00448 	cmpgei	r3,r8,17
 4107de0:	d9c00317 	ldw	r7,12(sp)
 4107de4:	9021883a 	mov	r16,r18
 4107de8:	21400044 	addi	r5,r4,1
 4107dec:	03400404 	movi	r13,16
 4107df0:	183fe61e 	bne	r3,zero,4107d8c <___vfiprintf_internal_r+0xc94>
 4107df4:	81000204 	addi	r4,r16,8
 4107df8:	1205883a 	add	r2,r2,r8
 4107dfc:	81c00015 	stw	r7,0(r16)
 4107e00:	82000115 	stw	r8,4(r16)
 4107e04:	d8800c15 	stw	r2,48(sp)
 4107e08:	d9400b15 	stw	r5,44(sp)
 4107e0c:	28c00208 	cmpgei	r3,r5,8
 4107e10:	1800a41e 	bne	r3,zero,41080a4 <___vfiprintf_internal_r+0xfac>
 4107e14:	29400044 	addi	r5,r5,1
 4107e18:	21800204 	addi	r6,r4,8
 4107e1c:	2021883a 	mov	r16,r4
 4107e20:	003daa06 	br	41074cc <___vfiprintf_internal_r+0x3d4>
 4107e24:	01400044 	movi	r5,1
 4107e28:	0009883a 	mov	r4,zero
 4107e2c:	9021883a 	mov	r16,r18
 4107e30:	003fd306 	br	4107d80 <___vfiprintf_internal_r+0xc88>
 4107e34:	10c00060 	cmpeqi	r3,r2,1
 4107e38:	1801561e 	bne	r3,zero,4108394 <___vfiprintf_internal_r+0x129c>
 4107e3c:	108000a0 	cmpeqi	r2,r2,2
 4107e40:	db400017 	ldw	r13,0(sp)
 4107e44:	103ef626 	beq	r2,zero,4107a20 <___vfiprintf_internal_r+0x928>
 4107e48:	9027883a 	mov	r19,r18
 4107e4c:	d9000517 	ldw	r4,20(sp)
 4107e50:	b88003cc 	andi	r2,r23,15
 4107e54:	e006973a 	slli	r3,fp,28
 4107e58:	b82ed13a 	srli	r23,r23,4
 4107e5c:	2085883a 	add	r2,r4,r2
 4107e60:	10800003 	ldbu	r2,0(r2)
 4107e64:	e038d13a 	srli	fp,fp,4
 4107e68:	1deeb03a 	or	r23,r3,r23
 4107e6c:	98bfffc5 	stb	r2,-1(r19)
 4107e70:	bf04b03a 	or	r2,r23,fp
 4107e74:	9cffffc4 	addi	r19,r19,-1
 4107e78:	103ff41e 	bne	r2,zero,4107e4c <___vfiprintf_internal_r+0xd54>
 4107e7c:	94f9c83a 	sub	fp,r18,r19
 4107e80:	db400015 	stw	r13,0(sp)
 4107e84:	003eff06 	br	4107a84 <___vfiprintf_internal_r+0x98c>
 4107e88:	d9800a04 	addi	r6,sp,40
 4107e8c:	a80b883a 	mov	r5,r21
 4107e90:	b009883a 	mov	r4,r22
 4107e94:	4106fec0 	call	4106fec <__sprint_r.part.0>
 4107e98:	103da626 	beq	r2,zero,4107534 <___vfiprintf_internal_r+0x43c>
 4107e9c:	003dab06 	br	410754c <___vfiprintf_internal_r+0x454>
 4107ea0:	03800044 	movi	r14,1
 4107ea4:	0009883a 	mov	r4,zero
 4107ea8:	9021883a 	mov	r16,r18
 4107eac:	003f7506 	br	4107c84 <___vfiprintf_internal_r+0xb8c>
 4107eb0:	10009026 	beq	r2,zero,41080f4 <___vfiprintf_internal_r+0xffc>
 4107eb4:	d9800a04 	addi	r6,sp,40
 4107eb8:	a80b883a 	mov	r5,r21
 4107ebc:	b009883a 	mov	r4,r22
 4107ec0:	da000615 	stw	r8,24(sp)
 4107ec4:	db400315 	stw	r13,12(sp)
 4107ec8:	db800215 	stw	r14,8(sp)
 4107ecc:	4106fec0 	call	4106fec <__sprint_r.part.0>
 4107ed0:	103d9e1e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 4107ed4:	d9000b17 	ldw	r4,44(sp)
 4107ed8:	d8800c17 	ldw	r2,48(sp)
 4107edc:	da000617 	ldw	r8,24(sp)
 4107ee0:	db400317 	ldw	r13,12(sp)
 4107ee4:	db800217 	ldw	r14,8(sp)
 4107ee8:	d9801904 	addi	r6,sp,100
 4107eec:	21400044 	addi	r5,r4,1
 4107ef0:	9021883a 	mov	r16,r18
 4107ef4:	003d5806 	br	4107458 <___vfiprintf_internal_r+0x360>
 4107ef8:	d8800984 	addi	r2,sp,38
 4107efc:	d8801715 	stw	r2,92(sp)
 4107f00:	00800084 	movi	r2,2
 4107f04:	d8801815 	stw	r2,96(sp)
 4107f08:	d9801904 	addi	r6,sp,100
 4107f0c:	01400044 	movi	r5,1
 4107f10:	3021883a 	mov	r16,r6
 4107f14:	2809883a 	mov	r4,r5
 4107f18:	21400044 	addi	r5,r4,1
 4107f1c:	81800204 	addi	r6,r16,8
 4107f20:	003d6606 	br	41074bc <___vfiprintf_internal_r+0x3c4>
 4107f24:	db400017 	ldw	r13,0(sp)
 4107f28:	003eb906 	br	4107a10 <___vfiprintf_internal_r+0x918>
 4107f2c:	9027883a 	mov	r19,r18
 4107f30:	b809883a 	mov	r4,r23
 4107f34:	e00b883a 	mov	r5,fp
 4107f38:	01800284 	movi	r6,10
 4107f3c:	000f883a 	mov	r7,zero
 4107f40:	db800315 	stw	r14,12(sp)
 4107f44:	da000215 	stw	r8,8(sp)
 4107f48:	db400015 	stw	r13,0(sp)
 4107f4c:	410a8fc0 	call	410a8fc <__umoddi3>
 4107f50:	10800c04 	addi	r2,r2,48
 4107f54:	b809883a 	mov	r4,r23
 4107f58:	e00b883a 	mov	r5,fp
 4107f5c:	98bfffc5 	stb	r2,-1(r19)
 4107f60:	01800284 	movi	r6,10
 4107f64:	000f883a 	mov	r7,zero
 4107f68:	410a2dc0 	call	410a2dc <__udivdi3>
 4107f6c:	e009883a 	mov	r4,fp
 4107f70:	b80b883a 	mov	r5,r23
 4107f74:	db400017 	ldw	r13,0(sp)
 4107f78:	da000217 	ldw	r8,8(sp)
 4107f7c:	db800317 	ldw	r14,12(sp)
 4107f80:	9cffffc4 	addi	r19,r19,-1
 4107f84:	102f883a 	mov	r23,r2
 4107f88:	1839883a 	mov	fp,r3
 4107f8c:	203fe81e 	bne	r4,zero,4107f30 <___vfiprintf_internal_r+0xe38>
 4107f90:	294002a8 	cmpgeui	r5,r5,10
 4107f94:	283fe61e 	bne	r5,zero,4107f30 <___vfiprintf_internal_r+0xe38>
 4107f98:	94f9c83a 	sub	fp,r18,r19
 4107f9c:	003eb906 	br	4107a84 <___vfiprintf_internal_r+0x98c>
 4107fa0:	19400450 	cmplti	r5,r3,17
 4107fa4:	01c10474 	movhi	r7,1041
 4107fa8:	2801061e 	bne	r5,zero,41083c4 <___vfiprintf_internal_r+0x12cc>
 4107fac:	39c3aa04 	addi	r7,r7,3752
 4107fb0:	03c00404 	movi	r15,16
 4107fb4:	00000706 	br	4107fd4 <___vfiprintf_internal_r+0xedc>
 4107fb8:	27c00084 	addi	ra,r4,2
 4107fbc:	84000204 	addi	r16,r16,8
 4107fc0:	3009883a 	mov	r4,r6
 4107fc4:	18fffc04 	addi	r3,r3,-16
 4107fc8:	19400448 	cmpgei	r5,r3,17
 4107fcc:	28002026 	beq	r5,zero,4108050 <___vfiprintf_internal_r+0xf58>
 4107fd0:	21800044 	addi	r6,r4,1
 4107fd4:	10800404 	addi	r2,r2,16
 4107fd8:	81c00015 	stw	r7,0(r16)
 4107fdc:	83c00115 	stw	r15,4(r16)
 4107fe0:	d8800c15 	stw	r2,48(sp)
 4107fe4:	d9800b15 	stw	r6,44(sp)
 4107fe8:	31400208 	cmpgei	r5,r6,8
 4107fec:	283ff226 	beq	r5,zero,4107fb8 <___vfiprintf_internal_r+0xec0>
 4107ff0:	d9800a04 	addi	r6,sp,40
 4107ff4:	a80b883a 	mov	r5,r21
 4107ff8:	b009883a 	mov	r4,r22
 4107ffc:	10001f26 	beq	r2,zero,410807c <___vfiprintf_internal_r+0xf84>
 4108000:	d9c00815 	stw	r7,32(sp)
 4108004:	d8c00715 	stw	r3,28(sp)
 4108008:	da000615 	stw	r8,24(sp)
 410800c:	db400315 	stw	r13,12(sp)
 4108010:	db800215 	stw	r14,8(sp)
 4108014:	4106fec0 	call	4106fec <__sprint_r.part.0>
 4108018:	103d4c1e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 410801c:	d8c00717 	ldw	r3,28(sp)
 4108020:	d9000b17 	ldw	r4,44(sp)
 4108024:	d8800c17 	ldw	r2,48(sp)
 4108028:	18fffc04 	addi	r3,r3,-16
 410802c:	19400448 	cmpgei	r5,r3,17
 4108030:	d9c00817 	ldw	r7,32(sp)
 4108034:	da000617 	ldw	r8,24(sp)
 4108038:	db400317 	ldw	r13,12(sp)
 410803c:	db800217 	ldw	r14,8(sp)
 4108040:	9021883a 	mov	r16,r18
 4108044:	27c00044 	addi	ra,r4,1
 4108048:	03c00404 	movi	r15,16
 410804c:	283fe01e 	bne	r5,zero,4107fd0 <___vfiprintf_internal_r+0xed8>
 4108050:	10c5883a 	add	r2,r2,r3
 4108054:	80c00115 	stw	r3,4(r16)
 4108058:	81c00015 	stw	r7,0(r16)
 410805c:	d8800c15 	stw	r2,48(sp)
 4108060:	dfc00b15 	stw	ra,44(sp)
 4108064:	f8c00208 	cmpgei	r3,ra,8
 4108068:	18002d1e 	bne	r3,zero,4108120 <___vfiprintf_internal_r+0x1028>
 410806c:	84000204 	addi	r16,r16,8
 4108070:	f9400044 	addi	r5,ra,1
 4108074:	f809883a 	mov	r4,ra
 4108078:	003ce706 	br	4107418 <___vfiprintf_internal_r+0x320>
 410807c:	0009883a 	mov	r4,zero
 4108080:	07c00044 	movi	ra,1
 4108084:	9021883a 	mov	r16,r18
 4108088:	003fce06 	br	4107fc4 <___vfiprintf_internal_r+0xecc>
 410808c:	8dc0010e 	bge	r17,r23,4108094 <___vfiprintf_internal_r+0xf9c>
 4108090:	b823883a 	mov	r17,r23
 4108094:	d8800117 	ldw	r2,4(sp)
 4108098:	1445883a 	add	r2,r2,r17
 410809c:	d8800115 	stw	r2,4(sp)
 41080a0:	003d2406 	br	4107534 <___vfiprintf_internal_r+0x43c>
 41080a4:	10007626 	beq	r2,zero,4108280 <___vfiprintf_internal_r+0x1188>
 41080a8:	d9800a04 	addi	r6,sp,40
 41080ac:	a80b883a 	mov	r5,r21
 41080b0:	b009883a 	mov	r4,r22
 41080b4:	4106fec0 	call	4106fec <__sprint_r.part.0>
 41080b8:	103d241e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 41080bc:	d9400b17 	ldw	r5,44(sp)
 41080c0:	d8800c17 	ldw	r2,48(sp)
 41080c4:	d9801904 	addi	r6,sp,100
 41080c8:	29400044 	addi	r5,r5,1
 41080cc:	9021883a 	mov	r16,r18
 41080d0:	003cfe06 	br	41074cc <___vfiprintf_internal_r+0x3d4>
 41080d4:	d8000b15 	stw	zero,44(sp)
 41080d8:	9021883a 	mov	r16,r18
 41080dc:	003d7606 	br	41076b8 <___vfiprintf_internal_r+0x5c0>
 41080e0:	4000ac1e 	bne	r8,zero,4108394 <___vfiprintf_internal_r+0x129c>
 41080e4:	0011883a 	mov	r8,zero
 41080e8:	0039883a 	mov	fp,zero
 41080ec:	9027883a 	mov	r19,r18
 41080f0:	003e6406 	br	4107a84 <___vfiprintf_internal_r+0x98c>
 41080f4:	7000411e 	bne	r14,zero,41081fc <___vfiprintf_internal_r+0x1104>
 41080f8:	0009883a 	mov	r4,zero
 41080fc:	d9801904 	addi	r6,sp,100
 4108100:	01400044 	movi	r5,1
 4108104:	9021883a 	mov	r16,r18
 4108108:	003cec06 	br	41074bc <___vfiprintf_internal_r+0x3c4>
 410810c:	d9801904 	addi	r6,sp,100
 4108110:	01400044 	movi	r5,1
 4108114:	0009883a 	mov	r4,zero
 4108118:	9021883a 	mov	r16,r18
 410811c:	003ce706 	br	41074bc <___vfiprintf_internal_r+0x3c4>
 4108120:	10004a26 	beq	r2,zero,410824c <___vfiprintf_internal_r+0x1154>
 4108124:	d9800a04 	addi	r6,sp,40
 4108128:	a80b883a 	mov	r5,r21
 410812c:	b009883a 	mov	r4,r22
 4108130:	da000615 	stw	r8,24(sp)
 4108134:	db400315 	stw	r13,12(sp)
 4108138:	db800215 	stw	r14,8(sp)
 410813c:	4106fec0 	call	4106fec <__sprint_r.part.0>
 4108140:	103d021e 	bne	r2,zero,410754c <___vfiprintf_internal_r+0x454>
 4108144:	d9000b17 	ldw	r4,44(sp)
 4108148:	d8800c17 	ldw	r2,48(sp)
 410814c:	da000617 	ldw	r8,24(sp)
 4108150:	db400317 	ldw	r13,12(sp)
 4108154:	db800217 	ldw	r14,8(sp)
 4108158:	9021883a 	mov	r16,r18
 410815c:	21400044 	addi	r5,r4,1
 4108160:	003cad06 	br	4107418 <___vfiprintf_internal_r+0x320>
 4108164:	9027883a 	mov	r19,r18
 4108168:	003e4606 	br	4107a84 <___vfiprintf_internal_r+0x98c>
 410816c:	71400044 	addi	r5,r14,1
 4108170:	69800204 	addi	r6,r13,8
 4108174:	7009883a 	mov	r4,r14
 4108178:	6821883a 	mov	r16,r13
 410817c:	003cd106 	br	41074c4 <___vfiprintf_internal_r+0x3cc>
 4108180:	25c00017 	ldw	r23,0(r4)
 4108184:	d8c00415 	stw	r3,16(sp)
 4108188:	b839d7fa 	srai	fp,r23,31
 410818c:	e005883a 	mov	r2,fp
 4108190:	003db406 	br	4107864 <___vfiprintf_internal_r+0x76c>
 4108194:	00c00c04 	movi	r3,48
 4108198:	d88009c5 	stb	r2,39(sp)
 410819c:	d8c00985 	stb	r3,38(sp)
 41081a0:	6b400094 	ori	r13,r13,2
 41081a4:	00800084 	movi	r2,2
 41081a8:	003d2506 	br	4107640 <___vfiprintf_internal_r+0x548>
 41081ac:	25c00017 	ldw	r23,0(r4)
 41081b0:	0039883a 	mov	fp,zero
 41081b4:	d8c00415 	stw	r3,16(sp)
 41081b8:	0005883a 	mov	r2,zero
 41081bc:	003d2006 	br	4107640 <___vfiprintf_internal_r+0x548>
 41081c0:	d9400117 	ldw	r5,4(sp)
 41081c4:	d9000415 	stw	r4,16(sp)
 41081c8:	2805d7fa 	srai	r2,r5,31
 41081cc:	19400015 	stw	r5,0(r3)
 41081d0:	18800115 	stw	r2,4(r3)
 41081d4:	003bf106 	br	410719c <___vfiprintf_internal_r+0xa4>
 41081d8:	2dc00017 	ldw	r23,0(r5)
 41081dc:	0039883a 	mov	fp,zero
 41081e0:	d9000415 	stw	r4,16(sp)
 41081e4:	003dc106 	br	41078ec <___vfiprintf_internal_r+0x7f4>
 41081e8:	25c00017 	ldw	r23,0(r4)
 41081ec:	0039883a 	mov	fp,zero
 41081f0:	d8c00415 	stw	r3,16(sp)
 41081f4:	00800044 	movi	r2,1
 41081f8:	003d1106 	br	4107640 <___vfiprintf_internal_r+0x548>
 41081fc:	d8800984 	addi	r2,sp,38
 4108200:	d8801715 	stw	r2,92(sp)
 4108204:	00800084 	movi	r2,2
 4108208:	d8801815 	stw	r2,96(sp)
 410820c:	dc001904 	addi	r16,sp,100
 4108210:	01000044 	movi	r4,1
 4108214:	003f4006 	br	4107f18 <___vfiprintf_internal_r+0xe20>
 4108218:	0463c83a 	sub	r17,zero,r17
 410821c:	d8c00415 	stw	r3,16(sp)
 4108220:	003e3806 	br	4107b04 <___vfiprintf_internal_r+0xa0c>
 4108224:	9809883a 	mov	r4,r19
 4108228:	d8c00215 	stw	r3,8(sp)
 410822c:	db400015 	stw	r13,0(sp)
 4108230:	4106f540 	call	4106f54 <strlen>
 4108234:	d8c00217 	ldw	r3,8(sp)
 4108238:	db400017 	ldw	r13,0(sp)
 410823c:	1039883a 	mov	fp,r2
 4108240:	102f883a 	mov	r23,r2
 4108244:	d8c00415 	stw	r3,16(sp)
 4108248:	003c6406 	br	41073dc <___vfiprintf_internal_r+0x2e4>
 410824c:	d8c00947 	ldb	r3,37(sp)
 4108250:	18004326 	beq	r3,zero,4108360 <___vfiprintf_internal_r+0x1268>
 4108254:	d8800944 	addi	r2,sp,37
 4108258:	d8801715 	stw	r2,92(sp)
 410825c:	00800044 	movi	r2,1
 4108260:	d8801815 	stw	r2,96(sp)
 4108264:	d9801904 	addi	r6,sp,100
 4108268:	01400044 	movi	r5,1
 410826c:	003c7606 	br	4107448 <___vfiprintf_internal_r+0x350>
 4108270:	d8800117 	ldw	r2,4(sp)
 4108274:	18800015 	stw	r2,0(r3)
 4108278:	d9000415 	stw	r4,16(sp)
 410827c:	003bc706 	br	410719c <___vfiprintf_internal_r+0xa4>
 4108280:	00c00044 	movi	r3,1
 4108284:	e005883a 	mov	r2,fp
 4108288:	dcc01715 	stw	r19,92(sp)
 410828c:	df001815 	stw	fp,96(sp)
 4108290:	df000c15 	stw	fp,48(sp)
 4108294:	d8c00b15 	stw	r3,44(sp)
 4108298:	d9801904 	addi	r6,sp,100
 410829c:	003c9a06 	br	4107508 <___vfiprintf_internal_r+0x410>
 41082a0:	a0800043 	ldbu	r2,1(r20)
 41082a4:	6b400814 	ori	r13,r13,32
 41082a8:	a5000044 	addi	r20,r20,1
 41082ac:	10803fcc 	andi	r2,r2,255
 41082b0:	1080201c 	xori	r2,r2,128
 41082b4:	10bfe004 	addi	r2,r2,-128
 41082b8:	003bd006 	br	41071fc <___vfiprintf_internal_r+0x104>
 41082bc:	408001f0 	cmpltui	r2,r8,7
 41082c0:	4039883a 	mov	fp,r8
 41082c4:	10002426 	beq	r2,zero,4108358 <___vfiprintf_internal_r+0x1260>
 41082c8:	04c10474 	movhi	r19,1041
 41082cc:	e02f883a 	mov	r23,fp
 41082d0:	d8c00415 	stw	r3,16(sp)
 41082d4:	9cc32904 	addi	r19,r19,3236
 41082d8:	003c4006 	br	41073dc <___vfiprintf_internal_r+0x2e4>
 41082dc:	d8c00417 	ldw	r3,16(sp)
 41082e0:	0039883a 	mov	fp,zero
 41082e4:	d9000415 	stw	r4,16(sp)
 41082e8:	1dc00017 	ldw	r23,0(r3)
 41082ec:	003d7f06 	br	41078ec <___vfiprintf_internal_r+0x7f4>
 41082f0:	d8800417 	ldw	r2,16(sp)
 41082f4:	0039883a 	mov	fp,zero
 41082f8:	d8c00415 	stw	r3,16(sp)
 41082fc:	15c00017 	ldw	r23,0(r2)
 4108300:	0005883a 	mov	r2,zero
 4108304:	003cce06 	br	4107640 <___vfiprintf_internal_r+0x548>
 4108308:	d8800417 	ldw	r2,16(sp)
 410830c:	d8c00415 	stw	r3,16(sp)
 4108310:	15c00017 	ldw	r23,0(r2)
 4108314:	b839d7fa 	srai	fp,r23,31
 4108318:	e005883a 	mov	r2,fp
 410831c:	003d5106 	br	4107864 <___vfiprintf_internal_r+0x76c>
 4108320:	d8800417 	ldw	r2,16(sp)
 4108324:	0039883a 	mov	fp,zero
 4108328:	d8c00415 	stw	r3,16(sp)
 410832c:	15c00017 	ldw	r23,0(r2)
 4108330:	00800044 	movi	r2,1
 4108334:	003cc206 	br	4107640 <___vfiprintf_internal_r+0x548>
 4108338:	3009883a 	mov	r4,r6
 410833c:	39c3a604 	addi	r7,r7,3736
 4108340:	003ead06 	br	4107df8 <___vfiprintf_internal_r+0xd00>
 4108344:	d9801904 	addi	r6,sp,100
 4108348:	01400044 	movi	r5,1
 410834c:	0009883a 	mov	r4,zero
 4108350:	9021883a 	mov	r16,r18
 4108354:	003c5b06 	br	41074c4 <___vfiprintf_internal_r+0x3cc>
 4108358:	07000184 	movi	fp,6
 410835c:	003fda06 	br	41082c8 <___vfiprintf_internal_r+0x11d0>
 4108360:	703ee51e 	bne	r14,zero,4107ef8 <___vfiprintf_internal_r+0xe00>
 4108364:	0009883a 	mov	r4,zero
 4108368:	d9801904 	addi	r6,sp,100
 410836c:	01400044 	movi	r5,1
 4108370:	9021883a 	mov	r16,r18
 4108374:	003c5306 	br	41074c4 <___vfiprintf_internal_r+0x3cc>
 4108378:	d9800945 	stb	r6,37(sp)
 410837c:	003c1106 	br	41073c4 <___vfiprintf_internal_r+0x2cc>
 4108380:	d9800a04 	addi	r6,sp,40
 4108384:	a80b883a 	mov	r5,r21
 4108388:	b009883a 	mov	r4,r22
 410838c:	4106fec0 	call	4106fec <__sprint_r.part.0>
 4108390:	003c6e06 	br	410754c <___vfiprintf_internal_r+0x454>
 4108394:	db400017 	ldw	r13,0(sp)
 4108398:	003d3f06 	br	4107898 <___vfiprintf_internal_r+0x7a0>
 410839c:	402f883a 	mov	r23,r8
 41083a0:	d8c00415 	stw	r3,16(sp)
 41083a4:	4039883a 	mov	fp,r8
 41083a8:	003c0c06 	br	41073dc <___vfiprintf_internal_r+0x2e4>
 41083ac:	d9800945 	stb	r6,37(sp)
 41083b0:	003d2406 	br	4107844 <___vfiprintf_internal_r+0x74c>
 41083b4:	d9800945 	stb	r6,37(sp)
 41083b8:	003d4206 	br	41078c4 <___vfiprintf_internal_r+0x7cc>
 41083bc:	d9800945 	stb	r6,37(sp)
 41083c0:	003d7a06 	br	41079ac <___vfiprintf_internal_r+0x8b4>
 41083c4:	303f883a 	mov	ra,r6
 41083c8:	39c3aa04 	addi	r7,r7,3752
 41083cc:	003f2006 	br	4108050 <___vfiprintf_internal_r+0xf58>
 41083d0:	d9800945 	stb	r6,37(sp)
 41083d4:	003df806 	br	4107bb8 <___vfiprintf_internal_r+0xac0>
 41083d8:	d9800945 	stb	r6,37(sp)
 41083dc:	003e0806 	br	4107c00 <___vfiprintf_internal_r+0xb08>
 41083e0:	21400044 	addi	r5,r4,1
 41083e4:	39c3aa04 	addi	r7,r7,3752
 41083e8:	003d0306 	br	41077f8 <___vfiprintf_internal_r+0x700>
 41083ec:	00bfffc4 	movi	r2,-1
 41083f0:	d8800115 	stw	r2,4(sp)
 41083f4:	003c5806 	br	4107558 <___vfiprintf_internal_r+0x460>
 41083f8:	01c10474 	movhi	r7,1041
 41083fc:	301b883a 	mov	r13,r6
 4108400:	281d883a 	mov	r14,r5
 4108404:	39c3a604 	addi	r7,r7,3736
 4108408:	003e3e06 	br	4107d04 <___vfiprintf_internal_r+0xc0c>
 410840c:	d8800417 	ldw	r2,16(sp)
 4108410:	12000017 	ldw	r8,0(r2)
 4108414:	11000104 	addi	r4,r2,4
 4108418:	4000010e 	bge	r8,zero,4108420 <___vfiprintf_internal_r+0x1328>
 410841c:	023fffc4 	movi	r8,-1
 4108420:	a0800043 	ldbu	r2,1(r20)
 4108424:	d9000415 	stw	r4,16(sp)
 4108428:	1829883a 	mov	r20,r3
 410842c:	10803fcc 	andi	r2,r2,255
 4108430:	1080201c 	xori	r2,r2,128
 4108434:	10bfe004 	addi	r2,r2,-128
 4108438:	003b7006 	br	41071fc <___vfiprintf_internal_r+0x104>

0410843c <__vfiprintf_internal>:
 410843c:	00c10474 	movhi	r3,1041
 4108440:	2005883a 	mov	r2,r4
 4108444:	190bdd17 	ldw	r4,12148(r3)
 4108448:	300f883a 	mov	r7,r6
 410844c:	280d883a 	mov	r6,r5
 4108450:	100b883a 	mov	r5,r2
 4108454:	41070f81 	jmpi	41070f8 <___vfiprintf_internal_r>

04108458 <__sbprintf>:
 4108458:	2880030b 	ldhu	r2,12(r5)
 410845c:	2b001917 	ldw	r12,100(r5)
 4108460:	2ac0038b 	ldhu	r11,14(r5)
 4108464:	2a800717 	ldw	r10,28(r5)
 4108468:	2a400917 	ldw	r9,36(r5)
 410846c:	defee204 	addi	sp,sp,-1144
 4108470:	da001a04 	addi	r8,sp,104
 4108474:	00c10004 	movi	r3,1024
 4108478:	dc011a15 	stw	r16,1128(sp)
 410847c:	10bfff4c 	andi	r2,r2,65533
 4108480:	2821883a 	mov	r16,r5
 4108484:	d80b883a 	mov	r5,sp
 4108488:	dc811c15 	stw	r18,1136(sp)
 410848c:	dc411b15 	stw	r17,1132(sp)
 4108490:	dfc11d15 	stw	ra,1140(sp)
 4108494:	2025883a 	mov	r18,r4
 4108498:	d880030d 	sth	r2,12(sp)
 410849c:	db001915 	stw	r12,100(sp)
 41084a0:	dac0038d 	sth	r11,14(sp)
 41084a4:	da800715 	stw	r10,28(sp)
 41084a8:	da400915 	stw	r9,36(sp)
 41084ac:	da000015 	stw	r8,0(sp)
 41084b0:	da000415 	stw	r8,16(sp)
 41084b4:	d8c00215 	stw	r3,8(sp)
 41084b8:	d8c00515 	stw	r3,20(sp)
 41084bc:	d8000615 	stw	zero,24(sp)
 41084c0:	41070f80 	call	41070f8 <___vfiprintf_internal_r>
 41084c4:	1023883a 	mov	r17,r2
 41084c8:	10000d0e 	bge	r2,zero,4108500 <__sbprintf+0xa8>
 41084cc:	d880030b 	ldhu	r2,12(sp)
 41084d0:	1080100c 	andi	r2,r2,64
 41084d4:	10000326 	beq	r2,zero,41084e4 <__sbprintf+0x8c>
 41084d8:	8080030b 	ldhu	r2,12(r16)
 41084dc:	10801014 	ori	r2,r2,64
 41084e0:	8080030d 	sth	r2,12(r16)
 41084e4:	8805883a 	mov	r2,r17
 41084e8:	dfc11d17 	ldw	ra,1140(sp)
 41084ec:	dc811c17 	ldw	r18,1136(sp)
 41084f0:	dc411b17 	ldw	r17,1132(sp)
 41084f4:	dc011a17 	ldw	r16,1128(sp)
 41084f8:	dec11e04 	addi	sp,sp,1144
 41084fc:	f800283a 	ret
 4108500:	d80b883a 	mov	r5,sp
 4108504:	9009883a 	mov	r4,r18
 4108508:	41044dc0 	call	41044dc <_fflush_r>
 410850c:	103fef26 	beq	r2,zero,41084cc <__sbprintf+0x74>
 4108510:	047fffc4 	movi	r17,-1
 4108514:	003fed06 	br	41084cc <__sbprintf+0x74>

04108518 <_write_r>:
 4108518:	2807883a 	mov	r3,r5
 410851c:	defffe04 	addi	sp,sp,-8
 4108520:	dc000015 	stw	r16,0(sp)
 4108524:	300b883a 	mov	r5,r6
 4108528:	00810474 	movhi	r2,1041
 410852c:	380d883a 	mov	r6,r7
 4108530:	2021883a 	mov	r16,r4
 4108534:	1809883a 	mov	r4,r3
 4108538:	dfc00115 	stw	ra,4(sp)
 410853c:	10131f15 	stw	zero,19580(r2)
 4108540:	410e0b40 	call	410e0b4 <write>
 4108544:	10ffffd8 	cmpnei	r3,r2,-1
 4108548:	18000426 	beq	r3,zero,410855c <_write_r+0x44>
 410854c:	dfc00117 	ldw	ra,4(sp)
 4108550:	dc000017 	ldw	r16,0(sp)
 4108554:	dec00204 	addi	sp,sp,8
 4108558:	f800283a 	ret
 410855c:	00c10474 	movhi	r3,1041
 4108560:	18d31f17 	ldw	r3,19580(r3)
 4108564:	183ff926 	beq	r3,zero,410854c <_write_r+0x34>
 4108568:	80c00015 	stw	r3,0(r16)
 410856c:	dfc00117 	ldw	ra,4(sp)
 4108570:	dc000017 	ldw	r16,0(sp)
 4108574:	dec00204 	addi	sp,sp,8
 4108578:	f800283a 	ret

0410857c <_close_r>:
 410857c:	defffe04 	addi	sp,sp,-8
 4108580:	dc000015 	stw	r16,0(sp)
 4108584:	00810474 	movhi	r2,1041
 4108588:	2021883a 	mov	r16,r4
 410858c:	2809883a 	mov	r4,r5
 4108590:	dfc00115 	stw	ra,4(sp)
 4108594:	10131f15 	stw	zero,19580(r2)
 4108598:	410d6640 	call	410d664 <close>
 410859c:	10ffffd8 	cmpnei	r3,r2,-1
 41085a0:	18000426 	beq	r3,zero,41085b4 <_close_r+0x38>
 41085a4:	dfc00117 	ldw	ra,4(sp)
 41085a8:	dc000017 	ldw	r16,0(sp)
 41085ac:	dec00204 	addi	sp,sp,8
 41085b0:	f800283a 	ret
 41085b4:	00c10474 	movhi	r3,1041
 41085b8:	18d31f17 	ldw	r3,19580(r3)
 41085bc:	183ff926 	beq	r3,zero,41085a4 <_close_r+0x28>
 41085c0:	80c00015 	stw	r3,0(r16)
 41085c4:	dfc00117 	ldw	ra,4(sp)
 41085c8:	dc000017 	ldw	r16,0(sp)
 41085cc:	dec00204 	addi	sp,sp,8
 41085d0:	f800283a 	ret

041085d4 <__assert_func>:
 41085d4:	00810474 	movhi	r2,1041
 41085d8:	120bdd17 	ldw	r8,12148(r2)
 41085dc:	defffc04 	addi	sp,sp,-16
 41085e0:	3807883a 	mov	r3,r7
 41085e4:	3005883a 	mov	r2,r6
 41085e8:	dfc00315 	stw	ra,12(sp)
 41085ec:	42400317 	ldw	r9,12(r8)
 41085f0:	200f883a 	mov	r7,r4
 41085f4:	2811883a 	mov	r8,r5
 41085f8:	180d883a 	mov	r6,r3
 41085fc:	10000a26 	beq	r2,zero,4108628 <__assert_func+0x54>
 4108600:	00c10474 	movhi	r3,1041
 4108604:	18c3ae04 	addi	r3,r3,3768
 4108608:	01410474 	movhi	r5,1041
 410860c:	2943b204 	addi	r5,r5,3784
 4108610:	4809883a 	mov	r4,r9
 4108614:	d8c00115 	stw	r3,4(sp)
 4108618:	da000015 	stw	r8,0(sp)
 410861c:	d8800215 	stw	r2,8(sp)
 4108620:	41088d00 	call	41088d0 <fiprintf>
 4108624:	4109c700 	call	4109c70 <abort>
 4108628:	00c10474 	movhi	r3,1041
 410862c:	18c3b104 	addi	r3,r3,3780
 4108630:	1805883a 	mov	r2,r3
 4108634:	003ff406 	br	4108608 <__assert_func+0x34>

04108638 <__assert>:
 4108638:	deffff04 	addi	sp,sp,-4
 410863c:	300f883a 	mov	r7,r6
 4108640:	000d883a 	mov	r6,zero
 4108644:	dfc00015 	stw	ra,0(sp)
 4108648:	41085d40 	call	41085d4 <__assert_func>

0410864c <_calloc_r>:
 410864c:	defffe04 	addi	sp,sp,-8
 4108650:	dc000015 	stw	r16,0(sp)
 4108654:	2021883a 	mov	r16,r4
 4108658:	2809883a 	mov	r4,r5
 410865c:	300b883a 	mov	r5,r6
 4108660:	dfc00115 	stw	ra,4(sp)
 4108664:	410aec00 	call	410aec0 <__mulsi3>
 4108668:	8009883a 	mov	r4,r16
 410866c:	100b883a 	mov	r5,r2
 4108670:	410512c0 	call	410512c <_malloc_r>
 4108674:	1009883a 	mov	r4,r2
 4108678:	10000c26 	beq	r2,zero,41086ac <_calloc_r+0x60>
 410867c:	11bfff17 	ldw	r6,-4(r2)
 4108680:	00bfff04 	movi	r2,-4
 4108684:	308c703a 	and	r6,r6,r2
 4108688:	31bfff04 	addi	r6,r6,-4
 410868c:	30800968 	cmpgeui	r2,r6,37
 4108690:	1000151e 	bne	r2,zero,41086e8 <_calloc_r+0x9c>
 4108694:	30800530 	cmpltui	r2,r6,20
 4108698:	10000926 	beq	r2,zero,41086c0 <_calloc_r+0x74>
 410869c:	2005883a 	mov	r2,r4
 41086a0:	10000015 	stw	zero,0(r2)
 41086a4:	10000115 	stw	zero,4(r2)
 41086a8:	10000215 	stw	zero,8(r2)
 41086ac:	2005883a 	mov	r2,r4
 41086b0:	dfc00117 	ldw	ra,4(sp)
 41086b4:	dc000017 	ldw	r16,0(sp)
 41086b8:	dec00204 	addi	sp,sp,8
 41086bc:	f800283a 	ret
 41086c0:	20000015 	stw	zero,0(r4)
 41086c4:	20000115 	stw	zero,4(r4)
 41086c8:	30800728 	cmpgeui	r2,r6,28
 41086cc:	10000a26 	beq	r2,zero,41086f8 <_calloc_r+0xac>
 41086d0:	20000215 	stw	zero,8(r4)
 41086d4:	20000315 	stw	zero,12(r4)
 41086d8:	31800920 	cmpeqi	r6,r6,36
 41086dc:	3000081e 	bne	r6,zero,4108700 <_calloc_r+0xb4>
 41086e0:	20800404 	addi	r2,r4,16
 41086e4:	003fee06 	br	41086a0 <_calloc_r+0x54>
 41086e8:	000b883a 	mov	r5,zero
 41086ec:	4105adc0 	call	4105adc <memset>
 41086f0:	1009883a 	mov	r4,r2
 41086f4:	003fed06 	br	41086ac <_calloc_r+0x60>
 41086f8:	20800204 	addi	r2,r4,8
 41086fc:	003fe806 	br	41086a0 <_calloc_r+0x54>
 4108700:	20000415 	stw	zero,16(r4)
 4108704:	20800604 	addi	r2,r4,24
 4108708:	20000515 	stw	zero,20(r4)
 410870c:	003fe406 	br	41086a0 <_calloc_r+0x54>

04108710 <_fclose_r.part.0>:
 4108710:	defffc04 	addi	sp,sp,-16
 4108714:	dc800215 	stw	r18,8(sp)
 4108718:	dc400115 	stw	r17,4(sp)
 410871c:	dc000015 	stw	r16,0(sp)
 4108720:	dfc00315 	stw	ra,12(sp)
 4108724:	2821883a 	mov	r16,r5
 4108728:	2023883a 	mov	r17,r4
 410872c:	41042b40 	call	41042b4 <__sflush_r>
 4108730:	80c00b17 	ldw	r3,44(r16)
 4108734:	1025883a 	mov	r18,r2
 4108738:	18000426 	beq	r3,zero,410874c <_fclose_r.part.0+0x3c>
 410873c:	81400717 	ldw	r5,28(r16)
 4108740:	8809883a 	mov	r4,r17
 4108744:	183ee83a 	callr	r3
 4108748:	10001916 	blt	r2,zero,41087b0 <_fclose_r.part.0+0xa0>
 410874c:	8080030b 	ldhu	r2,12(r16)
 4108750:	1080200c 	andi	r2,r2,128
 4108754:	10001a1e 	bne	r2,zero,41087c0 <_fclose_r.part.0+0xb0>
 4108758:	81400c17 	ldw	r5,48(r16)
 410875c:	28000526 	beq	r5,zero,4108774 <_fclose_r.part.0+0x64>
 4108760:	80801004 	addi	r2,r16,64
 4108764:	28800226 	beq	r5,r2,4108770 <_fclose_r.part.0+0x60>
 4108768:	8809883a 	mov	r4,r17
 410876c:	4104a880 	call	4104a88 <_free_r>
 4108770:	80000c15 	stw	zero,48(r16)
 4108774:	81401117 	ldw	r5,68(r16)
 4108778:	28000326 	beq	r5,zero,4108788 <_fclose_r.part.0+0x78>
 410877c:	8809883a 	mov	r4,r17
 4108780:	4104a880 	call	4104a88 <_free_r>
 4108784:	80001115 	stw	zero,68(r16)
 4108788:	41049340 	call	4104934 <__sfp_lock_acquire>
 410878c:	8000030d 	sth	zero,12(r16)
 4108790:	41049380 	call	4104938 <__sfp_lock_release>
 4108794:	9005883a 	mov	r2,r18
 4108798:	dfc00317 	ldw	ra,12(sp)
 410879c:	dc800217 	ldw	r18,8(sp)
 41087a0:	dc400117 	ldw	r17,4(sp)
 41087a4:	dc000017 	ldw	r16,0(sp)
 41087a8:	dec00404 	addi	sp,sp,16
 41087ac:	f800283a 	ret
 41087b0:	8080030b 	ldhu	r2,12(r16)
 41087b4:	04bfffc4 	movi	r18,-1
 41087b8:	1080200c 	andi	r2,r2,128
 41087bc:	103fe626 	beq	r2,zero,4108758 <_fclose_r.part.0+0x48>
 41087c0:	81400417 	ldw	r5,16(r16)
 41087c4:	8809883a 	mov	r4,r17
 41087c8:	4104a880 	call	4104a88 <_free_r>
 41087cc:	003fe206 	br	4108758 <_fclose_r.part.0+0x48>

041087d0 <_fclose_r>:
 41087d0:	28001926 	beq	r5,zero,4108838 <_fclose_r+0x68>
 41087d4:	defffd04 	addi	sp,sp,-12
 41087d8:	dc000115 	stw	r16,4(sp)
 41087dc:	dfc00215 	stw	ra,8(sp)
 41087e0:	2021883a 	mov	r16,r4
 41087e4:	20000226 	beq	r4,zero,41087f0 <_fclose_r+0x20>
 41087e8:	20800e17 	ldw	r2,56(r4)
 41087ec:	10000c26 	beq	r2,zero,4108820 <_fclose_r+0x50>
 41087f0:	2880030f 	ldh	r2,12(r5)
 41087f4:	1000051e 	bne	r2,zero,410880c <_fclose_r+0x3c>
 41087f8:	0005883a 	mov	r2,zero
 41087fc:	dfc00217 	ldw	ra,8(sp)
 4108800:	dc000117 	ldw	r16,4(sp)
 4108804:	dec00304 	addi	sp,sp,12
 4108808:	f800283a 	ret
 410880c:	8009883a 	mov	r4,r16
 4108810:	dfc00217 	ldw	ra,8(sp)
 4108814:	dc000117 	ldw	r16,4(sp)
 4108818:	dec00304 	addi	sp,sp,12
 410881c:	41087101 	jmpi	4108710 <_fclose_r.part.0>
 4108820:	d9400015 	stw	r5,0(sp)
 4108824:	41049240 	call	4104924 <__sinit>
 4108828:	d9400017 	ldw	r5,0(sp)
 410882c:	2880030f 	ldh	r2,12(r5)
 4108830:	103ff126 	beq	r2,zero,41087f8 <_fclose_r+0x28>
 4108834:	003ff506 	br	410880c <_fclose_r+0x3c>
 4108838:	0005883a 	mov	r2,zero
 410883c:	f800283a 	ret

04108840 <fclose>:
 4108840:	20000826 	beq	r4,zero,4108864 <fclose+0x24>
 4108844:	00810474 	movhi	r2,1041
 4108848:	200b883a 	mov	r5,r4
 410884c:	110bdd17 	ldw	r4,12148(r2)
 4108850:	20000226 	beq	r4,zero,410885c <fclose+0x1c>
 4108854:	20800e17 	ldw	r2,56(r4)
 4108858:	10000526 	beq	r2,zero,4108870 <fclose+0x30>
 410885c:	2880030f 	ldh	r2,12(r5)
 4108860:	1000021e 	bne	r2,zero,410886c <fclose+0x2c>
 4108864:	0005883a 	mov	r2,zero
 4108868:	f800283a 	ret
 410886c:	41087101 	jmpi	4108710 <_fclose_r.part.0>
 4108870:	defffd04 	addi	sp,sp,-12
 4108874:	d9400115 	stw	r5,4(sp)
 4108878:	d9000015 	stw	r4,0(sp)
 410887c:	dfc00215 	stw	ra,8(sp)
 4108880:	41049240 	call	4104924 <__sinit>
 4108884:	d9400117 	ldw	r5,4(sp)
 4108888:	d9000017 	ldw	r4,0(sp)
 410888c:	2880030f 	ldh	r2,12(r5)
 4108890:	10000326 	beq	r2,zero,41088a0 <fclose+0x60>
 4108894:	dfc00217 	ldw	ra,8(sp)
 4108898:	dec00304 	addi	sp,sp,12
 410889c:	41087101 	jmpi	4108710 <_fclose_r.part.0>
 41088a0:	0005883a 	mov	r2,zero
 41088a4:	dfc00217 	ldw	ra,8(sp)
 41088a8:	dec00304 	addi	sp,sp,12
 41088ac:	f800283a 	ret

041088b0 <_fiprintf_r>:
 41088b0:	defffe04 	addi	sp,sp,-8
 41088b4:	dfc00015 	stw	ra,0(sp)
 41088b8:	d9c00115 	stw	r7,4(sp)
 41088bc:	d9c00104 	addi	r7,sp,4
 41088c0:	41099dc0 	call	41099dc <_vfiprintf_r>
 41088c4:	dfc00017 	ldw	ra,0(sp)
 41088c8:	dec00204 	addi	sp,sp,8
 41088cc:	f800283a 	ret

041088d0 <fiprintf>:
 41088d0:	defffd04 	addi	sp,sp,-12
 41088d4:	2005883a 	mov	r2,r4
 41088d8:	dfc00015 	stw	ra,0(sp)
 41088dc:	d9800115 	stw	r6,4(sp)
 41088e0:	d9c00215 	stw	r7,8(sp)
 41088e4:	00c10474 	movhi	r3,1041
 41088e8:	190bdd17 	ldw	r4,12148(r3)
 41088ec:	280d883a 	mov	r6,r5
 41088f0:	d9c00104 	addi	r7,sp,4
 41088f4:	100b883a 	mov	r5,r2
 41088f8:	41099dc0 	call	41099dc <_vfiprintf_r>
 41088fc:	dfc00017 	ldw	ra,0(sp)
 4108900:	dec00304 	addi	sp,sp,12
 4108904:	f800283a 	ret

04108908 <__fputwc>:
 4108908:	defff904 	addi	sp,sp,-28
 410890c:	dcc00415 	stw	r19,16(sp)
 4108910:	dc800315 	stw	r18,12(sp)
 4108914:	dc000115 	stw	r16,4(sp)
 4108918:	dfc00615 	stw	ra,24(sp)
 410891c:	dd000515 	stw	r20,20(sp)
 4108920:	dc400215 	stw	r17,8(sp)
 4108924:	2025883a 	mov	r18,r4
 4108928:	2827883a 	mov	r19,r5
 410892c:	3021883a 	mov	r16,r6
 4108930:	41090fc0 	call	41090fc <__locale_mb_cur_max>
 4108934:	10800058 	cmpnei	r2,r2,1
 4108938:	1000071e 	bne	r2,zero,4108958 <__fputwc+0x50>
 410893c:	98bfffc4 	addi	r2,r19,-1
 4108940:	10803fe8 	cmpgeui	r2,r2,255
 4108944:	1000041e 	bne	r2,zero,4108958 <__fputwc+0x50>
 4108948:	980b883a 	mov	r5,r19
 410894c:	dcc000c5 	stb	r19,3(sp)
 4108950:	05000044 	movi	r20,1
 4108954:	00000a06 	br	4108980 <__fputwc+0x78>
 4108958:	81c01704 	addi	r7,r16,92
 410895c:	980d883a 	mov	r6,r19
 4108960:	d94000c4 	addi	r5,sp,3
 4108964:	9009883a 	mov	r4,r18
 4108968:	4109b400 	call	4109b40 <_wcrtomb_r>
 410896c:	1029883a 	mov	r20,r2
 4108970:	10bfffd8 	cmpnei	r2,r2,-1
 4108974:	10003926 	beq	r2,zero,4108a5c <__fputwc+0x154>
 4108978:	a0001f26 	beq	r20,zero,41089f8 <__fputwc+0xf0>
 410897c:	d94000c3 	ldbu	r5,3(sp)
 4108980:	0023883a 	mov	r17,zero
 4108984:	00000a06 	br	41089b0 <__fputwc+0xa8>
 4108988:	80800017 	ldw	r2,0(r16)
 410898c:	11400005 	stb	r5,0(r2)
 4108990:	80c00017 	ldw	r3,0(r16)
 4108994:	18c00044 	addi	r3,r3,1
 4108998:	80c00015 	stw	r3,0(r16)
 410899c:	8c400044 	addi	r17,r17,1
 41089a0:	d88000c4 	addi	r2,sp,3
 41089a4:	1447883a 	add	r3,r2,r17
 41089a8:	8d00132e 	bgeu	r17,r20,41089f8 <__fputwc+0xf0>
 41089ac:	19400003 	ldbu	r5,0(r3)
 41089b0:	80c00217 	ldw	r3,8(r16)
 41089b4:	18ffffc4 	addi	r3,r3,-1
 41089b8:	80c00215 	stw	r3,8(r16)
 41089bc:	183ff20e 	bge	r3,zero,4108988 <__fputwc+0x80>
 41089c0:	80800617 	ldw	r2,24(r16)
 41089c4:	18801616 	blt	r3,r2,4108a20 <__fputwc+0x118>
 41089c8:	80800017 	ldw	r2,0(r16)
 41089cc:	11400005 	stb	r5,0(r2)
 41089d0:	80800017 	ldw	r2,0(r16)
 41089d4:	10c00003 	ldbu	r3,0(r2)
 41089d8:	10800044 	addi	r2,r2,1
 41089dc:	18c002a0 	cmpeqi	r3,r3,10
 41089e0:	1800171e 	bne	r3,zero,4108a40 <__fputwc+0x138>
 41089e4:	80800015 	stw	r2,0(r16)
 41089e8:	8c400044 	addi	r17,r17,1
 41089ec:	d88000c4 	addi	r2,sp,3
 41089f0:	1447883a 	add	r3,r2,r17
 41089f4:	8d3fed36 	bltu	r17,r20,41089ac <__fputwc+0xa4>
 41089f8:	9829883a 	mov	r20,r19
 41089fc:	a005883a 	mov	r2,r20
 4108a00:	dfc00617 	ldw	ra,24(sp)
 4108a04:	dd000517 	ldw	r20,20(sp)
 4108a08:	dcc00417 	ldw	r19,16(sp)
 4108a0c:	dc800317 	ldw	r18,12(sp)
 4108a10:	dc400217 	ldw	r17,8(sp)
 4108a14:	dc000117 	ldw	r16,4(sp)
 4108a18:	dec00704 	addi	sp,sp,28
 4108a1c:	f800283a 	ret
 4108a20:	29403fcc 	andi	r5,r5,255
 4108a24:	800d883a 	mov	r6,r16
 4108a28:	9009883a 	mov	r4,r18
 4108a2c:	41099e00 	call	41099e0 <__swbuf_r>
 4108a30:	10bfffe0 	cmpeqi	r2,r2,-1
 4108a34:	103fd926 	beq	r2,zero,410899c <__fputwc+0x94>
 4108a38:	053fffc4 	movi	r20,-1
 4108a3c:	003fef06 	br	41089fc <__fputwc+0xf4>
 4108a40:	800d883a 	mov	r6,r16
 4108a44:	01400284 	movi	r5,10
 4108a48:	9009883a 	mov	r4,r18
 4108a4c:	41099e00 	call	41099e0 <__swbuf_r>
 4108a50:	10bfffe0 	cmpeqi	r2,r2,-1
 4108a54:	103fd126 	beq	r2,zero,410899c <__fputwc+0x94>
 4108a58:	003ff706 	br	4108a38 <__fputwc+0x130>
 4108a5c:	8080030b 	ldhu	r2,12(r16)
 4108a60:	10801014 	ori	r2,r2,64
 4108a64:	8080030d 	sth	r2,12(r16)
 4108a68:	003fe406 	br	41089fc <__fputwc+0xf4>

04108a6c <_fputwc_r>:
 4108a6c:	3080030b 	ldhu	r2,12(r6)
 4108a70:	10c8000c 	andi	r3,r2,8192
 4108a74:	1800051e 	bne	r3,zero,4108a8c <_fputwc_r+0x20>
 4108a78:	30c01917 	ldw	r3,100(r6)
 4108a7c:	10880014 	ori	r2,r2,8192
 4108a80:	3080030d 	sth	r2,12(r6)
 4108a84:	18880014 	ori	r2,r3,8192
 4108a88:	30801915 	stw	r2,100(r6)
 4108a8c:	41089081 	jmpi	4108908 <__fputwc>

04108a90 <fputwc>:
 4108a90:	defffc04 	addi	sp,sp,-16
 4108a94:	00810474 	movhi	r2,1041
 4108a98:	dc000215 	stw	r16,8(sp)
 4108a9c:	140bdd17 	ldw	r16,12148(r2)
 4108aa0:	dfc00315 	stw	ra,12(sp)
 4108aa4:	280d883a 	mov	r6,r5
 4108aa8:	200b883a 	mov	r5,r4
 4108aac:	80000226 	beq	r16,zero,4108ab8 <fputwc+0x28>
 4108ab0:	80800e17 	ldw	r2,56(r16)
 4108ab4:	10000d26 	beq	r2,zero,4108aec <fputwc+0x5c>
 4108ab8:	3080030b 	ldhu	r2,12(r6)
 4108abc:	10c8000c 	andi	r3,r2,8192
 4108ac0:	1800051e 	bne	r3,zero,4108ad8 <fputwc+0x48>
 4108ac4:	30c01917 	ldw	r3,100(r6)
 4108ac8:	10880014 	ori	r2,r2,8192
 4108acc:	3080030d 	sth	r2,12(r6)
 4108ad0:	18880014 	ori	r2,r3,8192
 4108ad4:	30801915 	stw	r2,100(r6)
 4108ad8:	8009883a 	mov	r4,r16
 4108adc:	dfc00317 	ldw	ra,12(sp)
 4108ae0:	dc000217 	ldw	r16,8(sp)
 4108ae4:	dec00404 	addi	sp,sp,16
 4108ae8:	41089081 	jmpi	4108908 <__fputwc>
 4108aec:	d9000015 	stw	r4,0(sp)
 4108af0:	8009883a 	mov	r4,r16
 4108af4:	d9800115 	stw	r6,4(sp)
 4108af8:	41049240 	call	4104924 <__sinit>
 4108afc:	d9800117 	ldw	r6,4(sp)
 4108b00:	d9400017 	ldw	r5,0(sp)
 4108b04:	003fec06 	br	4108ab8 <fputwc+0x28>

04108b08 <_fstat_r>:
 4108b08:	2807883a 	mov	r3,r5
 4108b0c:	defffe04 	addi	sp,sp,-8
 4108b10:	dc000015 	stw	r16,0(sp)
 4108b14:	00810474 	movhi	r2,1041
 4108b18:	300b883a 	mov	r5,r6
 4108b1c:	2021883a 	mov	r16,r4
 4108b20:	1809883a 	mov	r4,r3
 4108b24:	dfc00115 	stw	ra,4(sp)
 4108b28:	10131f15 	stw	zero,19580(r2)
 4108b2c:	410d7e00 	call	410d7e0 <fstat>
 4108b30:	10ffffd8 	cmpnei	r3,r2,-1
 4108b34:	18000426 	beq	r3,zero,4108b48 <_fstat_r+0x40>
 4108b38:	dfc00117 	ldw	ra,4(sp)
 4108b3c:	dc000017 	ldw	r16,0(sp)
 4108b40:	dec00204 	addi	sp,sp,8
 4108b44:	f800283a 	ret
 4108b48:	00c10474 	movhi	r3,1041
 4108b4c:	18d31f17 	ldw	r3,19580(r3)
 4108b50:	183ff926 	beq	r3,zero,4108b38 <_fstat_r+0x30>
 4108b54:	80c00015 	stw	r3,0(r16)
 4108b58:	dfc00117 	ldw	ra,4(sp)
 4108b5c:	dc000017 	ldw	r16,0(sp)
 4108b60:	dec00204 	addi	sp,sp,8
 4108b64:	f800283a 	ret

04108b68 <__sfvwrite_r>:
 4108b68:	30800217 	ldw	r2,8(r6)
 4108b6c:	1000a326 	beq	r2,zero,4108dfc <__sfvwrite_r+0x294>
 4108b70:	29c0030b 	ldhu	r7,12(r5)
 4108b74:	defff404 	addi	sp,sp,-48
 4108b78:	ddc00915 	stw	r23,36(sp)
 4108b7c:	dd400715 	stw	r21,28(sp)
 4108b80:	dc000215 	stw	r16,8(sp)
 4108b84:	dfc00b15 	stw	ra,44(sp)
 4108b88:	df000a15 	stw	fp,40(sp)
 4108b8c:	dd800815 	stw	r22,32(sp)
 4108b90:	dd000615 	stw	r20,24(sp)
 4108b94:	dcc00515 	stw	r19,20(sp)
 4108b98:	dc800415 	stw	r18,16(sp)
 4108b9c:	dc400315 	stw	r17,12(sp)
 4108ba0:	3880020c 	andi	r2,r7,8
 4108ba4:	302f883a 	mov	r23,r6
 4108ba8:	202b883a 	mov	r21,r4
 4108bac:	2821883a 	mov	r16,r5
 4108bb0:	10002226 	beq	r2,zero,4108c3c <__sfvwrite_r+0xd4>
 4108bb4:	28800417 	ldw	r2,16(r5)
 4108bb8:	10002026 	beq	r2,zero,4108c3c <__sfvwrite_r+0xd4>
 4108bbc:	3880008c 	andi	r2,r7,2
 4108bc0:	bc400017 	ldw	r17,0(r23)
 4108bc4:	10002526 	beq	r2,zero,4108c5c <__sfvwrite_r+0xf4>
 4108bc8:	80800917 	ldw	r2,36(r16)
 4108bcc:	81400717 	ldw	r5,28(r16)
 4108bd0:	05200034 	movhi	r20,32768
 4108bd4:	0027883a 	mov	r19,zero
 4108bd8:	0025883a 	mov	r18,zero
 4108bdc:	a53f0004 	addi	r20,r20,-1024
 4108be0:	980d883a 	mov	r6,r19
 4108be4:	a809883a 	mov	r4,r21
 4108be8:	90001026 	beq	r18,zero,4108c2c <__sfvwrite_r+0xc4>
 4108bec:	900f883a 	mov	r7,r18
 4108bf0:	a480012e 	bgeu	r20,r18,4108bf8 <__sfvwrite_r+0x90>
 4108bf4:	a00f883a 	mov	r7,r20
 4108bf8:	103ee83a 	callr	r2
 4108bfc:	00807a0e 	bge	zero,r2,4108de8 <__sfvwrite_r+0x280>
 4108c00:	b9000217 	ldw	r4,8(r23)
 4108c04:	98a7883a 	add	r19,r19,r2
 4108c08:	90a5c83a 	sub	r18,r18,r2
 4108c0c:	2085c83a 	sub	r2,r4,r2
 4108c10:	b8800215 	stw	r2,8(r23)
 4108c14:	10006326 	beq	r2,zero,4108da4 <__sfvwrite_r+0x23c>
 4108c18:	80800917 	ldw	r2,36(r16)
 4108c1c:	81400717 	ldw	r5,28(r16)
 4108c20:	980d883a 	mov	r6,r19
 4108c24:	a809883a 	mov	r4,r21
 4108c28:	903ff01e 	bne	r18,zero,4108bec <__sfvwrite_r+0x84>
 4108c2c:	8cc00017 	ldw	r19,0(r17)
 4108c30:	8c800117 	ldw	r18,4(r17)
 4108c34:	8c400204 	addi	r17,r17,8
 4108c38:	003fe906 	br	4108be0 <__sfvwrite_r+0x78>
 4108c3c:	800b883a 	mov	r5,r16
 4108c40:	a809883a 	mov	r4,r21
 4108c44:	41027e80 	call	41027e8 <__swsetup_r>
 4108c48:	1000f71e 	bne	r2,zero,4109028 <__sfvwrite_r+0x4c0>
 4108c4c:	81c0030b 	ldhu	r7,12(r16)
 4108c50:	bc400017 	ldw	r17,0(r23)
 4108c54:	3880008c 	andi	r2,r7,2
 4108c58:	103fdb1e 	bne	r2,zero,4108bc8 <__sfvwrite_r+0x60>
 4108c5c:	3880004c 	andi	r2,r7,1
 4108c60:	84800217 	ldw	r18,8(r16)
 4108c64:	82000017 	ldw	r8,0(r16)
 4108c68:	1000661e 	bne	r2,zero,4108e04 <__sfvwrite_r+0x29c>
 4108c6c:	00a00034 	movhi	r2,32768
 4108c70:	10bfff84 	addi	r2,r2,-2
 4108c74:	00e00034 	movhi	r3,32768
 4108c78:	d8800015 	stw	r2,0(sp)
 4108c7c:	18bfffc4 	addi	r2,r3,-1
 4108c80:	0039883a 	mov	fp,zero
 4108c84:	0027883a 	mov	r19,zero
 4108c88:	d8800115 	stw	r2,4(sp)
 4108c8c:	98004126 	beq	r19,zero,4108d94 <__sfvwrite_r+0x22c>
 4108c90:	3880800c 	andi	r2,r7,512
 4108c94:	10009726 	beq	r2,zero,4108ef4 <__sfvwrite_r+0x38c>
 4108c98:	902d883a 	mov	r22,r18
 4108c9c:	9c80be36 	bltu	r19,r18,4108f98 <__sfvwrite_r+0x430>
 4108ca0:	3881200c 	andi	r2,r7,1152
 4108ca4:	10002626 	beq	r2,zero,4108d40 <__sfvwrite_r+0x1d8>
 4108ca8:	81800517 	ldw	r6,20(r16)
 4108cac:	81400417 	ldw	r5,16(r16)
 4108cb0:	98800044 	addi	r2,r19,1
 4108cb4:	3189883a 	add	r4,r6,r6
 4108cb8:	2189883a 	add	r4,r4,r6
 4108cbc:	2028d7fa 	srli	r20,r4,31
 4108cc0:	4165c83a 	sub	r18,r8,r5
 4108cc4:	1485883a 	add	r2,r2,r18
 4108cc8:	a109883a 	add	r4,r20,r4
 4108ccc:	2029d07a 	srai	r20,r4,1
 4108cd0:	a00d883a 	mov	r6,r20
 4108cd4:	a080022e 	bgeu	r20,r2,4108ce0 <__sfvwrite_r+0x178>
 4108cd8:	1029883a 	mov	r20,r2
 4108cdc:	100d883a 	mov	r6,r2
 4108ce0:	39c1000c 	andi	r7,r7,1024
 4108ce4:	3800c026 	beq	r7,zero,4108fe8 <__sfvwrite_r+0x480>
 4108ce8:	a809883a 	mov	r4,r21
 4108cec:	300b883a 	mov	r5,r6
 4108cf0:	410512c0 	call	410512c <_malloc_r>
 4108cf4:	1009883a 	mov	r4,r2
 4108cf8:	1000c726 	beq	r2,zero,4109018 <__sfvwrite_r+0x4b0>
 4108cfc:	81400417 	ldw	r5,16(r16)
 4108d00:	900d883a 	mov	r6,r18
 4108d04:	41059dc0 	call	41059dc <memcpy>
 4108d08:	1009883a 	mov	r4,r2
 4108d0c:	8080030b 	ldhu	r2,12(r16)
 4108d10:	00fedfc4 	movi	r3,-1153
 4108d14:	10c4703a 	and	r2,r2,r3
 4108d18:	10802014 	ori	r2,r2,128
 4108d1c:	8080030d 	sth	r2,12(r16)
 4108d20:	2491883a 	add	r8,r4,r18
 4108d24:	a485c83a 	sub	r2,r20,r18
 4108d28:	81000415 	stw	r4,16(r16)
 4108d2c:	82000015 	stw	r8,0(r16)
 4108d30:	85000515 	stw	r20,20(r16)
 4108d34:	9825883a 	mov	r18,r19
 4108d38:	80800215 	stw	r2,8(r16)
 4108d3c:	982d883a 	mov	r22,r19
 4108d40:	4009883a 	mov	r4,r8
 4108d44:	b00d883a 	mov	r6,r22
 4108d48:	e00b883a 	mov	r5,fp
 4108d4c:	41092300 	call	4109230 <memmove>
 4108d50:	81000217 	ldw	r4,8(r16)
 4108d54:	80800017 	ldw	r2,0(r16)
 4108d58:	9829883a 	mov	r20,r19
 4108d5c:	24a5c83a 	sub	r18,r4,r18
 4108d60:	1585883a 	add	r2,r2,r22
 4108d64:	84800215 	stw	r18,8(r16)
 4108d68:	80800015 	stw	r2,0(r16)
 4108d6c:	0027883a 	mov	r19,zero
 4108d70:	b8800217 	ldw	r2,8(r23)
 4108d74:	e539883a 	add	fp,fp,r20
 4108d78:	1529c83a 	sub	r20,r2,r20
 4108d7c:	bd000215 	stw	r20,8(r23)
 4108d80:	a0000826 	beq	r20,zero,4108da4 <__sfvwrite_r+0x23c>
 4108d84:	81c0030b 	ldhu	r7,12(r16)
 4108d88:	84800217 	ldw	r18,8(r16)
 4108d8c:	82000017 	ldw	r8,0(r16)
 4108d90:	983fbf1e 	bne	r19,zero,4108c90 <__sfvwrite_r+0x128>
 4108d94:	8f000017 	ldw	fp,0(r17)
 4108d98:	8cc00117 	ldw	r19,4(r17)
 4108d9c:	8c400204 	addi	r17,r17,8
 4108da0:	003fba06 	br	4108c8c <__sfvwrite_r+0x124>
 4108da4:	0005883a 	mov	r2,zero
 4108da8:	dfc00b17 	ldw	ra,44(sp)
 4108dac:	df000a17 	ldw	fp,40(sp)
 4108db0:	ddc00917 	ldw	r23,36(sp)
 4108db4:	dd800817 	ldw	r22,32(sp)
 4108db8:	dd400717 	ldw	r21,28(sp)
 4108dbc:	dd000617 	ldw	r20,24(sp)
 4108dc0:	dcc00517 	ldw	r19,20(sp)
 4108dc4:	dc800417 	ldw	r18,16(sp)
 4108dc8:	dc400317 	ldw	r17,12(sp)
 4108dcc:	dc000217 	ldw	r16,8(sp)
 4108dd0:	dec00c04 	addi	sp,sp,48
 4108dd4:	f800283a 	ret
 4108dd8:	800b883a 	mov	r5,r16
 4108ddc:	a809883a 	mov	r4,r21
 4108de0:	41044dc0 	call	41044dc <_fflush_r>
 4108de4:	10002026 	beq	r2,zero,4108e68 <__sfvwrite_r+0x300>
 4108de8:	8080030b 	ldhu	r2,12(r16)
 4108dec:	10801014 	ori	r2,r2,64
 4108df0:	8080030d 	sth	r2,12(r16)
 4108df4:	00bfffc4 	movi	r2,-1
 4108df8:	003feb06 	br	4108da8 <__sfvwrite_r+0x240>
 4108dfc:	0005883a 	mov	r2,zero
 4108e00:	f800283a 	ret
 4108e04:	002d883a 	mov	r22,zero
 4108e08:	0027883a 	mov	r19,zero
 4108e0c:	0005883a 	mov	r2,zero
 4108e10:	0039883a 	mov	fp,zero
 4108e14:	b0001d26 	beq	r22,zero,4108e8c <__sfvwrite_r+0x324>
 4108e18:	10002026 	beq	r2,zero,4108e9c <__sfvwrite_r+0x334>
 4108e1c:	9829883a 	mov	r20,r19
 4108e20:	b500012e 	bgeu	r22,r20,4108e28 <__sfvwrite_r+0x2c0>
 4108e24:	b029883a 	mov	r20,r22
 4108e28:	80800417 	ldw	r2,16(r16)
 4108e2c:	81c00517 	ldw	r7,20(r16)
 4108e30:	1200022e 	bgeu	r2,r8,4108e3c <__sfvwrite_r+0x2d4>
 4108e34:	3ca5883a 	add	r18,r7,r18
 4108e38:	95002216 	blt	r18,r20,4108ec4 <__sfvwrite_r+0x35c>
 4108e3c:	a1c05916 	blt	r20,r7,4108fa4 <__sfvwrite_r+0x43c>
 4108e40:	80800917 	ldw	r2,36(r16)
 4108e44:	81400717 	ldw	r5,28(r16)
 4108e48:	e00d883a 	mov	r6,fp
 4108e4c:	a809883a 	mov	r4,r21
 4108e50:	103ee83a 	callr	r2
 4108e54:	1025883a 	mov	r18,r2
 4108e58:	00bfe30e 	bge	zero,r2,4108de8 <__sfvwrite_r+0x280>
 4108e5c:	9ca7c83a 	sub	r19,r19,r18
 4108e60:	983fdd26 	beq	r19,zero,4108dd8 <__sfvwrite_r+0x270>
 4108e64:	00800044 	movi	r2,1
 4108e68:	b9800217 	ldw	r6,8(r23)
 4108e6c:	e4b9883a 	add	fp,fp,r18
 4108e70:	b4adc83a 	sub	r22,r22,r18
 4108e74:	34a5c83a 	sub	r18,r6,r18
 4108e78:	bc800215 	stw	r18,8(r23)
 4108e7c:	903fc926 	beq	r18,zero,4108da4 <__sfvwrite_r+0x23c>
 4108e80:	84800217 	ldw	r18,8(r16)
 4108e84:	82000017 	ldw	r8,0(r16)
 4108e88:	b03fe31e 	bne	r22,zero,4108e18 <__sfvwrite_r+0x2b0>
 4108e8c:	8d800117 	ldw	r22,4(r17)
 4108e90:	8f000017 	ldw	fp,0(r17)
 4108e94:	8c400204 	addi	r17,r17,8
 4108e98:	b03ffc26 	beq	r22,zero,4108e8c <__sfvwrite_r+0x324>
 4108e9c:	b00d883a 	mov	r6,r22
 4108ea0:	01400284 	movi	r5,10
 4108ea4:	e009883a 	mov	r4,fp
 4108ea8:	da000015 	stw	r8,0(sp)
 4108eac:	410590c0 	call	410590c <memchr>
 4108eb0:	da000017 	ldw	r8,0(sp)
 4108eb4:	10004926 	beq	r2,zero,4108fdc <__sfvwrite_r+0x474>
 4108eb8:	10800044 	addi	r2,r2,1
 4108ebc:	1727c83a 	sub	r19,r2,fp
 4108ec0:	003fd606 	br	4108e1c <__sfvwrite_r+0x2b4>
 4108ec4:	e00b883a 	mov	r5,fp
 4108ec8:	4009883a 	mov	r4,r8
 4108ecc:	900d883a 	mov	r6,r18
 4108ed0:	41092300 	call	4109230 <memmove>
 4108ed4:	80800017 	ldw	r2,0(r16)
 4108ed8:	800b883a 	mov	r5,r16
 4108edc:	a809883a 	mov	r4,r21
 4108ee0:	1485883a 	add	r2,r2,r18
 4108ee4:	80800015 	stw	r2,0(r16)
 4108ee8:	41044dc0 	call	41044dc <_fflush_r>
 4108eec:	103fdb26 	beq	r2,zero,4108e5c <__sfvwrite_r+0x2f4>
 4108ef0:	003fbd06 	br	4108de8 <__sfvwrite_r+0x280>
 4108ef4:	80800417 	ldw	r2,16(r16)
 4108ef8:	12001436 	bltu	r2,r8,4108f4c <__sfvwrite_r+0x3e4>
 4108efc:	85000517 	ldw	r20,20(r16)
 4108f00:	9d001236 	bltu	r19,r20,4108f4c <__sfvwrite_r+0x3e4>
 4108f04:	d8800017 	ldw	r2,0(sp)
 4108f08:	14c0322e 	bgeu	r2,r19,4108fd4 <__sfvwrite_r+0x46c>
 4108f0c:	d9000117 	ldw	r4,4(sp)
 4108f10:	a00b883a 	mov	r5,r20
 4108f14:	41003780 	call	4100378 <__divsi3>
 4108f18:	a00b883a 	mov	r5,r20
 4108f1c:	1009883a 	mov	r4,r2
 4108f20:	410aec00 	call	410aec0 <__mulsi3>
 4108f24:	82000917 	ldw	r8,36(r16)
 4108f28:	81400717 	ldw	r5,28(r16)
 4108f2c:	100f883a 	mov	r7,r2
 4108f30:	e00d883a 	mov	r6,fp
 4108f34:	a809883a 	mov	r4,r21
 4108f38:	403ee83a 	callr	r8
 4108f3c:	1029883a 	mov	r20,r2
 4108f40:	00bfa90e 	bge	zero,r2,4108de8 <__sfvwrite_r+0x280>
 4108f44:	9d27c83a 	sub	r19,r19,r20
 4108f48:	003f8906 	br	4108d70 <__sfvwrite_r+0x208>
 4108f4c:	9029883a 	mov	r20,r18
 4108f50:	9c80012e 	bgeu	r19,r18,4108f58 <__sfvwrite_r+0x3f0>
 4108f54:	9829883a 	mov	r20,r19
 4108f58:	4009883a 	mov	r4,r8
 4108f5c:	a00d883a 	mov	r6,r20
 4108f60:	e00b883a 	mov	r5,fp
 4108f64:	41092300 	call	4109230 <memmove>
 4108f68:	80800217 	ldw	r2,8(r16)
 4108f6c:	81000017 	ldw	r4,0(r16)
 4108f70:	1505c83a 	sub	r2,r2,r20
 4108f74:	2509883a 	add	r4,r4,r20
 4108f78:	80800215 	stw	r2,8(r16)
 4108f7c:	81000015 	stw	r4,0(r16)
 4108f80:	103ff01e 	bne	r2,zero,4108f44 <__sfvwrite_r+0x3dc>
 4108f84:	800b883a 	mov	r5,r16
 4108f88:	a809883a 	mov	r4,r21
 4108f8c:	41044dc0 	call	41044dc <_fflush_r>
 4108f90:	103fec26 	beq	r2,zero,4108f44 <__sfvwrite_r+0x3dc>
 4108f94:	003f9406 	br	4108de8 <__sfvwrite_r+0x280>
 4108f98:	9825883a 	mov	r18,r19
 4108f9c:	982d883a 	mov	r22,r19
 4108fa0:	003f6706 	br	4108d40 <__sfvwrite_r+0x1d8>
 4108fa4:	4009883a 	mov	r4,r8
 4108fa8:	a00d883a 	mov	r6,r20
 4108fac:	e00b883a 	mov	r5,fp
 4108fb0:	41092300 	call	4109230 <memmove>
 4108fb4:	81000217 	ldw	r4,8(r16)
 4108fb8:	80800017 	ldw	r2,0(r16)
 4108fbc:	a025883a 	mov	r18,r20
 4108fc0:	2509c83a 	sub	r4,r4,r20
 4108fc4:	1505883a 	add	r2,r2,r20
 4108fc8:	81000215 	stw	r4,8(r16)
 4108fcc:	80800015 	stw	r2,0(r16)
 4108fd0:	003fa206 	br	4108e5c <__sfvwrite_r+0x2f4>
 4108fd4:	9809883a 	mov	r4,r19
 4108fd8:	003fcd06 	br	4108f10 <__sfvwrite_r+0x3a8>
 4108fdc:	b5000044 	addi	r20,r22,1
 4108fe0:	a027883a 	mov	r19,r20
 4108fe4:	003f8e06 	br	4108e20 <__sfvwrite_r+0x2b8>
 4108fe8:	a809883a 	mov	r4,r21
 4108fec:	41093c00 	call	41093c0 <_realloc_r>
 4108ff0:	1009883a 	mov	r4,r2
 4108ff4:	103f4a1e 	bne	r2,zero,4108d20 <__sfvwrite_r+0x1b8>
 4108ff8:	81400417 	ldw	r5,16(r16)
 4108ffc:	a809883a 	mov	r4,r21
 4109000:	4104a880 	call	4104a88 <_free_r>
 4109004:	8080030b 	ldhu	r2,12(r16)
 4109008:	00c00304 	movi	r3,12
 410900c:	a8c00015 	stw	r3,0(r21)
 4109010:	10bfdfcc 	andi	r2,r2,65407
 4109014:	003f7506 	br	4108dec <__sfvwrite_r+0x284>
 4109018:	00c00304 	movi	r3,12
 410901c:	8080030b 	ldhu	r2,12(r16)
 4109020:	a8c00015 	stw	r3,0(r21)
 4109024:	003f7106 	br	4108dec <__sfvwrite_r+0x284>
 4109028:	00bfffc4 	movi	r2,-1
 410902c:	003f5e06 	br	4108da8 <__sfvwrite_r+0x240>

04109030 <_isatty_r>:
 4109030:	defffe04 	addi	sp,sp,-8
 4109034:	dc000015 	stw	r16,0(sp)
 4109038:	00810474 	movhi	r2,1041
 410903c:	2021883a 	mov	r16,r4
 4109040:	2809883a 	mov	r4,r5
 4109044:	dfc00115 	stw	ra,4(sp)
 4109048:	10131f15 	stw	zero,19580(r2)
 410904c:	410d8f80 	call	410d8f8 <isatty>
 4109050:	10ffffd8 	cmpnei	r3,r2,-1
 4109054:	18000426 	beq	r3,zero,4109068 <_isatty_r+0x38>
 4109058:	dfc00117 	ldw	ra,4(sp)
 410905c:	dc000017 	ldw	r16,0(sp)
 4109060:	dec00204 	addi	sp,sp,8
 4109064:	f800283a 	ret
 4109068:	00c10474 	movhi	r3,1041
 410906c:	18d31f17 	ldw	r3,19580(r3)
 4109070:	183ff926 	beq	r3,zero,4109058 <_isatty_r+0x28>
 4109074:	80c00015 	stw	r3,0(r16)
 4109078:	dfc00117 	ldw	ra,4(sp)
 410907c:	dc000017 	ldw	r16,0(sp)
 4109080:	dec00204 	addi	sp,sp,8
 4109084:	f800283a 	ret

04109088 <_setlocale_r>:
 4109088:	30001626 	beq	r6,zero,41090e4 <_setlocale_r+0x5c>
 410908c:	01410474 	movhi	r5,1041
 4109090:	defffe04 	addi	sp,sp,-8
 4109094:	2943bf04 	addi	r5,r5,3836
 4109098:	3009883a 	mov	r4,r6
 410909c:	dc000015 	stw	r16,0(sp)
 41090a0:	dfc00115 	stw	ra,4(sp)
 41090a4:	3021883a 	mov	r16,r6
 41090a8:	41099240 	call	4109924 <strcmp>
 41090ac:	1000061e 	bne	r2,zero,41090c8 <_setlocale_r+0x40>
 41090b0:	00810474 	movhi	r2,1041
 41090b4:	1083be04 	addi	r2,r2,3832
 41090b8:	dfc00117 	ldw	ra,4(sp)
 41090bc:	dc000017 	ldw	r16,0(sp)
 41090c0:	dec00204 	addi	sp,sp,8
 41090c4:	f800283a 	ret
 41090c8:	80800003 	ldbu	r2,0(r16)
 41090cc:	10bfef44 	addi	r2,r2,-67
 41090d0:	10000726 	beq	r2,zero,41090f0 <_setlocale_r+0x68>
 41090d4:	80800003 	ldbu	r2,0(r16)
 41090d8:	103ff526 	beq	r2,zero,41090b0 <_setlocale_r+0x28>
 41090dc:	0005883a 	mov	r2,zero
 41090e0:	003ff506 	br	41090b8 <_setlocale_r+0x30>
 41090e4:	00810474 	movhi	r2,1041
 41090e8:	1083be04 	addi	r2,r2,3832
 41090ec:	f800283a 	ret
 41090f0:	80800043 	ldbu	r2,1(r16)
 41090f4:	103fee26 	beq	r2,zero,41090b0 <_setlocale_r+0x28>
 41090f8:	003ff606 	br	41090d4 <_setlocale_r+0x4c>

041090fc <__locale_mb_cur_max>:
 41090fc:	00810474 	movhi	r2,1041
 4109100:	10871907 	ldb	r2,7268(r2)
 4109104:	f800283a 	ret

04109108 <setlocale>:
 4109108:	28001626 	beq	r5,zero,4109164 <setlocale+0x5c>
 410910c:	defffe04 	addi	sp,sp,-8
 4109110:	dc000015 	stw	r16,0(sp)
 4109114:	2821883a 	mov	r16,r5
 4109118:	01410474 	movhi	r5,1041
 410911c:	2943bf04 	addi	r5,r5,3836
 4109120:	8009883a 	mov	r4,r16
 4109124:	dfc00115 	stw	ra,4(sp)
 4109128:	41099240 	call	4109924 <strcmp>
 410912c:	1000061e 	bne	r2,zero,4109148 <setlocale+0x40>
 4109130:	00810474 	movhi	r2,1041
 4109134:	1083be04 	addi	r2,r2,3832
 4109138:	dfc00117 	ldw	ra,4(sp)
 410913c:	dc000017 	ldw	r16,0(sp)
 4109140:	dec00204 	addi	sp,sp,8
 4109144:	f800283a 	ret
 4109148:	80800003 	ldbu	r2,0(r16)
 410914c:	10bfef44 	addi	r2,r2,-67
 4109150:	10000726 	beq	r2,zero,4109170 <setlocale+0x68>
 4109154:	80800003 	ldbu	r2,0(r16)
 4109158:	103ff526 	beq	r2,zero,4109130 <setlocale+0x28>
 410915c:	0005883a 	mov	r2,zero
 4109160:	003ff506 	br	4109138 <setlocale+0x30>
 4109164:	00810474 	movhi	r2,1041
 4109168:	1083be04 	addi	r2,r2,3832
 410916c:	f800283a 	ret
 4109170:	80800043 	ldbu	r2,1(r16)
 4109174:	103fee26 	beq	r2,zero,4109130 <setlocale+0x28>
 4109178:	003ff606 	br	4109154 <setlocale+0x4c>

0410917c <_lseek_r>:
 410917c:	2807883a 	mov	r3,r5
 4109180:	defffe04 	addi	sp,sp,-8
 4109184:	dc000015 	stw	r16,0(sp)
 4109188:	300b883a 	mov	r5,r6
 410918c:	00810474 	movhi	r2,1041
 4109190:	380d883a 	mov	r6,r7
 4109194:	2021883a 	mov	r16,r4
 4109198:	1809883a 	mov	r4,r3
 410919c:	dfc00115 	stw	ra,4(sp)
 41091a0:	10131f15 	stw	zero,19580(r2)
 41091a4:	410dc380 	call	410dc38 <lseek>
 41091a8:	10ffffd8 	cmpnei	r3,r2,-1
 41091ac:	18000426 	beq	r3,zero,41091c0 <_lseek_r+0x44>
 41091b0:	dfc00117 	ldw	ra,4(sp)
 41091b4:	dc000017 	ldw	r16,0(sp)
 41091b8:	dec00204 	addi	sp,sp,8
 41091bc:	f800283a 	ret
 41091c0:	00c10474 	movhi	r3,1041
 41091c4:	18d31f17 	ldw	r3,19580(r3)
 41091c8:	183ff926 	beq	r3,zero,41091b0 <_lseek_r+0x34>
 41091cc:	80c00015 	stw	r3,0(r16)
 41091d0:	dfc00117 	ldw	ra,4(sp)
 41091d4:	dc000017 	ldw	r16,0(sp)
 41091d8:	dec00204 	addi	sp,sp,8
 41091dc:	f800283a 	ret

041091e0 <_mbtowc_r>:
 41091e0:	00810474 	movhi	r2,1041
 41091e4:	10870817 	ldw	r2,7200(r2)
 41091e8:	1000683a 	jmp	r2

041091ec <__ascii_mbtowc>:
 41091ec:	deffff04 	addi	sp,sp,-4
 41091f0:	28000826 	beq	r5,zero,4109214 <__ascii_mbtowc+0x28>
 41091f4:	30000926 	beq	r6,zero,410921c <__ascii_mbtowc+0x30>
 41091f8:	38000b26 	beq	r7,zero,4109228 <__ascii_mbtowc+0x3c>
 41091fc:	30800003 	ldbu	r2,0(r6)
 4109200:	28800015 	stw	r2,0(r5)
 4109204:	30800003 	ldbu	r2,0(r6)
 4109208:	1004c03a 	cmpne	r2,r2,zero
 410920c:	dec00104 	addi	sp,sp,4
 4109210:	f800283a 	ret
 4109214:	d80b883a 	mov	r5,sp
 4109218:	303ff71e 	bne	r6,zero,41091f8 <__ascii_mbtowc+0xc>
 410921c:	0005883a 	mov	r2,zero
 4109220:	dec00104 	addi	sp,sp,4
 4109224:	f800283a 	ret
 4109228:	00bfff84 	movi	r2,-2
 410922c:	003ff706 	br	410920c <__ascii_mbtowc+0x20>

04109230 <memmove>:
 4109230:	2005883a 	mov	r2,r4
 4109234:	29000a2e 	bgeu	r5,r4,4109260 <memmove+0x30>
 4109238:	2989883a 	add	r4,r5,r6
 410923c:	1100082e 	bgeu	r2,r4,4109260 <memmove+0x30>
 4109240:	1187883a 	add	r3,r2,r6
 4109244:	30003e26 	beq	r6,zero,4109340 <memmove+0x110>
 4109248:	217fffc3 	ldbu	r5,-1(r4)
 410924c:	18ffffc4 	addi	r3,r3,-1
 4109250:	213fffc4 	addi	r4,r4,-1
 4109254:	19400005 	stb	r5,0(r3)
 4109258:	10fffb1e 	bne	r2,r3,4109248 <memmove+0x18>
 410925c:	f800283a 	ret
 4109260:	30c00430 	cmpltui	r3,r6,16
 4109264:	18000b26 	beq	r3,zero,4109294 <memmove+0x64>
 4109268:	1007883a 	mov	r3,r2
 410926c:	31ffffc4 	addi	r7,r6,-1
 4109270:	30003726 	beq	r6,zero,4109350 <memmove+0x120>
 4109274:	39c00044 	addi	r7,r7,1
 4109278:	29cf883a 	add	r7,r5,r7
 410927c:	29800003 	ldbu	r6,0(r5)
 4109280:	29400044 	addi	r5,r5,1
 4109284:	18c00044 	addi	r3,r3,1
 4109288:	19bfffc5 	stb	r6,-1(r3)
 410928c:	29fffb1e 	bne	r5,r7,410927c <memmove+0x4c>
 4109290:	f800283a 	ret
 4109294:	2886b03a 	or	r3,r5,r2
 4109298:	18c000cc 	andi	r3,r3,3
 410929c:	1800291e 	bne	r3,zero,4109344 <memmove+0x114>
 41092a0:	327ffc04 	addi	r9,r6,-16
 41092a4:	4812d13a 	srli	r9,r9,4
 41092a8:	280f883a 	mov	r7,r5
 41092ac:	1007883a 	mov	r3,r2
 41092b0:	4a400044 	addi	r9,r9,1
 41092b4:	4812913a 	slli	r9,r9,4
 41092b8:	1251883a 	add	r8,r2,r9
 41092bc:	39000017 	ldw	r4,0(r7)
 41092c0:	39c00404 	addi	r7,r7,16
 41092c4:	18c00404 	addi	r3,r3,16
 41092c8:	193ffc15 	stw	r4,-16(r3)
 41092cc:	393ffd17 	ldw	r4,-12(r7)
 41092d0:	193ffd15 	stw	r4,-12(r3)
 41092d4:	393ffe17 	ldw	r4,-8(r7)
 41092d8:	193ffe15 	stw	r4,-8(r3)
 41092dc:	393fff17 	ldw	r4,-4(r7)
 41092e0:	193fff15 	stw	r4,-4(r3)
 41092e4:	40fff51e 	bne	r8,r3,41092bc <memmove+0x8c>
 41092e8:	3100030c 	andi	r4,r6,12
 41092ec:	2a4b883a 	add	r5,r5,r9
 41092f0:	320003cc 	andi	r8,r6,15
 41092f4:	20001726 	beq	r4,zero,4109354 <memmove+0x124>
 41092f8:	2813883a 	mov	r9,r5
 41092fc:	180f883a 	mov	r7,r3
 4109300:	4a800017 	ldw	r10,0(r9)
 4109304:	39c00104 	addi	r7,r7,4
 4109308:	41c9c83a 	sub	r4,r8,r7
 410930c:	1909883a 	add	r4,r3,r4
 4109310:	21000128 	cmpgeui	r4,r4,4
 4109314:	3abfff15 	stw	r10,-4(r7)
 4109318:	4a400104 	addi	r9,r9,4
 410931c:	203ff81e 	bne	r4,zero,4109300 <memmove+0xd0>
 4109320:	413fff04 	addi	r4,r8,-4
 4109324:	2008d0ba 	srli	r4,r4,2
 4109328:	318000cc 	andi	r6,r6,3
 410932c:	21000044 	addi	r4,r4,1
 4109330:	200890ba 	slli	r4,r4,2
 4109334:	1907883a 	add	r3,r3,r4
 4109338:	290b883a 	add	r5,r5,r4
 410933c:	003fcb06 	br	410926c <memmove+0x3c>
 4109340:	f800283a 	ret
 4109344:	31ffffc4 	addi	r7,r6,-1
 4109348:	1007883a 	mov	r3,r2
 410934c:	003fc906 	br	4109274 <memmove+0x44>
 4109350:	f800283a 	ret
 4109354:	400d883a 	mov	r6,r8
 4109358:	003fc406 	br	410926c <memmove+0x3c>

0410935c <_read_r>:
 410935c:	2807883a 	mov	r3,r5
 4109360:	defffe04 	addi	sp,sp,-8
 4109364:	dc000015 	stw	r16,0(sp)
 4109368:	300b883a 	mov	r5,r6
 410936c:	00810474 	movhi	r2,1041
 4109370:	380d883a 	mov	r6,r7
 4109374:	2021883a 	mov	r16,r4
 4109378:	1809883a 	mov	r4,r3
 410937c:	dfc00115 	stw	ra,4(sp)
 4109380:	10131f15 	stw	zero,19580(r2)
 4109384:	410de180 	call	410de18 <read>
 4109388:	10ffffd8 	cmpnei	r3,r2,-1
 410938c:	18000426 	beq	r3,zero,41093a0 <_read_r+0x44>
 4109390:	dfc00117 	ldw	ra,4(sp)
 4109394:	dc000017 	ldw	r16,0(sp)
 4109398:	dec00204 	addi	sp,sp,8
 410939c:	f800283a 	ret
 41093a0:	00c10474 	movhi	r3,1041
 41093a4:	18d31f17 	ldw	r3,19580(r3)
 41093a8:	183ff926 	beq	r3,zero,4109390 <_read_r+0x34>
 41093ac:	80c00015 	stw	r3,0(r16)
 41093b0:	dfc00117 	ldw	ra,4(sp)
 41093b4:	dc000017 	ldw	r16,0(sp)
 41093b8:	dec00204 	addi	sp,sp,8
 41093bc:	f800283a 	ret

041093c0 <_realloc_r>:
 41093c0:	defff504 	addi	sp,sp,-44
 41093c4:	dc800315 	stw	r18,12(sp)
 41093c8:	dfc00a15 	stw	ra,40(sp)
 41093cc:	df000915 	stw	fp,36(sp)
 41093d0:	ddc00815 	stw	r23,32(sp)
 41093d4:	dd800715 	stw	r22,28(sp)
 41093d8:	dd400615 	stw	r21,24(sp)
 41093dc:	dd000515 	stw	r20,20(sp)
 41093e0:	dcc00415 	stw	r19,16(sp)
 41093e4:	dc400215 	stw	r17,8(sp)
 41093e8:	dc000115 	stw	r16,4(sp)
 41093ec:	3025883a 	mov	r18,r6
 41093f0:	28008b26 	beq	r5,zero,4109620 <_realloc_r+0x260>
 41093f4:	2821883a 	mov	r16,r5
 41093f8:	2027883a 	mov	r19,r4
 41093fc:	944002c4 	addi	r17,r18,11
 4109400:	410dd940 	call	410dd94 <__malloc_lock>
 4109404:	888005f0 	cmpltui	r2,r17,23
 4109408:	1000521e 	bne	r2,zero,4109554 <_realloc_r+0x194>
 410940c:	017ffe04 	movi	r5,-8
 4109410:	8962703a 	and	r17,r17,r5
 4109414:	8807883a 	mov	r3,r17
 4109418:	88005116 	blt	r17,zero,4109560 <_realloc_r+0x1a0>
 410941c:	8c805036 	bltu	r17,r18,4109560 <_realloc_r+0x1a0>
 4109420:	80bfff17 	ldw	r2,-4(r16)
 4109424:	017fff04 	movi	r5,-4
 4109428:	857ffe04 	addi	r21,r16,-8
 410942c:	1168703a 	and	r20,r2,r5
 4109430:	ad2d883a 	add	r22,r21,r20
 4109434:	a0c0390e 	bge	r20,r3,410951c <_realloc_r+0x15c>
 4109438:	07010474 	movhi	fp,1041
 410943c:	e705cd04 	addi	fp,fp,5940
 4109440:	e2000217 	ldw	r8,8(fp)
 4109444:	b1000117 	ldw	r4,4(r22)
 4109448:	45808e26 	beq	r8,r22,4109684 <_realloc_r+0x2c4>
 410944c:	01bfff84 	movi	r6,-2
 4109450:	218c703a 	and	r6,r4,r6
 4109454:	b18d883a 	add	r6,r22,r6
 4109458:	31800117 	ldw	r6,4(r6)
 410945c:	3180004c 	andi	r6,r6,1
 4109460:	30004f1e 	bne	r6,zero,41095a0 <_realloc_r+0x1e0>
 4109464:	2148703a 	and	r4,r4,r5
 4109468:	a10b883a 	add	r5,r20,r4
 410946c:	28c0bf0e 	bge	r5,r3,410976c <_realloc_r+0x3ac>
 4109470:	1080004c 	andi	r2,r2,1
 4109474:	10004c1e 	bne	r2,zero,41095a8 <_realloc_r+0x1e8>
 4109478:	81fffe17 	ldw	r7,-8(r16)
 410947c:	00bfff04 	movi	r2,-4
 4109480:	a9cfc83a 	sub	r7,r21,r7
 4109484:	39400117 	ldw	r5,4(r7)
 4109488:	288a703a 	and	r5,r5,r2
 410948c:	b0000426 	beq	r22,zero,41094a0 <_realloc_r+0xe0>
 4109490:	a16f883a 	add	r23,r20,r5
 4109494:	b92f883a 	add	r23,r23,r4
 4109498:	4580bf26 	beq	r8,r22,4109798 <_realloc_r+0x3d8>
 410949c:	b8c0930e 	bge	r23,r3,41096ec <_realloc_r+0x32c>
 41094a0:	38004126 	beq	r7,zero,41095a8 <_realloc_r+0x1e8>
 41094a4:	a16f883a 	add	r23,r20,r5
 41094a8:	b8c03f16 	blt	r23,r3,41095a8 <_realloc_r+0x1e8>
 41094ac:	38800317 	ldw	r2,12(r7)
 41094b0:	38c00217 	ldw	r3,8(r7)
 41094b4:	a1bfff04 	addi	r6,r20,-4
 41094b8:	31400968 	cmpgeui	r5,r6,37
 41094bc:	18800315 	stw	r2,12(r3)
 41094c0:	10c00215 	stw	r3,8(r2)
 41094c4:	39000204 	addi	r4,r7,8
 41094c8:	3ded883a 	add	r22,r7,r23
 41094cc:	2800941e 	bne	r5,zero,4109720 <_realloc_r+0x360>
 41094d0:	30800530 	cmpltui	r2,r6,20
 41094d4:	80c00017 	ldw	r3,0(r16)
 41094d8:	1000df1e 	bne	r2,zero,4109858 <_realloc_r+0x498>
 41094dc:	38c00215 	stw	r3,8(r7)
 41094e0:	80c00117 	ldw	r3,4(r16)
 41094e4:	30800728 	cmpgeui	r2,r6,28
 41094e8:	38c00315 	stw	r3,12(r7)
 41094ec:	1000dc1e 	bne	r2,zero,4109860 <_realloc_r+0x4a0>
 41094f0:	80c00217 	ldw	r3,8(r16)
 41094f4:	38800404 	addi	r2,r7,16
 41094f8:	84000204 	addi	r16,r16,8
 41094fc:	10c00015 	stw	r3,0(r2)
 4109500:	80c00117 	ldw	r3,4(r16)
 4109504:	b829883a 	mov	r20,r23
 4109508:	382b883a 	mov	r21,r7
 410950c:	10c00115 	stw	r3,4(r2)
 4109510:	80c00217 	ldw	r3,8(r16)
 4109514:	2021883a 	mov	r16,r4
 4109518:	10c00215 	stw	r3,8(r2)
 410951c:	a9800117 	ldw	r6,4(r21)
 4109520:	a445c83a 	sub	r2,r20,r17
 4109524:	10c00430 	cmpltui	r3,r2,16
 4109528:	3180004c 	andi	r6,r6,1
 410952c:	18004926 	beq	r3,zero,4109654 <_realloc_r+0x294>
 4109530:	a18cb03a 	or	r6,r20,r6
 4109534:	a9800115 	stw	r6,4(r21)
 4109538:	b0800117 	ldw	r2,4(r22)
 410953c:	10800054 	ori	r2,r2,1
 4109540:	b0800115 	stw	r2,4(r22)
 4109544:	9809883a 	mov	r4,r19
 4109548:	410ddb80 	call	410ddb8 <__malloc_unlock>
 410954c:	8025883a 	mov	r18,r16
 4109550:	00000606 	br	410956c <_realloc_r+0x1ac>
 4109554:	04400404 	movi	r17,16
 4109558:	00c00404 	movi	r3,16
 410955c:	8cbfb02e 	bgeu	r17,r18,4109420 <_realloc_r+0x60>
 4109560:	00800304 	movi	r2,12
 4109564:	98800015 	stw	r2,0(r19)
 4109568:	0025883a 	mov	r18,zero
 410956c:	9005883a 	mov	r2,r18
 4109570:	dfc00a17 	ldw	ra,40(sp)
 4109574:	df000917 	ldw	fp,36(sp)
 4109578:	ddc00817 	ldw	r23,32(sp)
 410957c:	dd800717 	ldw	r22,28(sp)
 4109580:	dd400617 	ldw	r21,24(sp)
 4109584:	dd000517 	ldw	r20,20(sp)
 4109588:	dcc00417 	ldw	r19,16(sp)
 410958c:	dc800317 	ldw	r18,12(sp)
 4109590:	dc400217 	ldw	r17,8(sp)
 4109594:	dc000117 	ldw	r16,4(sp)
 4109598:	dec00b04 	addi	sp,sp,44
 410959c:	f800283a 	ret
 41095a0:	1080004c 	andi	r2,r2,1
 41095a4:	10006c26 	beq	r2,zero,4109758 <_realloc_r+0x398>
 41095a8:	900b883a 	mov	r5,r18
 41095ac:	9809883a 	mov	r4,r19
 41095b0:	410512c0 	call	410512c <_malloc_r>
 41095b4:	1025883a 	mov	r18,r2
 41095b8:	10001626 	beq	r2,zero,4109614 <_realloc_r+0x254>
 41095bc:	80bfff17 	ldw	r2,-4(r16)
 41095c0:	013fff84 	movi	r4,-2
 41095c4:	90fffe04 	addi	r3,r18,-8
 41095c8:	1104703a 	and	r2,r2,r4
 41095cc:	a885883a 	add	r2,r21,r2
 41095d0:	10c05b26 	beq	r2,r3,4109740 <_realloc_r+0x380>
 41095d4:	a1bfff04 	addi	r6,r20,-4
 41095d8:	30800968 	cmpgeui	r2,r6,37
 41095dc:	10006a1e 	bne	r2,zero,4109788 <_realloc_r+0x3c8>
 41095e0:	30800530 	cmpltui	r2,r6,20
 41095e4:	81000017 	ldw	r4,0(r16)
 41095e8:	10003726 	beq	r2,zero,41096c8 <_realloc_r+0x308>
 41095ec:	9005883a 	mov	r2,r18
 41095f0:	8007883a 	mov	r3,r16
 41095f4:	11000015 	stw	r4,0(r2)
 41095f8:	19000117 	ldw	r4,4(r3)
 41095fc:	11000115 	stw	r4,4(r2)
 4109600:	18c00217 	ldw	r3,8(r3)
 4109604:	10c00215 	stw	r3,8(r2)
 4109608:	800b883a 	mov	r5,r16
 410960c:	9809883a 	mov	r4,r19
 4109610:	4104a880 	call	4104a88 <_free_r>
 4109614:	9809883a 	mov	r4,r19
 4109618:	410ddb80 	call	410ddb8 <__malloc_unlock>
 410961c:	003fd306 	br	410956c <_realloc_r+0x1ac>
 4109620:	300b883a 	mov	r5,r6
 4109624:	dfc00a17 	ldw	ra,40(sp)
 4109628:	df000917 	ldw	fp,36(sp)
 410962c:	ddc00817 	ldw	r23,32(sp)
 4109630:	dd800717 	ldw	r22,28(sp)
 4109634:	dd400617 	ldw	r21,24(sp)
 4109638:	dd000517 	ldw	r20,20(sp)
 410963c:	dcc00417 	ldw	r19,16(sp)
 4109640:	dc800317 	ldw	r18,12(sp)
 4109644:	dc400217 	ldw	r17,8(sp)
 4109648:	dc000117 	ldw	r16,4(sp)
 410964c:	dec00b04 	addi	sp,sp,44
 4109650:	410512c1 	jmpi	410512c <_malloc_r>
 4109654:	344cb03a 	or	r6,r6,r17
 4109658:	a9800115 	stw	r6,4(r21)
 410965c:	ac4b883a 	add	r5,r21,r17
 4109660:	10800054 	ori	r2,r2,1
 4109664:	28800115 	stw	r2,4(r5)
 4109668:	b0800117 	ldw	r2,4(r22)
 410966c:	29400204 	addi	r5,r5,8
 4109670:	9809883a 	mov	r4,r19
 4109674:	10800054 	ori	r2,r2,1
 4109678:	b0800115 	stw	r2,4(r22)
 410967c:	4104a880 	call	4104a88 <_free_r>
 4109680:	003fb006 	br	4109544 <_realloc_r+0x184>
 4109684:	2148703a 	and	r4,r4,r5
 4109688:	a10b883a 	add	r5,r20,r4
 410968c:	89800404 	addi	r6,r17,16
 4109690:	29bf7716 	blt	r5,r6,4109470 <_realloc_r+0xb0>
 4109694:	ac6b883a 	add	r21,r21,r17
 4109698:	2c45c83a 	sub	r2,r5,r17
 410969c:	e5400215 	stw	r21,8(fp)
 41096a0:	10800054 	ori	r2,r2,1
 41096a4:	a8800115 	stw	r2,4(r21)
 41096a8:	80bfff17 	ldw	r2,-4(r16)
 41096ac:	9809883a 	mov	r4,r19
 41096b0:	8025883a 	mov	r18,r16
 41096b4:	1080004c 	andi	r2,r2,1
 41096b8:	1462b03a 	or	r17,r2,r17
 41096bc:	847fff15 	stw	r17,-4(r16)
 41096c0:	410ddb80 	call	410ddb8 <__malloc_unlock>
 41096c4:	003fa906 	br	410956c <_realloc_r+0x1ac>
 41096c8:	91000015 	stw	r4,0(r18)
 41096cc:	80c00117 	ldw	r3,4(r16)
 41096d0:	30800728 	cmpgeui	r2,r6,28
 41096d4:	90c00115 	stw	r3,4(r18)
 41096d8:	1000551e 	bne	r2,zero,4109830 <_realloc_r+0x470>
 41096dc:	81000217 	ldw	r4,8(r16)
 41096e0:	80c00204 	addi	r3,r16,8
 41096e4:	90800204 	addi	r2,r18,8
 41096e8:	003fc206 	br	41095f4 <_realloc_r+0x234>
 41096ec:	b0800317 	ldw	r2,12(r22)
 41096f0:	b0c00217 	ldw	r3,8(r22)
 41096f4:	a1bfff04 	addi	r6,r20,-4
 41096f8:	31400968 	cmpgeui	r5,r6,37
 41096fc:	18800315 	stw	r2,12(r3)
 4109700:	10c00215 	stw	r3,8(r2)
 4109704:	38c00217 	ldw	r3,8(r7)
 4109708:	38800317 	ldw	r2,12(r7)
 410970c:	39000204 	addi	r4,r7,8
 4109710:	3ded883a 	add	r22,r7,r23
 4109714:	18800315 	stw	r2,12(r3)
 4109718:	10c00215 	stw	r3,8(r2)
 410971c:	283f6c26 	beq	r5,zero,41094d0 <_realloc_r+0x110>
 4109720:	800b883a 	mov	r5,r16
 4109724:	d9c00015 	stw	r7,0(sp)
 4109728:	41092300 	call	4109230 <memmove>
 410972c:	d9c00017 	ldw	r7,0(sp)
 4109730:	1021883a 	mov	r16,r2
 4109734:	b829883a 	mov	r20,r23
 4109738:	382b883a 	mov	r21,r7
 410973c:	003f7706 	br	410951c <_realloc_r+0x15c>
 4109740:	90bfff17 	ldw	r2,-4(r18)
 4109744:	00ffff04 	movi	r3,-4
 4109748:	10c4703a 	and	r2,r2,r3
 410974c:	a0a9883a 	add	r20,r20,r2
 4109750:	ad2d883a 	add	r22,r21,r20
 4109754:	003f7106 	br	410951c <_realloc_r+0x15c>
 4109758:	81fffe17 	ldw	r7,-8(r16)
 410975c:	a9cfc83a 	sub	r7,r21,r7
 4109760:	38800117 	ldw	r2,4(r7)
 4109764:	114a703a 	and	r5,r2,r5
 4109768:	003f4d06 	br	41094a0 <_realloc_r+0xe0>
 410976c:	b0800317 	ldw	r2,12(r22)
 4109770:	b0c00217 	ldw	r3,8(r22)
 4109774:	2829883a 	mov	r20,r5
 4109778:	a96d883a 	add	r22,r21,r5
 410977c:	18800315 	stw	r2,12(r3)
 4109780:	10c00215 	stw	r3,8(r2)
 4109784:	003f6506 	br	410951c <_realloc_r+0x15c>
 4109788:	800b883a 	mov	r5,r16
 410978c:	9009883a 	mov	r4,r18
 4109790:	41092300 	call	4109230 <memmove>
 4109794:	003f9c06 	br	4109608 <_realloc_r+0x248>
 4109798:	88800404 	addi	r2,r17,16
 410979c:	b8bf4016 	blt	r23,r2,41094a0 <_realloc_r+0xe0>
 41097a0:	38800317 	ldw	r2,12(r7)
 41097a4:	38c00217 	ldw	r3,8(r7)
 41097a8:	a1bfff04 	addi	r6,r20,-4
 41097ac:	31000968 	cmpgeui	r4,r6,37
 41097b0:	18800315 	stw	r2,12(r3)
 41097b4:	10c00215 	stw	r3,8(r2)
 41097b8:	3c800204 	addi	r18,r7,8
 41097bc:	20003b1e 	bne	r4,zero,41098ac <_realloc_r+0x4ec>
 41097c0:	30800530 	cmpltui	r2,r6,20
 41097c4:	80c00017 	ldw	r3,0(r16)
 41097c8:	1000361e 	bne	r2,zero,41098a4 <_realloc_r+0x4e4>
 41097cc:	38c00215 	stw	r3,8(r7)
 41097d0:	80c00117 	ldw	r3,4(r16)
 41097d4:	30800728 	cmpgeui	r2,r6,28
 41097d8:	38c00315 	stw	r3,12(r7)
 41097dc:	1000401e 	bne	r2,zero,41098e0 <_realloc_r+0x520>
 41097e0:	80c00217 	ldw	r3,8(r16)
 41097e4:	38800404 	addi	r2,r7,16
 41097e8:	84000204 	addi	r16,r16,8
 41097ec:	10c00015 	stw	r3,0(r2)
 41097f0:	80c00117 	ldw	r3,4(r16)
 41097f4:	10c00115 	stw	r3,4(r2)
 41097f8:	80c00217 	ldw	r3,8(r16)
 41097fc:	10c00215 	stw	r3,8(r2)
 4109800:	3c47883a 	add	r3,r7,r17
 4109804:	bc45c83a 	sub	r2,r23,r17
 4109808:	e0c00215 	stw	r3,8(fp)
 410980c:	10800054 	ori	r2,r2,1
 4109810:	18800115 	stw	r2,4(r3)
 4109814:	38800117 	ldw	r2,4(r7)
 4109818:	9809883a 	mov	r4,r19
 410981c:	1080004c 	andi	r2,r2,1
 4109820:	1462b03a 	or	r17,r2,r17
 4109824:	3c400115 	stw	r17,4(r7)
 4109828:	410ddb80 	call	410ddb8 <__malloc_unlock>
 410982c:	003f4f06 	br	410956c <_realloc_r+0x1ac>
 4109830:	80800217 	ldw	r2,8(r16)
 4109834:	31800920 	cmpeqi	r6,r6,36
 4109838:	90800215 	stw	r2,8(r18)
 410983c:	80800317 	ldw	r2,12(r16)
 4109840:	90800315 	stw	r2,12(r18)
 4109844:	81000417 	ldw	r4,16(r16)
 4109848:	30000f1e 	bne	r6,zero,4109888 <_realloc_r+0x4c8>
 410984c:	80c00404 	addi	r3,r16,16
 4109850:	90800404 	addi	r2,r18,16
 4109854:	003f6706 	br	41095f4 <_realloc_r+0x234>
 4109858:	2005883a 	mov	r2,r4
 410985c:	003f2706 	br	41094fc <_realloc_r+0x13c>
 4109860:	80800217 	ldw	r2,8(r16)
 4109864:	31800920 	cmpeqi	r6,r6,36
 4109868:	38800415 	stw	r2,16(r7)
 410986c:	80800317 	ldw	r2,12(r16)
 4109870:	38800515 	stw	r2,20(r7)
 4109874:	80c00417 	ldw	r3,16(r16)
 4109878:	3000121e 	bne	r6,zero,41098c4 <_realloc_r+0x504>
 410987c:	38800604 	addi	r2,r7,24
 4109880:	84000404 	addi	r16,r16,16
 4109884:	003f1d06 	br	41094fc <_realloc_r+0x13c>
 4109888:	91000415 	stw	r4,16(r18)
 410988c:	81000517 	ldw	r4,20(r16)
 4109890:	80c00604 	addi	r3,r16,24
 4109894:	90800604 	addi	r2,r18,24
 4109898:	91000515 	stw	r4,20(r18)
 410989c:	81000617 	ldw	r4,24(r16)
 41098a0:	003f5406 	br	41095f4 <_realloc_r+0x234>
 41098a4:	9005883a 	mov	r2,r18
 41098a8:	003fd006 	br	41097ec <_realloc_r+0x42c>
 41098ac:	800b883a 	mov	r5,r16
 41098b0:	9009883a 	mov	r4,r18
 41098b4:	d9c00015 	stw	r7,0(sp)
 41098b8:	41092300 	call	4109230 <memmove>
 41098bc:	d9c00017 	ldw	r7,0(sp)
 41098c0:	003fcf06 	br	4109800 <_realloc_r+0x440>
 41098c4:	84000604 	addi	r16,r16,24
 41098c8:	38c00615 	stw	r3,24(r7)
 41098cc:	80ffff17 	ldw	r3,-4(r16)
 41098d0:	38800804 	addi	r2,r7,32
 41098d4:	38c00715 	stw	r3,28(r7)
 41098d8:	80c00017 	ldw	r3,0(r16)
 41098dc:	003f0706 	br	41094fc <_realloc_r+0x13c>
 41098e0:	80800217 	ldw	r2,8(r16)
 41098e4:	31800920 	cmpeqi	r6,r6,36
 41098e8:	38800415 	stw	r2,16(r7)
 41098ec:	80800317 	ldw	r2,12(r16)
 41098f0:	38800515 	stw	r2,20(r7)
 41098f4:	80c00417 	ldw	r3,16(r16)
 41098f8:	3000031e 	bne	r6,zero,4109908 <_realloc_r+0x548>
 41098fc:	38800604 	addi	r2,r7,24
 4109900:	84000404 	addi	r16,r16,16
 4109904:	003fb906 	br	41097ec <_realloc_r+0x42c>
 4109908:	84000604 	addi	r16,r16,24
 410990c:	38c00615 	stw	r3,24(r7)
 4109910:	80ffff17 	ldw	r3,-4(r16)
 4109914:	38800804 	addi	r2,r7,32
 4109918:	38c00715 	stw	r3,28(r7)
 410991c:	80c00017 	ldw	r3,0(r16)
 4109920:	003fb206 	br	41097ec <_realloc_r+0x42c>

04109924 <strcmp>:
 4109924:	2144b03a 	or	r2,r4,r5
 4109928:	108000cc 	andi	r2,r2,3
 410992c:	1000141e 	bne	r2,zero,4109980 <strcmp+0x5c>
 4109930:	20800017 	ldw	r2,0(r4)
 4109934:	28c00017 	ldw	r3,0(r5)
 4109938:	10c0111e 	bne	r2,r3,4109980 <strcmp+0x5c>
 410993c:	01ffbff4 	movhi	r7,65279
 4109940:	01a02074 	movhi	r6,32897
 4109944:	39ffbfc4 	addi	r7,r7,-257
 4109948:	31a02004 	addi	r6,r6,-32640
 410994c:	00000306 	br	410995c <strcmp+0x38>
 4109950:	20800017 	ldw	r2,0(r4)
 4109954:	28c00017 	ldw	r3,0(r5)
 4109958:	10c0091e 	bne	r2,r3,4109980 <strcmp+0x5c>
 410995c:	11c7883a 	add	r3,r2,r7
 4109960:	0084303a 	nor	r2,zero,r2
 4109964:	1884703a 	and	r2,r3,r2
 4109968:	1184703a 	and	r2,r2,r6
 410996c:	21000104 	addi	r4,r4,4
 4109970:	29400104 	addi	r5,r5,4
 4109974:	103ff626 	beq	r2,zero,4109950 <strcmp+0x2c>
 4109978:	0005883a 	mov	r2,zero
 410997c:	f800283a 	ret
 4109980:	20c00003 	ldbu	r3,0(r4)
 4109984:	18803fcc 	andi	r2,r3,255
 4109988:	1080201c 	xori	r2,r2,128
 410998c:	10bfe004 	addi	r2,r2,-128
 4109990:	1000071e 	bne	r2,zero,41099b0 <strcmp+0x8c>
 4109994:	00000a06 	br	41099c0 <strcmp+0x9c>
 4109998:	20c00003 	ldbu	r3,0(r4)
 410999c:	29400044 	addi	r5,r5,1
 41099a0:	18803fcc 	andi	r2,r3,255
 41099a4:	1080201c 	xori	r2,r2,128
 41099a8:	10bfe004 	addi	r2,r2,-128
 41099ac:	10000726 	beq	r2,zero,41099cc <strcmp+0xa8>
 41099b0:	29800007 	ldb	r6,0(r5)
 41099b4:	21000044 	addi	r4,r4,1
 41099b8:	30bff726 	beq	r6,r2,4109998 <strcmp+0x74>
 41099bc:	18803fcc 	andi	r2,r3,255
 41099c0:	28c00003 	ldbu	r3,0(r5)
 41099c4:	10c5c83a 	sub	r2,r2,r3
 41099c8:	f800283a 	ret
 41099cc:	28c00003 	ldbu	r3,0(r5)
 41099d0:	0005883a 	mov	r2,zero
 41099d4:	10c5c83a 	sub	r2,r2,r3
 41099d8:	f800283a 	ret

041099dc <_vfiprintf_r>:
 41099dc:	41070f81 	jmpi	41070f8 <___vfiprintf_internal_r>

041099e0 <__swbuf_r>:
 41099e0:	defffb04 	addi	sp,sp,-20
 41099e4:	dcc00315 	stw	r19,12(sp)
 41099e8:	dc400115 	stw	r17,4(sp)
 41099ec:	dc000015 	stw	r16,0(sp)
 41099f0:	dfc00415 	stw	ra,16(sp)
 41099f4:	dc800215 	stw	r18,8(sp)
 41099f8:	2027883a 	mov	r19,r4
 41099fc:	2823883a 	mov	r17,r5
 4109a00:	3021883a 	mov	r16,r6
 4109a04:	20000226 	beq	r4,zero,4109a10 <__swbuf_r+0x30>
 4109a08:	20800e17 	ldw	r2,56(r4)
 4109a0c:	10003e26 	beq	r2,zero,4109b08 <__swbuf_r+0x128>
 4109a10:	80800617 	ldw	r2,24(r16)
 4109a14:	80c0030b 	ldhu	r3,12(r16)
 4109a18:	80800215 	stw	r2,8(r16)
 4109a1c:	1880020c 	andi	r2,r3,8
 4109a20:	10001f26 	beq	r2,zero,4109aa0 <__swbuf_r+0xc0>
 4109a24:	80800417 	ldw	r2,16(r16)
 4109a28:	10001d26 	beq	r2,zero,4109aa0 <__swbuf_r+0xc0>
 4109a2c:	1948000c 	andi	r5,r3,8192
 4109a30:	8c803fcc 	andi	r18,r17,255
 4109a34:	28002326 	beq	r5,zero,4109ac4 <__swbuf_r+0xe4>
 4109a38:	80c00017 	ldw	r3,0(r16)
 4109a3c:	81000517 	ldw	r4,20(r16)
 4109a40:	1885c83a 	sub	r2,r3,r2
 4109a44:	1100290e 	bge	r2,r4,4109aec <__swbuf_r+0x10c>
 4109a48:	10800044 	addi	r2,r2,1
 4109a4c:	81400217 	ldw	r5,8(r16)
 4109a50:	19000044 	addi	r4,r3,1
 4109a54:	81000015 	stw	r4,0(r16)
 4109a58:	297fffc4 	addi	r5,r5,-1
 4109a5c:	81400215 	stw	r5,8(r16)
 4109a60:	1c400005 	stb	r17,0(r3)
 4109a64:	80c00517 	ldw	r3,20(r16)
 4109a68:	18802926 	beq	r3,r2,4109b10 <__swbuf_r+0x130>
 4109a6c:	8080030b 	ldhu	r2,12(r16)
 4109a70:	1080004c 	andi	r2,r2,1
 4109a74:	10000226 	beq	r2,zero,4109a80 <__swbuf_r+0xa0>
 4109a78:	90800298 	cmpnei	r2,r18,10
 4109a7c:	10002426 	beq	r2,zero,4109b10 <__swbuf_r+0x130>
 4109a80:	9005883a 	mov	r2,r18
 4109a84:	dfc00417 	ldw	ra,16(sp)
 4109a88:	dcc00317 	ldw	r19,12(sp)
 4109a8c:	dc800217 	ldw	r18,8(sp)
 4109a90:	dc400117 	ldw	r17,4(sp)
 4109a94:	dc000017 	ldw	r16,0(sp)
 4109a98:	dec00504 	addi	sp,sp,20
 4109a9c:	f800283a 	ret
 4109aa0:	800b883a 	mov	r5,r16
 4109aa4:	9809883a 	mov	r4,r19
 4109aa8:	41027e80 	call	41027e8 <__swsetup_r>
 4109aac:	10001c1e 	bne	r2,zero,4109b20 <__swbuf_r+0x140>
 4109ab0:	80c0030b 	ldhu	r3,12(r16)
 4109ab4:	80800417 	ldw	r2,16(r16)
 4109ab8:	8c803fcc 	andi	r18,r17,255
 4109abc:	1948000c 	andi	r5,r3,8192
 4109ac0:	283fdd1e 	bne	r5,zero,4109a38 <__swbuf_r+0x58>
 4109ac4:	81001917 	ldw	r4,100(r16)
 4109ac8:	18c80014 	ori	r3,r3,8192
 4109acc:	0177ffc4 	movi	r5,-8193
 4109ad0:	2148703a 	and	r4,r4,r5
 4109ad4:	80c0030d 	sth	r3,12(r16)
 4109ad8:	80c00017 	ldw	r3,0(r16)
 4109adc:	81001915 	stw	r4,100(r16)
 4109ae0:	81000517 	ldw	r4,20(r16)
 4109ae4:	1885c83a 	sub	r2,r3,r2
 4109ae8:	113fd716 	blt	r2,r4,4109a48 <__swbuf_r+0x68>
 4109aec:	800b883a 	mov	r5,r16
 4109af0:	9809883a 	mov	r4,r19
 4109af4:	41044dc0 	call	41044dc <_fflush_r>
 4109af8:	1000091e 	bne	r2,zero,4109b20 <__swbuf_r+0x140>
 4109afc:	80c00017 	ldw	r3,0(r16)
 4109b00:	00800044 	movi	r2,1
 4109b04:	003fd106 	br	4109a4c <__swbuf_r+0x6c>
 4109b08:	41049240 	call	4104924 <__sinit>
 4109b0c:	003fc006 	br	4109a10 <__swbuf_r+0x30>
 4109b10:	800b883a 	mov	r5,r16
 4109b14:	9809883a 	mov	r4,r19
 4109b18:	41044dc0 	call	41044dc <_fflush_r>
 4109b1c:	103fd826 	beq	r2,zero,4109a80 <__swbuf_r+0xa0>
 4109b20:	04bfffc4 	movi	r18,-1
 4109b24:	003fd606 	br	4109a80 <__swbuf_r+0xa0>

04109b28 <__swbuf>:
 4109b28:	00c10474 	movhi	r3,1041
 4109b2c:	2005883a 	mov	r2,r4
 4109b30:	190bdd17 	ldw	r4,12148(r3)
 4109b34:	280d883a 	mov	r6,r5
 4109b38:	100b883a 	mov	r5,r2
 4109b3c:	41099e01 	jmpi	41099e0 <__swbuf_r>

04109b40 <_wcrtomb_r>:
 4109b40:	defffa04 	addi	sp,sp,-24
 4109b44:	dc400415 	stw	r17,16(sp)
 4109b48:	dc000315 	stw	r16,12(sp)
 4109b4c:	00810474 	movhi	r2,1041
 4109b50:	dfc00515 	stw	ra,20(sp)
 4109b54:	10870717 	ldw	r2,7196(r2)
 4109b58:	2023883a 	mov	r17,r4
 4109b5c:	3821883a 	mov	r16,r7
 4109b60:	28000826 	beq	r5,zero,4109b84 <_wcrtomb_r+0x44>
 4109b64:	103ee83a 	callr	r2
 4109b68:	10ffffd8 	cmpnei	r3,r2,-1
 4109b6c:	18000a26 	beq	r3,zero,4109b98 <_wcrtomb_r+0x58>
 4109b70:	dfc00517 	ldw	ra,20(sp)
 4109b74:	dc400417 	ldw	r17,16(sp)
 4109b78:	dc000317 	ldw	r16,12(sp)
 4109b7c:	dec00604 	addi	sp,sp,24
 4109b80:	f800283a 	ret
 4109b84:	000d883a 	mov	r6,zero
 4109b88:	d9400084 	addi	r5,sp,2
 4109b8c:	103ee83a 	callr	r2
 4109b90:	10ffffd8 	cmpnei	r3,r2,-1
 4109b94:	183ff61e 	bne	r3,zero,4109b70 <_wcrtomb_r+0x30>
 4109b98:	00802284 	movi	r2,138
 4109b9c:	80000015 	stw	zero,0(r16)
 4109ba0:	88800015 	stw	r2,0(r17)
 4109ba4:	00bfffc4 	movi	r2,-1
 4109ba8:	003ff106 	br	4109b70 <_wcrtomb_r+0x30>

04109bac <wcrtomb>:
 4109bac:	defffa04 	addi	sp,sp,-24
 4109bb0:	00c10474 	movhi	r3,1041
 4109bb4:	dc400415 	stw	r17,16(sp)
 4109bb8:	dc000315 	stw	r16,12(sp)
 4109bbc:	1c4bdd17 	ldw	r17,12148(r3)
 4109bc0:	dfc00515 	stw	ra,20(sp)
 4109bc4:	00c10474 	movhi	r3,1041
 4109bc8:	18c70717 	ldw	r3,7196(r3)
 4109bcc:	3021883a 	mov	r16,r6
 4109bd0:	20000c26 	beq	r4,zero,4109c04 <wcrtomb+0x58>
 4109bd4:	280d883a 	mov	r6,r5
 4109bd8:	800f883a 	mov	r7,r16
 4109bdc:	200b883a 	mov	r5,r4
 4109be0:	8809883a 	mov	r4,r17
 4109be4:	183ee83a 	callr	r3
 4109be8:	10ffffd8 	cmpnei	r3,r2,-1
 4109bec:	18000c26 	beq	r3,zero,4109c20 <wcrtomb+0x74>
 4109bf0:	dfc00517 	ldw	ra,20(sp)
 4109bf4:	dc400417 	ldw	r17,16(sp)
 4109bf8:	dc000317 	ldw	r16,12(sp)
 4109bfc:	dec00604 	addi	sp,sp,24
 4109c00:	f800283a 	ret
 4109c04:	300f883a 	mov	r7,r6
 4109c08:	d9400084 	addi	r5,sp,2
 4109c0c:	000d883a 	mov	r6,zero
 4109c10:	8809883a 	mov	r4,r17
 4109c14:	183ee83a 	callr	r3
 4109c18:	10ffffd8 	cmpnei	r3,r2,-1
 4109c1c:	183ff41e 	bne	r3,zero,4109bf0 <wcrtomb+0x44>
 4109c20:	00802284 	movi	r2,138
 4109c24:	80000015 	stw	zero,0(r16)
 4109c28:	88800015 	stw	r2,0(r17)
 4109c2c:	00bfffc4 	movi	r2,-1
 4109c30:	003fef06 	br	4109bf0 <wcrtomb+0x44>

04109c34 <_wctomb_r>:
 4109c34:	00810474 	movhi	r2,1041
 4109c38:	10870717 	ldw	r2,7196(r2)
 4109c3c:	1000683a 	jmp	r2

04109c40 <__ascii_wctomb>:
 4109c40:	28000926 	beq	r5,zero,4109c68 <__ascii_wctomb+0x28>
 4109c44:	30804030 	cmpltui	r2,r6,256
 4109c48:	10000326 	beq	r2,zero,4109c58 <__ascii_wctomb+0x18>
 4109c4c:	29800005 	stb	r6,0(r5)
 4109c50:	00800044 	movi	r2,1
 4109c54:	f800283a 	ret
 4109c58:	00802284 	movi	r2,138
 4109c5c:	20800015 	stw	r2,0(r4)
 4109c60:	00bfffc4 	movi	r2,-1
 4109c64:	f800283a 	ret
 4109c68:	0005883a 	mov	r2,zero
 4109c6c:	f800283a 	ret

04109c70 <abort>:
 4109c70:	deffff04 	addi	sp,sp,-4
 4109c74:	01000184 	movi	r4,6
 4109c78:	dfc00015 	stw	ra,0(sp)
 4109c7c:	4109efc0 	call	4109efc <raise>
 4109c80:	01000044 	movi	r4,1
 4109c84:	410d76c0 	call	410d76c <_exit>

04109c88 <_init_signal_r>:
 4109c88:	2080b717 	ldw	r2,732(r4)
 4109c8c:	10000226 	beq	r2,zero,4109c98 <_init_signal_r+0x10>
 4109c90:	0005883a 	mov	r2,zero
 4109c94:	f800283a 	ret
 4109c98:	defffe04 	addi	sp,sp,-8
 4109c9c:	01402004 	movi	r5,128
 4109ca0:	dc000015 	stw	r16,0(sp)
 4109ca4:	dfc00115 	stw	ra,4(sp)
 4109ca8:	2021883a 	mov	r16,r4
 4109cac:	410512c0 	call	410512c <_malloc_r>
 4109cb0:	8080b715 	stw	r2,732(r16)
 4109cb4:	1009883a 	mov	r4,r2
 4109cb8:	10000826 	beq	r2,zero,4109cdc <_init_signal_r+0x54>
 4109cbc:	01802004 	movi	r6,128
 4109cc0:	000b883a 	mov	r5,zero
 4109cc4:	4105adc0 	call	4105adc <memset>
 4109cc8:	0005883a 	mov	r2,zero
 4109ccc:	dfc00117 	ldw	ra,4(sp)
 4109cd0:	dc000017 	ldw	r16,0(sp)
 4109cd4:	dec00204 	addi	sp,sp,8
 4109cd8:	f800283a 	ret
 4109cdc:	00bfffc4 	movi	r2,-1
 4109ce0:	003ffa06 	br	4109ccc <_init_signal_r+0x44>

04109ce4 <_signal_r>:
 4109ce4:	defffc04 	addi	sp,sp,-16
 4109ce8:	dc400115 	stw	r17,4(sp)
 4109cec:	dfc00315 	stw	ra,12(sp)
 4109cf0:	dc800215 	stw	r18,8(sp)
 4109cf4:	dc000015 	stw	r16,0(sp)
 4109cf8:	28800830 	cmpltui	r2,r5,32
 4109cfc:	2023883a 	mov	r17,r4
 4109d00:	10000e26 	beq	r2,zero,4109d3c <_signal_r+0x58>
 4109d04:	20c0b717 	ldw	r3,732(r4)
 4109d08:	2821883a 	mov	r16,r5
 4109d0c:	3025883a 	mov	r18,r6
 4109d10:	18000e26 	beq	r3,zero,4109d4c <_signal_r+0x68>
 4109d14:	802090ba 	slli	r16,r16,2
 4109d18:	1c21883a 	add	r16,r3,r16
 4109d1c:	80800017 	ldw	r2,0(r16)
 4109d20:	84800015 	stw	r18,0(r16)
 4109d24:	dfc00317 	ldw	ra,12(sp)
 4109d28:	dc800217 	ldw	r18,8(sp)
 4109d2c:	dc400117 	ldw	r17,4(sp)
 4109d30:	dc000017 	ldw	r16,0(sp)
 4109d34:	dec00404 	addi	sp,sp,16
 4109d38:	f800283a 	ret
 4109d3c:	00800584 	movi	r2,22
 4109d40:	20800015 	stw	r2,0(r4)
 4109d44:	00bfffc4 	movi	r2,-1
 4109d48:	003ff606 	br	4109d24 <_signal_r+0x40>
 4109d4c:	01402004 	movi	r5,128
 4109d50:	410512c0 	call	410512c <_malloc_r>
 4109d54:	8880b715 	stw	r2,732(r17)
 4109d58:	10000626 	beq	r2,zero,4109d74 <_signal_r+0x90>
 4109d5c:	01802004 	movi	r6,128
 4109d60:	000b883a 	mov	r5,zero
 4109d64:	1009883a 	mov	r4,r2
 4109d68:	4105adc0 	call	4105adc <memset>
 4109d6c:	1007883a 	mov	r3,r2
 4109d70:	003fe806 	br	4109d14 <_signal_r+0x30>
 4109d74:	00bfffc4 	movi	r2,-1
 4109d78:	003fea06 	br	4109d24 <_signal_r+0x40>

04109d7c <_raise_r>:
 4109d7c:	28800830 	cmpltui	r2,r5,32
 4109d80:	10002b26 	beq	r2,zero,4109e30 <_raise_r+0xb4>
 4109d84:	2080b717 	ldw	r2,732(r4)
 4109d88:	defffd04 	addi	sp,sp,-12
 4109d8c:	dc000115 	stw	r16,4(sp)
 4109d90:	dfc00215 	stw	ra,8(sp)
 4109d94:	2821883a 	mov	r16,r5
 4109d98:	10001026 	beq	r2,zero,4109ddc <_raise_r+0x60>
 4109d9c:	280690ba 	slli	r3,r5,2
 4109da0:	10c5883a 	add	r2,r2,r3
 4109da4:	10c00017 	ldw	r3,0(r2)
 4109da8:	18000c26 	beq	r3,zero,4109ddc <_raise_r+0x60>
 4109dac:	19400060 	cmpeqi	r5,r3,1
 4109db0:	28001a1e 	bne	r5,zero,4109e1c <_raise_r+0xa0>
 4109db4:	197fffd8 	cmpnei	r5,r3,-1
 4109db8:	28001126 	beq	r5,zero,4109e00 <_raise_r+0x84>
 4109dbc:	10000015 	stw	zero,0(r2)
 4109dc0:	8009883a 	mov	r4,r16
 4109dc4:	183ee83a 	callr	r3
 4109dc8:	0005883a 	mov	r2,zero
 4109dcc:	dfc00217 	ldw	ra,8(sp)
 4109dd0:	dc000117 	ldw	r16,4(sp)
 4109dd4:	dec00304 	addi	sp,sp,12
 4109dd8:	f800283a 	ret
 4109ddc:	d9000015 	stw	r4,0(sp)
 4109de0:	410a1d40 	call	410a1d4 <_getpid_r>
 4109de4:	d9000017 	ldw	r4,0(sp)
 4109de8:	800d883a 	mov	r6,r16
 4109dec:	100b883a 	mov	r5,r2
 4109df0:	dfc00217 	ldw	ra,8(sp)
 4109df4:	dc000117 	ldw	r16,4(sp)
 4109df8:	dec00304 	addi	sp,sp,12
 4109dfc:	410a1741 	jmpi	410a174 <_kill_r>
 4109e00:	00800584 	movi	r2,22
 4109e04:	20800015 	stw	r2,0(r4)
 4109e08:	00800044 	movi	r2,1
 4109e0c:	dfc00217 	ldw	ra,8(sp)
 4109e10:	dc000117 	ldw	r16,4(sp)
 4109e14:	dec00304 	addi	sp,sp,12
 4109e18:	f800283a 	ret
 4109e1c:	0005883a 	mov	r2,zero
 4109e20:	dfc00217 	ldw	ra,8(sp)
 4109e24:	dc000117 	ldw	r16,4(sp)
 4109e28:	dec00304 	addi	sp,sp,12
 4109e2c:	f800283a 	ret
 4109e30:	00800584 	movi	r2,22
 4109e34:	20800015 	stw	r2,0(r4)
 4109e38:	00bfffc4 	movi	r2,-1
 4109e3c:	f800283a 	ret

04109e40 <__sigtramp_r>:
 4109e40:	28800830 	cmpltui	r2,r5,32
 4109e44:	10002b26 	beq	r2,zero,4109ef4 <__sigtramp_r+0xb4>
 4109e48:	20c0b717 	ldw	r3,732(r4)
 4109e4c:	defffd04 	addi	sp,sp,-12
 4109e50:	dc400115 	stw	r17,4(sp)
 4109e54:	dc000015 	stw	r16,0(sp)
 4109e58:	dfc00215 	stw	ra,8(sp)
 4109e5c:	2821883a 	mov	r16,r5
 4109e60:	2023883a 	mov	r17,r4
 4109e64:	18001326 	beq	r3,zero,4109eb4 <__sigtramp_r+0x74>
 4109e68:	800490ba 	slli	r2,r16,2
 4109e6c:	1887883a 	add	r3,r3,r2
 4109e70:	18800017 	ldw	r2,0(r3)
 4109e74:	10000d26 	beq	r2,zero,4109eac <__sigtramp_r+0x6c>
 4109e78:	113fffe0 	cmpeqi	r4,r2,-1
 4109e7c:	2000191e 	bne	r4,zero,4109ee4 <__sigtramp_r+0xa4>
 4109e80:	11000060 	cmpeqi	r4,r2,1
 4109e84:	2000151e 	bne	r4,zero,4109edc <__sigtramp_r+0x9c>
 4109e88:	18000015 	stw	zero,0(r3)
 4109e8c:	8009883a 	mov	r4,r16
 4109e90:	103ee83a 	callr	r2
 4109e94:	0005883a 	mov	r2,zero
 4109e98:	dfc00217 	ldw	ra,8(sp)
 4109e9c:	dc400117 	ldw	r17,4(sp)
 4109ea0:	dc000017 	ldw	r16,0(sp)
 4109ea4:	dec00304 	addi	sp,sp,12
 4109ea8:	f800283a 	ret
 4109eac:	00800044 	movi	r2,1
 4109eb0:	003ff906 	br	4109e98 <__sigtramp_r+0x58>
 4109eb4:	01402004 	movi	r5,128
 4109eb8:	410512c0 	call	410512c <_malloc_r>
 4109ebc:	8880b715 	stw	r2,732(r17)
 4109ec0:	10000a26 	beq	r2,zero,4109eec <__sigtramp_r+0xac>
 4109ec4:	01802004 	movi	r6,128
 4109ec8:	000b883a 	mov	r5,zero
 4109ecc:	1009883a 	mov	r4,r2
 4109ed0:	4105adc0 	call	4105adc <memset>
 4109ed4:	1007883a 	mov	r3,r2
 4109ed8:	003fe306 	br	4109e68 <__sigtramp_r+0x28>
 4109edc:	008000c4 	movi	r2,3
 4109ee0:	003fed06 	br	4109e98 <__sigtramp_r+0x58>
 4109ee4:	00800084 	movi	r2,2
 4109ee8:	003feb06 	br	4109e98 <__sigtramp_r+0x58>
 4109eec:	00bfffc4 	movi	r2,-1
 4109ef0:	003fe906 	br	4109e98 <__sigtramp_r+0x58>
 4109ef4:	00bfffc4 	movi	r2,-1
 4109ef8:	f800283a 	ret

04109efc <raise>:
 4109efc:	defffd04 	addi	sp,sp,-12
 4109f00:	dc400115 	stw	r17,4(sp)
 4109f04:	00c10474 	movhi	r3,1041
 4109f08:	dfc00215 	stw	ra,8(sp)
 4109f0c:	dc000015 	stw	r16,0(sp)
 4109f10:	20800830 	cmpltui	r2,r4,32
 4109f14:	1c4bdd17 	ldw	r17,12148(r3)
 4109f18:	10002326 	beq	r2,zero,4109fa8 <raise+0xac>
 4109f1c:	8880b717 	ldw	r2,732(r17)
 4109f20:	2021883a 	mov	r16,r4
 4109f24:	10001026 	beq	r2,zero,4109f68 <raise+0x6c>
 4109f28:	200690ba 	slli	r3,r4,2
 4109f2c:	10c5883a 	add	r2,r2,r3
 4109f30:	10c00017 	ldw	r3,0(r2)
 4109f34:	18000c26 	beq	r3,zero,4109f68 <raise+0x6c>
 4109f38:	19400060 	cmpeqi	r5,r3,1
 4109f3c:	2800181e 	bne	r5,zero,4109fa0 <raise+0xa4>
 4109f40:	197fffd8 	cmpnei	r5,r3,-1
 4109f44:	28001226 	beq	r5,zero,4109f90 <raise+0x94>
 4109f48:	10000015 	stw	zero,0(r2)
 4109f4c:	183ee83a 	callr	r3
 4109f50:	0005883a 	mov	r2,zero
 4109f54:	dfc00217 	ldw	ra,8(sp)
 4109f58:	dc400117 	ldw	r17,4(sp)
 4109f5c:	dc000017 	ldw	r16,0(sp)
 4109f60:	dec00304 	addi	sp,sp,12
 4109f64:	f800283a 	ret
 4109f68:	8809883a 	mov	r4,r17
 4109f6c:	410a1d40 	call	410a1d4 <_getpid_r>
 4109f70:	800d883a 	mov	r6,r16
 4109f74:	100b883a 	mov	r5,r2
 4109f78:	8809883a 	mov	r4,r17
 4109f7c:	dfc00217 	ldw	ra,8(sp)
 4109f80:	dc400117 	ldw	r17,4(sp)
 4109f84:	dc000017 	ldw	r16,0(sp)
 4109f88:	dec00304 	addi	sp,sp,12
 4109f8c:	410a1741 	jmpi	410a174 <_kill_r>
 4109f90:	00800584 	movi	r2,22
 4109f94:	88800015 	stw	r2,0(r17)
 4109f98:	00800044 	movi	r2,1
 4109f9c:	003fed06 	br	4109f54 <raise+0x58>
 4109fa0:	0005883a 	mov	r2,zero
 4109fa4:	003feb06 	br	4109f54 <raise+0x58>
 4109fa8:	00800584 	movi	r2,22
 4109fac:	88800015 	stw	r2,0(r17)
 4109fb0:	00bfffc4 	movi	r2,-1
 4109fb4:	003fe706 	br	4109f54 <raise+0x58>

04109fb8 <signal>:
 4109fb8:	defffc04 	addi	sp,sp,-16
 4109fbc:	dc800215 	stw	r18,8(sp)
 4109fc0:	00c10474 	movhi	r3,1041
 4109fc4:	dfc00315 	stw	ra,12(sp)
 4109fc8:	dc400115 	stw	r17,4(sp)
 4109fcc:	dc000015 	stw	r16,0(sp)
 4109fd0:	20800830 	cmpltui	r2,r4,32
 4109fd4:	1c8bdd17 	ldw	r18,12148(r3)
 4109fd8:	10000e26 	beq	r2,zero,410a014 <signal+0x5c>
 4109fdc:	2021883a 	mov	r16,r4
 4109fe0:	9100b717 	ldw	r4,732(r18)
 4109fe4:	2823883a 	mov	r17,r5
 4109fe8:	20000e26 	beq	r4,zero,410a024 <signal+0x6c>
 4109fec:	802090ba 	slli	r16,r16,2
 4109ff0:	2421883a 	add	r16,r4,r16
 4109ff4:	80800017 	ldw	r2,0(r16)
 4109ff8:	84400015 	stw	r17,0(r16)
 4109ffc:	dfc00317 	ldw	ra,12(sp)
 410a000:	dc800217 	ldw	r18,8(sp)
 410a004:	dc400117 	ldw	r17,4(sp)
 410a008:	dc000017 	ldw	r16,0(sp)
 410a00c:	dec00404 	addi	sp,sp,16
 410a010:	f800283a 	ret
 410a014:	00800584 	movi	r2,22
 410a018:	90800015 	stw	r2,0(r18)
 410a01c:	00bfffc4 	movi	r2,-1
 410a020:	003ff606 	br	4109ffc <signal+0x44>
 410a024:	9009883a 	mov	r4,r18
 410a028:	01402004 	movi	r5,128
 410a02c:	410512c0 	call	410512c <_malloc_r>
 410a030:	9080b715 	stw	r2,732(r18)
 410a034:	1009883a 	mov	r4,r2
 410a038:	10000526 	beq	r2,zero,410a050 <signal+0x98>
 410a03c:	01802004 	movi	r6,128
 410a040:	000b883a 	mov	r5,zero
 410a044:	4105adc0 	call	4105adc <memset>
 410a048:	1009883a 	mov	r4,r2
 410a04c:	003fe706 	br	4109fec <signal+0x34>
 410a050:	00bfffc4 	movi	r2,-1
 410a054:	003fe906 	br	4109ffc <signal+0x44>

0410a058 <_init_signal>:
 410a058:	defffe04 	addi	sp,sp,-8
 410a05c:	00810474 	movhi	r2,1041
 410a060:	dc000015 	stw	r16,0(sp)
 410a064:	140bdd17 	ldw	r16,12148(r2)
 410a068:	dfc00115 	stw	ra,4(sp)
 410a06c:	8080b717 	ldw	r2,732(r16)
 410a070:	10000526 	beq	r2,zero,410a088 <_init_signal+0x30>
 410a074:	0005883a 	mov	r2,zero
 410a078:	dfc00117 	ldw	ra,4(sp)
 410a07c:	dc000017 	ldw	r16,0(sp)
 410a080:	dec00204 	addi	sp,sp,8
 410a084:	f800283a 	ret
 410a088:	8009883a 	mov	r4,r16
 410a08c:	01402004 	movi	r5,128
 410a090:	410512c0 	call	410512c <_malloc_r>
 410a094:	8080b715 	stw	r2,732(r16)
 410a098:	1009883a 	mov	r4,r2
 410a09c:	10000426 	beq	r2,zero,410a0b0 <_init_signal+0x58>
 410a0a0:	01802004 	movi	r6,128
 410a0a4:	000b883a 	mov	r5,zero
 410a0a8:	4105adc0 	call	4105adc <memset>
 410a0ac:	003ff106 	br	410a074 <_init_signal+0x1c>
 410a0b0:	00bfffc4 	movi	r2,-1
 410a0b4:	003ff006 	br	410a078 <_init_signal+0x20>

0410a0b8 <__sigtramp>:
 410a0b8:	defffd04 	addi	sp,sp,-12
 410a0bc:	dc400115 	stw	r17,4(sp)
 410a0c0:	00c10474 	movhi	r3,1041
 410a0c4:	dfc00215 	stw	ra,8(sp)
 410a0c8:	dc000015 	stw	r16,0(sp)
 410a0cc:	20800830 	cmpltui	r2,r4,32
 410a0d0:	1c4bdd17 	ldw	r17,12148(r3)
 410a0d4:	10002526 	beq	r2,zero,410a16c <__sigtramp+0xb4>
 410a0d8:	88c0b717 	ldw	r3,732(r17)
 410a0dc:	2021883a 	mov	r16,r4
 410a0e0:	18001326 	beq	r3,zero,410a130 <__sigtramp+0x78>
 410a0e4:	800890ba 	slli	r4,r16,2
 410a0e8:	1907883a 	add	r3,r3,r4
 410a0ec:	18800017 	ldw	r2,0(r3)
 410a0f0:	10000d26 	beq	r2,zero,410a128 <__sigtramp+0x70>
 410a0f4:	113fffe0 	cmpeqi	r4,r2,-1
 410a0f8:	20001a1e 	bne	r4,zero,410a164 <__sigtramp+0xac>
 410a0fc:	11000060 	cmpeqi	r4,r2,1
 410a100:	2000161e 	bne	r4,zero,410a15c <__sigtramp+0xa4>
 410a104:	18000015 	stw	zero,0(r3)
 410a108:	8009883a 	mov	r4,r16
 410a10c:	103ee83a 	callr	r2
 410a110:	0005883a 	mov	r2,zero
 410a114:	dfc00217 	ldw	ra,8(sp)
 410a118:	dc400117 	ldw	r17,4(sp)
 410a11c:	dc000017 	ldw	r16,0(sp)
 410a120:	dec00304 	addi	sp,sp,12
 410a124:	f800283a 	ret
 410a128:	00800044 	movi	r2,1
 410a12c:	003ff906 	br	410a114 <__sigtramp+0x5c>
 410a130:	01402004 	movi	r5,128
 410a134:	8809883a 	mov	r4,r17
 410a138:	410512c0 	call	410512c <_malloc_r>
 410a13c:	8880b715 	stw	r2,732(r17)
 410a140:	10000a26 	beq	r2,zero,410a16c <__sigtramp+0xb4>
 410a144:	01802004 	movi	r6,128
 410a148:	000b883a 	mov	r5,zero
 410a14c:	1009883a 	mov	r4,r2
 410a150:	4105adc0 	call	4105adc <memset>
 410a154:	1007883a 	mov	r3,r2
 410a158:	003fe206 	br	410a0e4 <__sigtramp+0x2c>
 410a15c:	008000c4 	movi	r2,3
 410a160:	003fec06 	br	410a114 <__sigtramp+0x5c>
 410a164:	00800084 	movi	r2,2
 410a168:	003fea06 	br	410a114 <__sigtramp+0x5c>
 410a16c:	00bfffc4 	movi	r2,-1
 410a170:	003fe806 	br	410a114 <__sigtramp+0x5c>

0410a174 <_kill_r>:
 410a174:	2807883a 	mov	r3,r5
 410a178:	defffe04 	addi	sp,sp,-8
 410a17c:	dc000015 	stw	r16,0(sp)
 410a180:	00810474 	movhi	r2,1041
 410a184:	300b883a 	mov	r5,r6
 410a188:	2021883a 	mov	r16,r4
 410a18c:	1809883a 	mov	r4,r3
 410a190:	dfc00115 	stw	ra,4(sp)
 410a194:	10131f15 	stw	zero,19580(r2)
 410a198:	410d9e40 	call	410d9e4 <kill>
 410a19c:	10ffffd8 	cmpnei	r3,r2,-1
 410a1a0:	18000426 	beq	r3,zero,410a1b4 <_kill_r+0x40>
 410a1a4:	dfc00117 	ldw	ra,4(sp)
 410a1a8:	dc000017 	ldw	r16,0(sp)
 410a1ac:	dec00204 	addi	sp,sp,8
 410a1b0:	f800283a 	ret
 410a1b4:	00c10474 	movhi	r3,1041
 410a1b8:	18d31f17 	ldw	r3,19580(r3)
 410a1bc:	183ff926 	beq	r3,zero,410a1a4 <_kill_r+0x30>
 410a1c0:	80c00015 	stw	r3,0(r16)
 410a1c4:	dfc00117 	ldw	ra,4(sp)
 410a1c8:	dc000017 	ldw	r16,0(sp)
 410a1cc:	dec00204 	addi	sp,sp,8
 410a1d0:	f800283a 	ret

0410a1d4 <_getpid_r>:
 410a1d4:	410d89c1 	jmpi	410d89c <getpid>

0410a1d8 <__muldi3>:
 410a1d8:	defff704 	addi	sp,sp,-36
 410a1dc:	dd400515 	stw	r21,20(sp)
 410a1e0:	dd000415 	stw	r20,16(sp)
 410a1e4:	202ad43a 	srli	r21,r4,16
 410a1e8:	253fffcc 	andi	r20,r4,65535
 410a1ec:	dc000015 	stw	r16,0(sp)
 410a1f0:	343fffcc 	andi	r16,r6,65535
 410a1f4:	dcc00315 	stw	r19,12(sp)
 410a1f8:	dc800215 	stw	r18,8(sp)
 410a1fc:	2027883a 	mov	r19,r4
 410a200:	2825883a 	mov	r18,r5
 410a204:	a009883a 	mov	r4,r20
 410a208:	800b883a 	mov	r5,r16
 410a20c:	dfc00815 	stw	ra,32(sp)
 410a210:	ddc00715 	stw	r23,28(sp)
 410a214:	dd800615 	stw	r22,24(sp)
 410a218:	302ed43a 	srli	r23,r6,16
 410a21c:	382d883a 	mov	r22,r7
 410a220:	dc400115 	stw	r17,4(sp)
 410a224:	3023883a 	mov	r17,r6
 410a228:	410aec00 	call	410aec0 <__mulsi3>
 410a22c:	800b883a 	mov	r5,r16
 410a230:	a809883a 	mov	r4,r21
 410a234:	1021883a 	mov	r16,r2
 410a238:	410aec00 	call	410aec0 <__mulsi3>
 410a23c:	a809883a 	mov	r4,r21
 410a240:	b80b883a 	mov	r5,r23
 410a244:	102b883a 	mov	r21,r2
 410a248:	410aec00 	call	410aec0 <__mulsi3>
 410a24c:	a009883a 	mov	r4,r20
 410a250:	b80b883a 	mov	r5,r23
 410a254:	1029883a 	mov	r20,r2
 410a258:	410aec00 	call	410aec0 <__mulsi3>
 410a25c:	8006d43a 	srli	r3,r16,16
 410a260:	1545883a 	add	r2,r2,r21
 410a264:	1887883a 	add	r3,r3,r2
 410a268:	1d40022e 	bgeu	r3,r21,410a274 <__muldi3+0x9c>
 410a26c:	00800074 	movhi	r2,1
 410a270:	a0a9883a 	add	r20,r20,r2
 410a274:	1804d43a 	srli	r2,r3,16
 410a278:	1806943a 	slli	r3,r3,16
 410a27c:	b00b883a 	mov	r5,r22
 410a280:	9809883a 	mov	r4,r19
 410a284:	843fffcc 	andi	r16,r16,65535
 410a288:	1c21883a 	add	r16,r3,r16
 410a28c:	1529883a 	add	r20,r2,r20
 410a290:	410aec00 	call	410aec0 <__mulsi3>
 410a294:	900b883a 	mov	r5,r18
 410a298:	8809883a 	mov	r4,r17
 410a29c:	1529883a 	add	r20,r2,r20
 410a2a0:	410aec00 	call	410aec0 <__mulsi3>
 410a2a4:	1007883a 	mov	r3,r2
 410a2a8:	a0c7883a 	add	r3,r20,r3
 410a2ac:	8005883a 	mov	r2,r16
 410a2b0:	dfc00817 	ldw	ra,32(sp)
 410a2b4:	ddc00717 	ldw	r23,28(sp)
 410a2b8:	dd800617 	ldw	r22,24(sp)
 410a2bc:	dd400517 	ldw	r21,20(sp)
 410a2c0:	dd000417 	ldw	r20,16(sp)
 410a2c4:	dcc00317 	ldw	r19,12(sp)
 410a2c8:	dc800217 	ldw	r18,8(sp)
 410a2cc:	dc400117 	ldw	r17,4(sp)
 410a2d0:	dc000017 	ldw	r16,0(sp)
 410a2d4:	dec00904 	addi	sp,sp,36
 410a2d8:	f800283a 	ret

0410a2dc <__udivdi3>:
 410a2dc:	defff504 	addi	sp,sp,-44
 410a2e0:	dd000515 	stw	r20,20(sp)
 410a2e4:	dc800315 	stw	r18,12(sp)
 410a2e8:	dfc00a15 	stw	ra,40(sp)
 410a2ec:	df000915 	stw	fp,36(sp)
 410a2f0:	ddc00815 	stw	r23,32(sp)
 410a2f4:	dd800715 	stw	r22,28(sp)
 410a2f8:	dd400615 	stw	r21,24(sp)
 410a2fc:	dcc00415 	stw	r19,16(sp)
 410a300:	dc400215 	stw	r17,8(sp)
 410a304:	dc000115 	stw	r16,4(sp)
 410a308:	2029883a 	mov	r20,r4
 410a30c:	2825883a 	mov	r18,r5
 410a310:	3800461e 	bne	r7,zero,410a42c <__udivdi3+0x150>
 410a314:	3823883a 	mov	r17,r7
 410a318:	3021883a 	mov	r16,r6
 410a31c:	2027883a 	mov	r19,r4
 410a320:	2980622e 	bgeu	r5,r6,410a4ac <__udivdi3+0x1d0>
 410a324:	00bfffd4 	movui	r2,65535
 410a328:	282b883a 	mov	r21,r5
 410a32c:	1180aa2e 	bgeu	r2,r6,410a5d8 <__udivdi3+0x2fc>
 410a330:	00804034 	movhi	r2,256
 410a334:	30815a36 	bltu	r6,r2,410a8a0 <__udivdi3+0x5c4>
 410a338:	3006d63a 	srli	r3,r6,24
 410a33c:	04400604 	movi	r17,24
 410a340:	00810474 	movhi	r2,1041
 410a344:	1885883a 	add	r2,r3,r2
 410a348:	10846303 	ldbu	r2,4492(r2)
 410a34c:	00c00804 	movi	r3,32
 410a350:	1463883a 	add	r17,r2,r17
 410a354:	1c45c83a 	sub	r2,r3,r17
 410a358:	1c400526 	beq	r3,r17,410a370 <__udivdi3+0x94>
 410a35c:	9086983a 	sll	r3,r18,r2
 410a360:	a462d83a 	srl	r17,r20,r17
 410a364:	30a0983a 	sll	r16,r6,r2
 410a368:	a0a6983a 	sll	r19,r20,r2
 410a36c:	88eab03a 	or	r21,r17,r3
 410a370:	802cd43a 	srli	r22,r16,16
 410a374:	a809883a 	mov	r4,r21
 410a378:	853fffcc 	andi	r20,r16,65535
 410a37c:	b00b883a 	mov	r5,r22
 410a380:	41004d00 	call	41004d0 <__umodsi3>
 410a384:	a809883a 	mov	r4,r21
 410a388:	b00b883a 	mov	r5,r22
 410a38c:	1025883a 	mov	r18,r2
 410a390:	410046c0 	call	410046c <__udivsi3>
 410a394:	a009883a 	mov	r4,r20
 410a398:	100b883a 	mov	r5,r2
 410a39c:	102b883a 	mov	r21,r2
 410a3a0:	410aec00 	call	410aec0 <__mulsi3>
 410a3a4:	9024943a 	slli	r18,r18,16
 410a3a8:	9808d43a 	srli	r4,r19,16
 410a3ac:	9108b03a 	or	r4,r18,r4
 410a3b0:	2080052e 	bgeu	r4,r2,410a3c8 <__udivdi3+0xec>
 410a3b4:	2409883a 	add	r4,r4,r16
 410a3b8:	a8ffffc4 	addi	r3,r21,-1
 410a3bc:	24000136 	bltu	r4,r16,410a3c4 <__udivdi3+0xe8>
 410a3c0:	20814836 	bltu	r4,r2,410a8e4 <__udivdi3+0x608>
 410a3c4:	182b883a 	mov	r21,r3
 410a3c8:	20a3c83a 	sub	r17,r4,r2
 410a3cc:	8809883a 	mov	r4,r17
 410a3d0:	b00b883a 	mov	r5,r22
 410a3d4:	41004d00 	call	41004d0 <__umodsi3>
 410a3d8:	8809883a 	mov	r4,r17
 410a3dc:	1023883a 	mov	r17,r2
 410a3e0:	b00b883a 	mov	r5,r22
 410a3e4:	8822943a 	slli	r17,r17,16
 410a3e8:	410046c0 	call	410046c <__udivsi3>
 410a3ec:	100b883a 	mov	r5,r2
 410a3f0:	a009883a 	mov	r4,r20
 410a3f4:	9cffffcc 	andi	r19,r19,65535
 410a3f8:	1025883a 	mov	r18,r2
 410a3fc:	8ce6b03a 	or	r19,r17,r19
 410a400:	410aec00 	call	410aec0 <__mulsi3>
 410a404:	9880052e 	bgeu	r19,r2,410a41c <__udivdi3+0x140>
 410a408:	84e7883a 	add	r19,r16,r19
 410a40c:	90ffffc4 	addi	r3,r18,-1
 410a410:	9c000136 	bltu	r19,r16,410a418 <__udivdi3+0x13c>
 410a414:	98813136 	bltu	r19,r2,410a8dc <__udivdi3+0x600>
 410a418:	1825883a 	mov	r18,r3
 410a41c:	a80c943a 	slli	r6,r21,16
 410a420:	0007883a 	mov	r3,zero
 410a424:	3484b03a 	or	r2,r6,r18
 410a428:	00000306 	br	410a438 <__udivdi3+0x15c>
 410a42c:	29c00e2e 	bgeu	r5,r7,410a468 <__udivdi3+0x18c>
 410a430:	0007883a 	mov	r3,zero
 410a434:	0005883a 	mov	r2,zero
 410a438:	dfc00a17 	ldw	ra,40(sp)
 410a43c:	df000917 	ldw	fp,36(sp)
 410a440:	ddc00817 	ldw	r23,32(sp)
 410a444:	dd800717 	ldw	r22,28(sp)
 410a448:	dd400617 	ldw	r21,24(sp)
 410a44c:	dd000517 	ldw	r20,20(sp)
 410a450:	dcc00417 	ldw	r19,16(sp)
 410a454:	dc800317 	ldw	r18,12(sp)
 410a458:	dc400217 	ldw	r17,8(sp)
 410a45c:	dc000117 	ldw	r16,4(sp)
 410a460:	dec00b04 	addi	sp,sp,44
 410a464:	f800283a 	ret
 410a468:	00bfffd4 	movui	r2,65535
 410a46c:	11c05f2e 	bgeu	r2,r7,410a5ec <__udivdi3+0x310>
 410a470:	00804034 	movhi	r2,256
 410a474:	3880fc36 	bltu	r7,r2,410a868 <__udivdi3+0x58c>
 410a478:	3804d63a 	srli	r2,r7,24
 410a47c:	01000604 	movi	r4,24
 410a480:	00c10474 	movhi	r3,1041
 410a484:	10c7883a 	add	r3,r2,r3
 410a488:	18846303 	ldbu	r2,4492(r3)
 410a48c:	00c00804 	movi	r3,32
 410a490:	1105883a 	add	r2,r2,r4
 410a494:	18a3c83a 	sub	r17,r3,r2
 410a498:	1880901e 	bne	r3,r2,410a6dc <__udivdi3+0x400>
 410a49c:	3c80f736 	bltu	r7,r18,410a87c <__udivdi3+0x5a0>
 410a4a0:	a185403a 	cmpgeu	r2,r20,r6
 410a4a4:	0007883a 	mov	r3,zero
 410a4a8:	003fe306 	br	410a438 <__udivdi3+0x15c>
 410a4ac:	3000041e 	bne	r6,zero,410a4c0 <__udivdi3+0x1e4>
 410a4b0:	000b883a 	mov	r5,zero
 410a4b4:	01000044 	movi	r4,1
 410a4b8:	410046c0 	call	410046c <__udivsi3>
 410a4bc:	1021883a 	mov	r16,r2
 410a4c0:	00bfffd4 	movui	r2,65535
 410a4c4:	14003f2e 	bgeu	r2,r16,410a5c4 <__udivdi3+0x2e8>
 410a4c8:	00804034 	movhi	r2,256
 410a4cc:	8080f136 	bltu	r16,r2,410a894 <__udivdi3+0x5b8>
 410a4d0:	8006d63a 	srli	r3,r16,24
 410a4d4:	04400604 	movi	r17,24
 410a4d8:	00810474 	movhi	r2,1041
 410a4dc:	1885883a 	add	r2,r3,r2
 410a4e0:	10846303 	ldbu	r2,4492(r2)
 410a4e4:	00c00804 	movi	r3,32
 410a4e8:	1463883a 	add	r17,r2,r17
 410a4ec:	1c45c83a 	sub	r2,r3,r17
 410a4f0:	1c40431e 	bne	r3,r17,410a600 <__udivdi3+0x324>
 410a4f4:	802cd43a 	srli	r22,r16,16
 410a4f8:	9423c83a 	sub	r17,r18,r16
 410a4fc:	853fffcc 	andi	r20,r16,65535
 410a500:	00c00044 	movi	r3,1
 410a504:	b00b883a 	mov	r5,r22
 410a508:	8809883a 	mov	r4,r17
 410a50c:	d8c00015 	stw	r3,0(sp)
 410a510:	41004d00 	call	41004d0 <__umodsi3>
 410a514:	b00b883a 	mov	r5,r22
 410a518:	8809883a 	mov	r4,r17
 410a51c:	1025883a 	mov	r18,r2
 410a520:	410046c0 	call	410046c <__udivsi3>
 410a524:	1009883a 	mov	r4,r2
 410a528:	a00b883a 	mov	r5,r20
 410a52c:	102b883a 	mov	r21,r2
 410a530:	410aec00 	call	410aec0 <__mulsi3>
 410a534:	9024943a 	slli	r18,r18,16
 410a538:	9808d43a 	srli	r4,r19,16
 410a53c:	d8c00017 	ldw	r3,0(sp)
 410a540:	9108b03a 	or	r4,r18,r4
 410a544:	2080052e 	bgeu	r4,r2,410a55c <__udivdi3+0x280>
 410a548:	2409883a 	add	r4,r4,r16
 410a54c:	a97fffc4 	addi	r5,r21,-1
 410a550:	24000136 	bltu	r4,r16,410a558 <__udivdi3+0x27c>
 410a554:	2080e636 	bltu	r4,r2,410a8f0 <__udivdi3+0x614>
 410a558:	282b883a 	mov	r21,r5
 410a55c:	20a3c83a 	sub	r17,r4,r2
 410a560:	8809883a 	mov	r4,r17
 410a564:	b00b883a 	mov	r5,r22
 410a568:	d8c00015 	stw	r3,0(sp)
 410a56c:	41004d00 	call	41004d0 <__umodsi3>
 410a570:	8809883a 	mov	r4,r17
 410a574:	1023883a 	mov	r17,r2
 410a578:	b00b883a 	mov	r5,r22
 410a57c:	8822943a 	slli	r17,r17,16
 410a580:	410046c0 	call	410046c <__udivsi3>
 410a584:	a00b883a 	mov	r5,r20
 410a588:	1009883a 	mov	r4,r2
 410a58c:	9cffffcc 	andi	r19,r19,65535
 410a590:	1025883a 	mov	r18,r2
 410a594:	8ce6b03a 	or	r19,r17,r19
 410a598:	410aec00 	call	410aec0 <__mulsi3>
 410a59c:	d8c00017 	ldw	r3,0(sp)
 410a5a0:	9880052e 	bgeu	r19,r2,410a5b8 <__udivdi3+0x2dc>
 410a5a4:	84e7883a 	add	r19,r16,r19
 410a5a8:	913fffc4 	addi	r4,r18,-1
 410a5ac:	9c000136 	bltu	r19,r16,410a5b4 <__udivdi3+0x2d8>
 410a5b0:	9880c836 	bltu	r19,r2,410a8d4 <__udivdi3+0x5f8>
 410a5b4:	2025883a 	mov	r18,r4
 410a5b8:	a80c943a 	slli	r6,r21,16
 410a5bc:	3484b03a 	or	r2,r6,r18
 410a5c0:	003f9d06 	br	410a438 <__udivdi3+0x15c>
 410a5c4:	80804030 	cmpltui	r2,r16,256
 410a5c8:	1000b81e 	bne	r2,zero,410a8ac <__udivdi3+0x5d0>
 410a5cc:	8006d23a 	srli	r3,r16,8
 410a5d0:	04400204 	movi	r17,8
 410a5d4:	003fc006 	br	410a4d8 <__udivdi3+0x1fc>
 410a5d8:	30804030 	cmpltui	r2,r6,256
 410a5dc:	1000a51e 	bne	r2,zero,410a874 <__udivdi3+0x598>
 410a5e0:	3006d23a 	srli	r3,r6,8
 410a5e4:	04400204 	movi	r17,8
 410a5e8:	003f5506 	br	410a340 <__udivdi3+0x64>
 410a5ec:	38804030 	cmpltui	r2,r7,256
 410a5f0:	1000a51e 	bne	r2,zero,410a888 <__udivdi3+0x5ac>
 410a5f4:	3804d23a 	srli	r2,r7,8
 410a5f8:	01000204 	movi	r4,8
 410a5fc:	003fa006 	br	410a480 <__udivdi3+0x1a4>
 410a600:	80a0983a 	sll	r16,r16,r2
 410a604:	946ed83a 	srl	r23,r18,r17
 410a608:	9086983a 	sll	r3,r18,r2
 410a60c:	802cd43a 	srli	r22,r16,16
 410a610:	a462d83a 	srl	r17,r20,r17
 410a614:	b809883a 	mov	r4,r23
 410a618:	b00b883a 	mov	r5,r22
 410a61c:	88eab03a 	or	r21,r17,r3
 410a620:	a0a6983a 	sll	r19,r20,r2
 410a624:	41004d00 	call	41004d0 <__umodsi3>
 410a628:	b809883a 	mov	r4,r23
 410a62c:	b00b883a 	mov	r5,r22
 410a630:	1025883a 	mov	r18,r2
 410a634:	853fffcc 	andi	r20,r16,65535
 410a638:	410046c0 	call	410046c <__udivsi3>
 410a63c:	a009883a 	mov	r4,r20
 410a640:	100b883a 	mov	r5,r2
 410a644:	102f883a 	mov	r23,r2
 410a648:	410aec00 	call	410aec0 <__mulsi3>
 410a64c:	9024943a 	slli	r18,r18,16
 410a650:	a808d43a 	srli	r4,r21,16
 410a654:	9108b03a 	or	r4,r18,r4
 410a658:	2080062e 	bgeu	r4,r2,410a674 <__udivdi3+0x398>
 410a65c:	2409883a 	add	r4,r4,r16
 410a660:	b8ffffc4 	addi	r3,r23,-1
 410a664:	24009936 	bltu	r4,r16,410a8cc <__udivdi3+0x5f0>
 410a668:	2080982e 	bgeu	r4,r2,410a8cc <__udivdi3+0x5f0>
 410a66c:	bdffff84 	addi	r23,r23,-2
 410a670:	2409883a 	add	r4,r4,r16
 410a674:	20a3c83a 	sub	r17,r4,r2
 410a678:	8809883a 	mov	r4,r17
 410a67c:	b00b883a 	mov	r5,r22
 410a680:	41004d00 	call	41004d0 <__umodsi3>
 410a684:	1025883a 	mov	r18,r2
 410a688:	8809883a 	mov	r4,r17
 410a68c:	b00b883a 	mov	r5,r22
 410a690:	9024943a 	slli	r18,r18,16
 410a694:	410046c0 	call	410046c <__udivsi3>
 410a698:	100b883a 	mov	r5,r2
 410a69c:	a009883a 	mov	r4,r20
 410a6a0:	ac7fffcc 	andi	r17,r21,65535
 410a6a4:	1039883a 	mov	fp,r2
 410a6a8:	9462b03a 	or	r17,r18,r17
 410a6ac:	410aec00 	call	410aec0 <__mulsi3>
 410a6b0:	8880062e 	bgeu	r17,r2,410a6cc <__udivdi3+0x3f0>
 410a6b4:	8c23883a 	add	r17,r17,r16
 410a6b8:	e0ffffc4 	addi	r3,fp,-1
 410a6bc:	8c007f36 	bltu	r17,r16,410a8bc <__udivdi3+0x5e0>
 410a6c0:	88807e2e 	bgeu	r17,r2,410a8bc <__udivdi3+0x5e0>
 410a6c4:	e73fff84 	addi	fp,fp,-2
 410a6c8:	8c23883a 	add	r17,r17,r16
 410a6cc:	b806943a 	slli	r3,r23,16
 410a6d0:	88a3c83a 	sub	r17,r17,r2
 410a6d4:	1f06b03a 	or	r3,r3,fp
 410a6d8:	003f8a06 	br	410a504 <__udivdi3+0x228>
 410a6dc:	30a6d83a 	srl	r19,r6,r2
 410a6e0:	3c4e983a 	sll	r7,r7,r17
 410a6e4:	90a0d83a 	srl	r16,r18,r2
 410a6e8:	9446983a 	sll	r3,r18,r17
 410a6ec:	99e6b03a 	or	r19,r19,r7
 410a6f0:	a084d83a 	srl	r2,r20,r2
 410a6f4:	9838d43a 	srli	fp,r19,16
 410a6f8:	8009883a 	mov	r4,r16
 410a6fc:	10eab03a 	or	r21,r2,r3
 410a700:	e00b883a 	mov	r5,fp
 410a704:	346c983a 	sll	r22,r6,r17
 410a708:	dd400015 	stw	r21,0(sp)
 410a70c:	41004d00 	call	41004d0 <__umodsi3>
 410a710:	8009883a 	mov	r4,r16
 410a714:	e00b883a 	mov	r5,fp
 410a718:	102f883a 	mov	r23,r2
 410a71c:	9cbfffcc 	andi	r18,r19,65535
 410a720:	410046c0 	call	410046c <__udivsi3>
 410a724:	9009883a 	mov	r4,r18
 410a728:	100b883a 	mov	r5,r2
 410a72c:	1021883a 	mov	r16,r2
 410a730:	410aec00 	call	410aec0 <__mulsi3>
 410a734:	b82e943a 	slli	r23,r23,16
 410a738:	a808d43a 	srli	r4,r21,16
 410a73c:	b908b03a 	or	r4,r23,r4
 410a740:	2080062e 	bgeu	r4,r2,410a75c <__udivdi3+0x480>
 410a744:	24c9883a 	add	r4,r4,r19
 410a748:	817fffc4 	addi	r5,r16,-1
 410a74c:	24c05d36 	bltu	r4,r19,410a8c4 <__udivdi3+0x5e8>
 410a750:	20805c2e 	bgeu	r4,r2,410a8c4 <__udivdi3+0x5e8>
 410a754:	843fff84 	addi	r16,r16,-2
 410a758:	24c9883a 	add	r4,r4,r19
 410a75c:	20abc83a 	sub	r21,r4,r2
 410a760:	a809883a 	mov	r4,r21
 410a764:	e00b883a 	mov	r5,fp
 410a768:	41004d00 	call	41004d0 <__umodsi3>
 410a76c:	a809883a 	mov	r4,r21
 410a770:	e00b883a 	mov	r5,fp
 410a774:	102b883a 	mov	r21,r2
 410a778:	410046c0 	call	410046c <__udivsi3>
 410a77c:	9009883a 	mov	r4,r18
 410a780:	100b883a 	mov	r5,r2
 410a784:	102f883a 	mov	r23,r2
 410a788:	410aec00 	call	410aec0 <__mulsi3>
 410a78c:	d8c00017 	ldw	r3,0(sp)
 410a790:	a82a943a 	slli	r21,r21,16
 410a794:	100d883a 	mov	r6,r2
 410a798:	1cbfffcc 	andi	r18,r3,65535
 410a79c:	aca4b03a 	or	r18,r21,r18
 410a7a0:	9080062e 	bgeu	r18,r2,410a7bc <__udivdi3+0x4e0>
 410a7a4:	94e5883a 	add	r18,r18,r19
 410a7a8:	b8bfffc4 	addi	r2,r23,-1
 410a7ac:	94c04136 	bltu	r18,r19,410a8b4 <__udivdi3+0x5d8>
 410a7b0:	9180402e 	bgeu	r18,r6,410a8b4 <__udivdi3+0x5d8>
 410a7b4:	bdffff84 	addi	r23,r23,-2
 410a7b8:	94e5883a 	add	r18,r18,r19
 410a7bc:	8004943a 	slli	r2,r16,16
 410a7c0:	bd7fffcc 	andi	r21,r23,65535
 410a7c4:	b73fffcc 	andi	fp,r22,65535
 410a7c8:	15e0b03a 	or	r16,r2,r23
 410a7cc:	8026d43a 	srli	r19,r16,16
 410a7d0:	a809883a 	mov	r4,r21
 410a7d4:	e00b883a 	mov	r5,fp
 410a7d8:	91a5c83a 	sub	r18,r18,r6
 410a7dc:	b02cd43a 	srli	r22,r22,16
 410a7e0:	410aec00 	call	410aec0 <__mulsi3>
 410a7e4:	9809883a 	mov	r4,r19
 410a7e8:	e00b883a 	mov	r5,fp
 410a7ec:	102f883a 	mov	r23,r2
 410a7f0:	410aec00 	call	410aec0 <__mulsi3>
 410a7f4:	9809883a 	mov	r4,r19
 410a7f8:	b00b883a 	mov	r5,r22
 410a7fc:	1027883a 	mov	r19,r2
 410a800:	410aec00 	call	410aec0 <__mulsi3>
 410a804:	a809883a 	mov	r4,r21
 410a808:	b00b883a 	mov	r5,r22
 410a80c:	102b883a 	mov	r21,r2
 410a810:	410aec00 	call	410aec0 <__mulsi3>
 410a814:	b806d43a 	srli	r3,r23,16
 410a818:	14c5883a 	add	r2,r2,r19
 410a81c:	1887883a 	add	r3,r3,r2
 410a820:	1cc0022e 	bgeu	r3,r19,410a82c <__udivdi3+0x550>
 410a824:	00800074 	movhi	r2,1
 410a828:	a8ab883a 	add	r21,r21,r2
 410a82c:	1804d43a 	srli	r2,r3,16
 410a830:	156b883a 	add	r21,r2,r21
 410a834:	95400936 	bltu	r18,r21,410a85c <__udivdi3+0x580>
 410a838:	95400326 	beq	r18,r21,410a848 <__udivdi3+0x56c>
 410a83c:	8005883a 	mov	r2,r16
 410a840:	0007883a 	mov	r3,zero
 410a844:	003efc06 	br	410a438 <__udivdi3+0x15c>
 410a848:	1806943a 	slli	r3,r3,16
 410a84c:	a44c983a 	sll	r6,r20,r17
 410a850:	bdffffcc 	andi	r23,r23,65535
 410a854:	1dc7883a 	add	r3,r3,r23
 410a858:	30fff82e 	bgeu	r6,r3,410a83c <__udivdi3+0x560>
 410a85c:	80bfffc4 	addi	r2,r16,-1
 410a860:	0007883a 	mov	r3,zero
 410a864:	003ef406 	br	410a438 <__udivdi3+0x15c>
 410a868:	3804d43a 	srli	r2,r7,16
 410a86c:	01000404 	movi	r4,16
 410a870:	003f0306 	br	410a480 <__udivdi3+0x1a4>
 410a874:	3007883a 	mov	r3,r6
 410a878:	003eb106 	br	410a340 <__udivdi3+0x64>
 410a87c:	0007883a 	mov	r3,zero
 410a880:	00800044 	movi	r2,1
 410a884:	003eec06 	br	410a438 <__udivdi3+0x15c>
 410a888:	3805883a 	mov	r2,r7
 410a88c:	0009883a 	mov	r4,zero
 410a890:	003efb06 	br	410a480 <__udivdi3+0x1a4>
 410a894:	8006d43a 	srli	r3,r16,16
 410a898:	04400404 	movi	r17,16
 410a89c:	003f0e06 	br	410a4d8 <__udivdi3+0x1fc>
 410a8a0:	3006d43a 	srli	r3,r6,16
 410a8a4:	04400404 	movi	r17,16
 410a8a8:	003ea506 	br	410a340 <__udivdi3+0x64>
 410a8ac:	8007883a 	mov	r3,r16
 410a8b0:	003f0906 	br	410a4d8 <__udivdi3+0x1fc>
 410a8b4:	102f883a 	mov	r23,r2
 410a8b8:	003fc006 	br	410a7bc <__udivdi3+0x4e0>
 410a8bc:	1839883a 	mov	fp,r3
 410a8c0:	003f8206 	br	410a6cc <__udivdi3+0x3f0>
 410a8c4:	2821883a 	mov	r16,r5
 410a8c8:	003fa406 	br	410a75c <__udivdi3+0x480>
 410a8cc:	182f883a 	mov	r23,r3
 410a8d0:	003f6806 	br	410a674 <__udivdi3+0x398>
 410a8d4:	94bfff84 	addi	r18,r18,-2
 410a8d8:	003f3706 	br	410a5b8 <__udivdi3+0x2dc>
 410a8dc:	94bfff84 	addi	r18,r18,-2
 410a8e0:	003ece06 	br	410a41c <__udivdi3+0x140>
 410a8e4:	ad7fff84 	addi	r21,r21,-2
 410a8e8:	2409883a 	add	r4,r4,r16
 410a8ec:	003eb606 	br	410a3c8 <__udivdi3+0xec>
 410a8f0:	ad7fff84 	addi	r21,r21,-2
 410a8f4:	2409883a 	add	r4,r4,r16
 410a8f8:	003f1806 	br	410a55c <__udivdi3+0x280>

0410a8fc <__umoddi3>:
 410a8fc:	defff304 	addi	sp,sp,-52
 410a900:	dc400415 	stw	r17,16(sp)
 410a904:	dc000315 	stw	r16,12(sp)
 410a908:	dfc00c15 	stw	ra,48(sp)
 410a90c:	df000b15 	stw	fp,44(sp)
 410a910:	ddc00a15 	stw	r23,40(sp)
 410a914:	dd800915 	stw	r22,36(sp)
 410a918:	dd400815 	stw	r21,32(sp)
 410a91c:	dd000715 	stw	r20,28(sp)
 410a920:	dcc00615 	stw	r19,24(sp)
 410a924:	dc800515 	stw	r18,20(sp)
 410a928:	2823883a 	mov	r17,r5
 410a92c:	2021883a 	mov	r16,r4
 410a930:	38003b1e 	bne	r7,zero,410aa20 <__umoddi3+0x124>
 410a934:	3825883a 	mov	r18,r7
 410a938:	3029883a 	mov	r20,r6
 410a93c:	2027883a 	mov	r19,r4
 410a940:	29805b2e 	bgeu	r5,r6,410aab0 <__umoddi3+0x1b4>
 410a944:	00bfffd4 	movui	r2,65535
 410a948:	282d883a 	mov	r22,r5
 410a94c:	11809a2e 	bgeu	r2,r6,410abb8 <__umoddi3+0x2bc>
 410a950:	00804034 	movhi	r2,256
 410a954:	30814436 	bltu	r6,r2,410ae68 <__umoddi3+0x56c>
 410a958:	3006d63a 	srli	r3,r6,24
 410a95c:	04800604 	movi	r18,24
 410a960:	00810474 	movhi	r2,1041
 410a964:	1885883a 	add	r2,r3,r2
 410a968:	10846303 	ldbu	r2,4492(r2)
 410a96c:	00c00804 	movi	r3,32
 410a970:	1485883a 	add	r2,r2,r18
 410a974:	18a5c83a 	sub	r18,r3,r2
 410a978:	18800526 	beq	r3,r2,410a990 <__umoddi3+0x94>
 410a97c:	8ca2983a 	sll	r17,r17,r18
 410a980:	8084d83a 	srl	r2,r16,r2
 410a984:	34a8983a 	sll	r20,r6,r18
 410a988:	84a6983a 	sll	r19,r16,r18
 410a98c:	146cb03a 	or	r22,r2,r17
 410a990:	a02ed43a 	srli	r23,r20,16
 410a994:	b009883a 	mov	r4,r22
 410a998:	a57fffcc 	andi	r21,r20,65535
 410a99c:	b80b883a 	mov	r5,r23
 410a9a0:	41004d00 	call	41004d0 <__umodsi3>
 410a9a4:	b80b883a 	mov	r5,r23
 410a9a8:	b009883a 	mov	r4,r22
 410a9ac:	1023883a 	mov	r17,r2
 410a9b0:	410046c0 	call	410046c <__udivsi3>
 410a9b4:	a809883a 	mov	r4,r21
 410a9b8:	100b883a 	mov	r5,r2
 410a9bc:	410aec00 	call	410aec0 <__mulsi3>
 410a9c0:	8822943a 	slli	r17,r17,16
 410a9c4:	9808d43a 	srli	r4,r19,16
 410a9c8:	8908b03a 	or	r4,r17,r4
 410a9cc:	2080042e 	bgeu	r4,r2,410a9e0 <__umoddi3+0xe4>
 410a9d0:	2509883a 	add	r4,r4,r20
 410a9d4:	25000236 	bltu	r4,r20,410a9e0 <__umoddi3+0xe4>
 410a9d8:	2080012e 	bgeu	r4,r2,410a9e0 <__umoddi3+0xe4>
 410a9dc:	2509883a 	add	r4,r4,r20
 410a9e0:	20a1c83a 	sub	r16,r4,r2
 410a9e4:	b80b883a 	mov	r5,r23
 410a9e8:	8009883a 	mov	r4,r16
 410a9ec:	41004d00 	call	41004d0 <__umodsi3>
 410a9f0:	b80b883a 	mov	r5,r23
 410a9f4:	8009883a 	mov	r4,r16
 410a9f8:	1023883a 	mov	r17,r2
 410a9fc:	410046c0 	call	410046c <__udivsi3>
 410aa00:	8822943a 	slli	r17,r17,16
 410aa04:	100b883a 	mov	r5,r2
 410aa08:	a809883a 	mov	r4,r21
 410aa0c:	410aec00 	call	410aec0 <__mulsi3>
 410aa10:	98ffffcc 	andi	r3,r19,65535
 410aa14:	88c6b03a 	or	r3,r17,r3
 410aa18:	18805e2e 	bgeu	r3,r2,410ab94 <__umoddi3+0x298>
 410aa1c:	00005906 	br	410ab84 <__umoddi3+0x288>
 410aa20:	2005883a 	mov	r2,r4
 410aa24:	29c00d2e 	bgeu	r5,r7,410aa5c <__umoddi3+0x160>
 410aa28:	2807883a 	mov	r3,r5
 410aa2c:	dfc00c17 	ldw	ra,48(sp)
 410aa30:	df000b17 	ldw	fp,44(sp)
 410aa34:	ddc00a17 	ldw	r23,40(sp)
 410aa38:	dd800917 	ldw	r22,36(sp)
 410aa3c:	dd400817 	ldw	r21,32(sp)
 410aa40:	dd000717 	ldw	r20,28(sp)
 410aa44:	dcc00617 	ldw	r19,24(sp)
 410aa48:	dc800517 	ldw	r18,20(sp)
 410aa4c:	dc400417 	ldw	r17,16(sp)
 410aa50:	dc000317 	ldw	r16,12(sp)
 410aa54:	dec00d04 	addi	sp,sp,52
 410aa58:	f800283a 	ret
 410aa5c:	013fffd4 	movui	r4,65535
 410aa60:	2807883a 	mov	r3,r5
 410aa64:	21c0592e 	bgeu	r4,r7,410abcc <__umoddi3+0x2d0>
 410aa68:	01004034 	movhi	r4,256
 410aa6c:	39010336 	bltu	r7,r4,410ae7c <__umoddi3+0x580>
 410aa70:	3808d63a 	srli	r4,r7,24
 410aa74:	02000604 	movi	r8,24
 410aa78:	01410474 	movhi	r5,1041
 410aa7c:	214b883a 	add	r5,r4,r5
 410aa80:	2d046303 	ldbu	r20,4492(r5)
 410aa84:	01000804 	movi	r4,32
 410aa88:	a229883a 	add	r20,r20,r8
 410aa8c:	252bc83a 	sub	r21,r4,r20
 410aa90:	2500531e 	bne	r4,r20,410abe0 <__umoddi3+0x2e4>
 410aa94:	3c400136 	bltu	r7,r17,410aa9c <__umoddi3+0x1a0>
 410aa98:	81bfe436 	bltu	r16,r6,410aa2c <__umoddi3+0x130>
 410aa9c:	8185c83a 	sub	r2,r16,r6
 410aaa0:	89cfc83a 	sub	r7,r17,r7
 410aaa4:	8087803a 	cmpltu	r3,r16,r2
 410aaa8:	38c7c83a 	sub	r3,r7,r3
 410aaac:	003fdf06 	br	410aa2c <__umoddi3+0x130>
 410aab0:	3000041e 	bne	r6,zero,410aac4 <__umoddi3+0x1c8>
 410aab4:	000b883a 	mov	r5,zero
 410aab8:	01000044 	movi	r4,1
 410aabc:	410046c0 	call	410046c <__udivsi3>
 410aac0:	1029883a 	mov	r20,r2
 410aac4:	00bfffd4 	movui	r2,65535
 410aac8:	1500362e 	bgeu	r2,r20,410aba4 <__umoddi3+0x2a8>
 410aacc:	00804034 	movhi	r2,256
 410aad0:	a080ed36 	bltu	r20,r2,410ae88 <__umoddi3+0x58c>
 410aad4:	a006d63a 	srli	r3,r20,24
 410aad8:	04800604 	movi	r18,24
 410aadc:	00810474 	movhi	r2,1041
 410aae0:	1885883a 	add	r2,r3,r2
 410aae4:	15846303 	ldbu	r22,4492(r2)
 410aae8:	00800804 	movi	r2,32
 410aaec:	b4ad883a 	add	r22,r22,r18
 410aaf0:	15a5c83a 	sub	r18,r2,r22
 410aaf4:	1580a51e 	bne	r2,r22,410ad8c <__umoddi3+0x490>
 410aaf8:	a02ed43a 	srli	r23,r20,16
 410aafc:	8d23c83a 	sub	r17,r17,r20
 410ab00:	a57fffcc 	andi	r21,r20,65535
 410ab04:	8809883a 	mov	r4,r17
 410ab08:	b80b883a 	mov	r5,r23
 410ab0c:	41004d00 	call	41004d0 <__umodsi3>
 410ab10:	8809883a 	mov	r4,r17
 410ab14:	b80b883a 	mov	r5,r23
 410ab18:	1023883a 	mov	r17,r2
 410ab1c:	410046c0 	call	410046c <__udivsi3>
 410ab20:	1009883a 	mov	r4,r2
 410ab24:	a80b883a 	mov	r5,r21
 410ab28:	410aec00 	call	410aec0 <__mulsi3>
 410ab2c:	8822943a 	slli	r17,r17,16
 410ab30:	9808d43a 	srli	r4,r19,16
 410ab34:	8908b03a 	or	r4,r17,r4
 410ab38:	2080032e 	bgeu	r4,r2,410ab48 <__umoddi3+0x24c>
 410ab3c:	2509883a 	add	r4,r4,r20
 410ab40:	25000136 	bltu	r4,r20,410ab48 <__umoddi3+0x24c>
 410ab44:	2080dc36 	bltu	r4,r2,410aeb8 <__umoddi3+0x5bc>
 410ab48:	20a1c83a 	sub	r16,r4,r2
 410ab4c:	b80b883a 	mov	r5,r23
 410ab50:	8009883a 	mov	r4,r16
 410ab54:	41004d00 	call	41004d0 <__umodsi3>
 410ab58:	b80b883a 	mov	r5,r23
 410ab5c:	8009883a 	mov	r4,r16
 410ab60:	1023883a 	mov	r17,r2
 410ab64:	8822943a 	slli	r17,r17,16
 410ab68:	410046c0 	call	410046c <__udivsi3>
 410ab6c:	a80b883a 	mov	r5,r21
 410ab70:	1009883a 	mov	r4,r2
 410ab74:	410aec00 	call	410aec0 <__mulsi3>
 410ab78:	9cffffcc 	andi	r19,r19,65535
 410ab7c:	8cc6b03a 	or	r3,r17,r19
 410ab80:	1880042e 	bgeu	r3,r2,410ab94 <__umoddi3+0x298>
 410ab84:	1d07883a 	add	r3,r3,r20
 410ab88:	1d000236 	bltu	r3,r20,410ab94 <__umoddi3+0x298>
 410ab8c:	1880012e 	bgeu	r3,r2,410ab94 <__umoddi3+0x298>
 410ab90:	1d07883a 	add	r3,r3,r20
 410ab94:	1885c83a 	sub	r2,r3,r2
 410ab98:	1484d83a 	srl	r2,r2,r18
 410ab9c:	0007883a 	mov	r3,zero
 410aba0:	003fa206 	br	410aa2c <__umoddi3+0x130>
 410aba4:	a0804030 	cmpltui	r2,r20,256
 410aba8:	1000ba1e 	bne	r2,zero,410ae94 <__umoddi3+0x598>
 410abac:	a006d23a 	srli	r3,r20,8
 410abb0:	04800204 	movi	r18,8
 410abb4:	003fc906 	br	410aadc <__umoddi3+0x1e0>
 410abb8:	30804030 	cmpltui	r2,r6,256
 410abbc:	1000ad1e 	bne	r2,zero,410ae74 <__umoddi3+0x578>
 410abc0:	3006d23a 	srli	r3,r6,8
 410abc4:	04800204 	movi	r18,8
 410abc8:	003f6506 	br	410a960 <__umoddi3+0x64>
 410abcc:	39004030 	cmpltui	r4,r7,256
 410abd0:	2000b21e 	bne	r4,zero,410ae9c <__umoddi3+0x5a0>
 410abd4:	3808d23a 	srli	r4,r7,8
 410abd8:	02000204 	movi	r8,8
 410abdc:	003fa606 	br	410aa78 <__umoddi3+0x17c>
 410abe0:	3d4e983a 	sll	r7,r7,r21
 410abe4:	3508d83a 	srl	r4,r6,r20
 410abe8:	8d2cd83a 	srl	r22,r17,r20
 410abec:	8504d83a 	srl	r2,r16,r20
 410abf0:	21e4b03a 	or	r18,r4,r7
 410abf4:	8d62983a 	sll	r17,r17,r21
 410abf8:	9026d43a 	srli	r19,r18,16
 410abfc:	354c983a 	sll	r6,r6,r21
 410ac00:	1444b03a 	or	r2,r2,r17
 410ac04:	b009883a 	mov	r4,r22
 410ac08:	980b883a 	mov	r5,r19
 410ac0c:	d9800115 	stw	r6,4(sp)
 410ac10:	d8800015 	stw	r2,0(sp)
 410ac14:	41004d00 	call	41004d0 <__umodsi3>
 410ac18:	980b883a 	mov	r5,r19
 410ac1c:	b009883a 	mov	r4,r22
 410ac20:	102f883a 	mov	r23,r2
 410ac24:	947fffcc 	andi	r17,r18,65535
 410ac28:	410046c0 	call	410046c <__udivsi3>
 410ac2c:	8809883a 	mov	r4,r17
 410ac30:	100b883a 	mov	r5,r2
 410ac34:	1039883a 	mov	fp,r2
 410ac38:	410aec00 	call	410aec0 <__mulsi3>
 410ac3c:	d8c00017 	ldw	r3,0(sp)
 410ac40:	b82e943a 	slli	r23,r23,16
 410ac44:	8560983a 	sll	r16,r16,r21
 410ac48:	1808d43a 	srli	r4,r3,16
 410ac4c:	b908b03a 	or	r4,r23,r4
 410ac50:	2080062e 	bgeu	r4,r2,410ac6c <__umoddi3+0x370>
 410ac54:	2489883a 	add	r4,r4,r18
 410ac58:	e17fffc4 	addi	r5,fp,-1
 410ac5c:	24809436 	bltu	r4,r18,410aeb0 <__umoddi3+0x5b4>
 410ac60:	2080932e 	bgeu	r4,r2,410aeb0 <__umoddi3+0x5b4>
 410ac64:	e73fff84 	addi	fp,fp,-2
 410ac68:	2489883a 	add	r4,r4,r18
 410ac6c:	20adc83a 	sub	r22,r4,r2
 410ac70:	980b883a 	mov	r5,r19
 410ac74:	b009883a 	mov	r4,r22
 410ac78:	41004d00 	call	41004d0 <__umodsi3>
 410ac7c:	980b883a 	mov	r5,r19
 410ac80:	b009883a 	mov	r4,r22
 410ac84:	102f883a 	mov	r23,r2
 410ac88:	410046c0 	call	410046c <__udivsi3>
 410ac8c:	100b883a 	mov	r5,r2
 410ac90:	8809883a 	mov	r4,r17
 410ac94:	d8800215 	stw	r2,8(sp)
 410ac98:	410aec00 	call	410aec0 <__mulsi3>
 410ac9c:	d8c00017 	ldw	r3,0(sp)
 410aca0:	b82e943a 	slli	r23,r23,16
 410aca4:	d9400217 	ldw	r5,8(sp)
 410aca8:	1c7fffcc 	andi	r17,r3,65535
 410acac:	bc62b03a 	or	r17,r23,r17
 410acb0:	8880062e 	bgeu	r17,r2,410accc <__umoddi3+0x3d0>
 410acb4:	8ca3883a 	add	r17,r17,r18
 410acb8:	28ffffc4 	addi	r3,r5,-1
 410acbc:	8c807a36 	bltu	r17,r18,410aea8 <__umoddi3+0x5ac>
 410acc0:	8880792e 	bgeu	r17,r2,410aea8 <__umoddi3+0x5ac>
 410acc4:	297fff84 	addi	r5,r5,-2
 410acc8:	8ca3883a 	add	r17,r17,r18
 410accc:	e02c943a 	slli	r22,fp,16
 410acd0:	d9c00117 	ldw	r7,4(sp)
 410acd4:	29bfffcc 	andi	r6,r5,65535
 410acd8:	b16cb03a 	or	r22,r22,r5
 410acdc:	38ffffcc 	andi	r3,r7,65535
 410ace0:	b02cd43a 	srli	r22,r22,16
 410ace4:	180b883a 	mov	r5,r3
 410ace8:	3009883a 	mov	r4,r6
 410acec:	3838d43a 	srli	fp,r7,16
 410acf0:	182f883a 	mov	r23,r3
 410acf4:	d9800015 	stw	r6,0(sp)
 410acf8:	88a3c83a 	sub	r17,r17,r2
 410acfc:	410aec00 	call	410aec0 <__mulsi3>
 410ad00:	b80b883a 	mov	r5,r23
 410ad04:	b009883a 	mov	r4,r22
 410ad08:	102f883a 	mov	r23,r2
 410ad0c:	410aec00 	call	410aec0 <__mulsi3>
 410ad10:	e00b883a 	mov	r5,fp
 410ad14:	b009883a 	mov	r4,r22
 410ad18:	102d883a 	mov	r22,r2
 410ad1c:	410aec00 	call	410aec0 <__mulsi3>
 410ad20:	d9800017 	ldw	r6,0(sp)
 410ad24:	e00b883a 	mov	r5,fp
 410ad28:	1039883a 	mov	fp,r2
 410ad2c:	3009883a 	mov	r4,r6
 410ad30:	410aec00 	call	410aec0 <__mulsi3>
 410ad34:	b808d43a 	srli	r4,r23,16
 410ad38:	1585883a 	add	r2,r2,r22
 410ad3c:	2089883a 	add	r4,r4,r2
 410ad40:	2580022e 	bgeu	r4,r22,410ad4c <__umoddi3+0x450>
 410ad44:	00800074 	movhi	r2,1
 410ad48:	e0b9883a 	add	fp,fp,r2
 410ad4c:	2006d43a 	srli	r3,r4,16
 410ad50:	2008943a 	slli	r4,r4,16
 410ad54:	bdffffcc 	andi	r23,r23,65535
 410ad58:	1f07883a 	add	r3,r3,fp
 410ad5c:	25c9883a 	add	r4,r4,r23
 410ad60:	88c03a36 	bltu	r17,r3,410ae4c <__umoddi3+0x550>
 410ad64:	88c03826 	beq	r17,r3,410ae48 <__umoddi3+0x54c>
 410ad68:	8109c83a 	sub	r4,r16,r4
 410ad6c:	8121803a 	cmpltu	r16,r16,r4
 410ad70:	88c7c83a 	sub	r3,r17,r3
 410ad74:	1c07c83a 	sub	r3,r3,r16
 410ad78:	1d04983a 	sll	r2,r3,r20
 410ad7c:	2548d83a 	srl	r4,r4,r21
 410ad80:	1d46d83a 	srl	r3,r3,r21
 410ad84:	1104b03a 	or	r2,r2,r4
 410ad88:	003f2806 	br	410aa2c <__umoddi3+0x130>
 410ad8c:	a4a8983a 	sll	r20,r20,r18
 410ad90:	8da6d83a 	srl	r19,r17,r22
 410ad94:	8ca2983a 	sll	r17,r17,r18
 410ad98:	a02ed43a 	srli	r23,r20,16
 410ad9c:	9809883a 	mov	r4,r19
 410ada0:	85acd83a 	srl	r22,r16,r22
 410ada4:	b80b883a 	mov	r5,r23
 410ada8:	41004d00 	call	41004d0 <__umodsi3>
 410adac:	9809883a 	mov	r4,r19
 410adb0:	b80b883a 	mov	r5,r23
 410adb4:	b46cb03a 	or	r22,r22,r17
 410adb8:	a57fffcc 	andi	r21,r20,65535
 410adbc:	1023883a 	mov	r17,r2
 410adc0:	410046c0 	call	410046c <__udivsi3>
 410adc4:	a809883a 	mov	r4,r21
 410adc8:	100b883a 	mov	r5,r2
 410adcc:	410aec00 	call	410aec0 <__mulsi3>
 410add0:	8822943a 	slli	r17,r17,16
 410add4:	b008d43a 	srli	r4,r22,16
 410add8:	84a6983a 	sll	r19,r16,r18
 410addc:	8908b03a 	or	r4,r17,r4
 410ade0:	2080042e 	bgeu	r4,r2,410adf4 <__umoddi3+0x4f8>
 410ade4:	2509883a 	add	r4,r4,r20
 410ade8:	25000236 	bltu	r4,r20,410adf4 <__umoddi3+0x4f8>
 410adec:	2080012e 	bgeu	r4,r2,410adf4 <__umoddi3+0x4f8>
 410adf0:	2509883a 	add	r4,r4,r20
 410adf4:	20a1c83a 	sub	r16,r4,r2
 410adf8:	8009883a 	mov	r4,r16
 410adfc:	b80b883a 	mov	r5,r23
 410ae00:	41004d00 	call	41004d0 <__umodsi3>
 410ae04:	8009883a 	mov	r4,r16
 410ae08:	1021883a 	mov	r16,r2
 410ae0c:	b80b883a 	mov	r5,r23
 410ae10:	8020943a 	slli	r16,r16,16
 410ae14:	410046c0 	call	410046c <__udivsi3>
 410ae18:	100b883a 	mov	r5,r2
 410ae1c:	a809883a 	mov	r4,r21
 410ae20:	b47fffcc 	andi	r17,r22,65535
 410ae24:	410aec00 	call	410aec0 <__mulsi3>
 410ae28:	8462b03a 	or	r17,r16,r17
 410ae2c:	8880042e 	bgeu	r17,r2,410ae40 <__umoddi3+0x544>
 410ae30:	8d23883a 	add	r17,r17,r20
 410ae34:	8d000236 	bltu	r17,r20,410ae40 <__umoddi3+0x544>
 410ae38:	8880012e 	bgeu	r17,r2,410ae40 <__umoddi3+0x544>
 410ae3c:	8d23883a 	add	r17,r17,r20
 410ae40:	88a3c83a 	sub	r17,r17,r2
 410ae44:	003f2f06 	br	410ab04 <__umoddi3+0x208>
 410ae48:	813fc72e 	bgeu	r16,r4,410ad68 <__umoddi3+0x46c>
 410ae4c:	d8800117 	ldw	r2,4(sp)
 410ae50:	20a7c83a 	sub	r19,r4,r2
 410ae54:	24c9803a 	cmpltu	r4,r4,r19
 410ae58:	2489883a 	add	r4,r4,r18
 410ae5c:	1907c83a 	sub	r3,r3,r4
 410ae60:	9809883a 	mov	r4,r19
 410ae64:	003fc006 	br	410ad68 <__umoddi3+0x46c>
 410ae68:	3006d43a 	srli	r3,r6,16
 410ae6c:	04800404 	movi	r18,16
 410ae70:	003ebb06 	br	410a960 <__umoddi3+0x64>
 410ae74:	3007883a 	mov	r3,r6
 410ae78:	003eb906 	br	410a960 <__umoddi3+0x64>
 410ae7c:	3808d43a 	srli	r4,r7,16
 410ae80:	02000404 	movi	r8,16
 410ae84:	003efc06 	br	410aa78 <__umoddi3+0x17c>
 410ae88:	a006d43a 	srli	r3,r20,16
 410ae8c:	04800404 	movi	r18,16
 410ae90:	003f1206 	br	410aadc <__umoddi3+0x1e0>
 410ae94:	a007883a 	mov	r3,r20
 410ae98:	003f1006 	br	410aadc <__umoddi3+0x1e0>
 410ae9c:	3809883a 	mov	r4,r7
 410aea0:	0011883a 	mov	r8,zero
 410aea4:	003ef406 	br	410aa78 <__umoddi3+0x17c>
 410aea8:	180b883a 	mov	r5,r3
 410aeac:	003f8706 	br	410accc <__umoddi3+0x3d0>
 410aeb0:	2839883a 	mov	fp,r5
 410aeb4:	003f6d06 	br	410ac6c <__umoddi3+0x370>
 410aeb8:	2509883a 	add	r4,r4,r20
 410aebc:	003f2206 	br	410ab48 <__umoddi3+0x24c>

0410aec0 <__mulsi3>:
 410aec0:	0005883a 	mov	r2,zero
 410aec4:	20000726 	beq	r4,zero,410aee4 <__mulsi3+0x24>
 410aec8:	20c0004c 	andi	r3,r4,1
 410aecc:	2008d07a 	srli	r4,r4,1
 410aed0:	18000126 	beq	r3,zero,410aed8 <__mulsi3+0x18>
 410aed4:	1145883a 	add	r2,r2,r5
 410aed8:	294b883a 	add	r5,r5,r5
 410aedc:	203ffa1e 	bne	r4,zero,410aec8 <__mulsi3+0x8>
 410aee0:	f800283a 	ret
 410aee4:	f800283a 	ret

0410aee8 <__adddf3>:
 410aee8:	02000434 	movhi	r8,16
 410aeec:	423fffc4 	addi	r8,r8,-1
 410aef0:	2806d53a 	srli	r3,r5,20
 410aef4:	3804d53a 	srli	r2,r7,20
 410aef8:	2a14703a 	and	r10,r5,r8
 410aefc:	3a12703a 	and	r9,r7,r8
 410af00:	280ad7fa 	srli	r5,r5,31
 410af04:	501490fa 	slli	r10,r10,3
 410af08:	2018d77a 	srli	r12,r4,29
 410af0c:	481290fa 	slli	r9,r9,3
 410af10:	3016d77a 	srli	r11,r6,29
 410af14:	380ed7fa 	srli	r7,r7,31
 410af18:	defffb04 	addi	sp,sp,-20
 410af1c:	dc800215 	stw	r18,8(sp)
 410af20:	dc000015 	stw	r16,0(sp)
 410af24:	1c81ffcc 	andi	r18,r3,2047
 410af28:	1081ffcc 	andi	r2,r2,2047
 410af2c:	dfc00415 	stw	ra,16(sp)
 410af30:	dcc00315 	stw	r19,12(sp)
 410af34:	dc400115 	stw	r17,4(sp)
 410af38:	201c90fa 	slli	r14,r4,3
 410af3c:	301a90fa 	slli	r13,r6,3
 410af40:	2821883a 	mov	r16,r5
 410af44:	6294b03a 	or	r10,r12,r10
 410af48:	5a52b03a 	or	r9,r11,r9
 410af4c:	9087c83a 	sub	r3,r18,r2
 410af50:	29c06126 	beq	r5,r7,410b0d8 <__adddf3+0x1f0>
 410af54:	00c0550e 	bge	zero,r3,410b0ac <__adddf3+0x1c4>
 410af58:	10007326 	beq	r2,zero,410b128 <__adddf3+0x240>
 410af5c:	9081ffd8 	cmpnei	r2,r18,2047
 410af60:	1000bd26 	beq	r2,zero,410b258 <__adddf3+0x370>
 410af64:	4a402034 	orhi	r9,r9,128
 410af68:	18800e48 	cmpgei	r2,r3,57
 410af6c:	1000ef1e 	bne	r2,zero,410b32c <__adddf3+0x444>
 410af70:	18800808 	cmpgei	r2,r3,32
 410af74:	1001321e 	bne	r2,zero,410b440 <__adddf3+0x558>
 410af78:	00800804 	movi	r2,32
 410af7c:	10c5c83a 	sub	r2,r2,r3
 410af80:	68c8d83a 	srl	r4,r13,r3
 410af84:	48a2983a 	sll	r17,r9,r2
 410af88:	689a983a 	sll	r13,r13,r2
 410af8c:	48c6d83a 	srl	r3,r9,r3
 410af90:	8922b03a 	or	r17,r17,r4
 410af94:	681ac03a 	cmpne	r13,r13,zero
 410af98:	8b62b03a 	or	r17,r17,r13
 410af9c:	50d5c83a 	sub	r10,r10,r3
 410afa0:	7463c83a 	sub	r17,r14,r17
 410afa4:	7451803a 	cmpltu	r8,r14,r17
 410afa8:	5211c83a 	sub	r8,r10,r8
 410afac:	4080202c 	andhi	r2,r8,128
 410afb0:	10008d26 	beq	r2,zero,410b1e8 <__adddf3+0x300>
 410afb4:	02402034 	movhi	r9,128
 410afb8:	4a7fffc4 	addi	r9,r9,-1
 410afbc:	4266703a 	and	r19,r8,r9
 410afc0:	9800b326 	beq	r19,zero,410b290 <__adddf3+0x3a8>
 410afc4:	9809883a 	mov	r4,r19
 410afc8:	410d5d40 	call	410d5d4 <__clzsi2>
 410afcc:	10fffe04 	addi	r3,r2,-8
 410afd0:	02000804 	movi	r8,32
 410afd4:	40d1c83a 	sub	r8,r8,r3
 410afd8:	8a10d83a 	srl	r8,r17,r8
 410afdc:	98d2983a 	sll	r9,r19,r3
 410afe0:	88e2983a 	sll	r17,r17,r3
 410afe4:	4250b03a 	or	r8,r8,r9
 410afe8:	1c80b216 	blt	r3,r18,410b2b4 <__adddf3+0x3cc>
 410afec:	1c87c83a 	sub	r3,r3,r18
 410aff0:	19000044 	addi	r4,r3,1
 410aff4:	20800808 	cmpgei	r2,r4,32
 410aff8:	10006f1e 	bne	r2,zero,410b1b8 <__adddf3+0x2d0>
 410affc:	00800804 	movi	r2,32
 410b000:	1105c83a 	sub	r2,r2,r4
 410b004:	8906d83a 	srl	r3,r17,r4
 410b008:	88a2983a 	sll	r17,r17,r2
 410b00c:	4084983a 	sll	r2,r8,r2
 410b010:	4110d83a 	srl	r8,r8,r4
 410b014:	8822c03a 	cmpne	r17,r17,zero
 410b018:	10c4b03a 	or	r2,r2,r3
 410b01c:	1462b03a 	or	r17,r2,r17
 410b020:	0025883a 	mov	r18,zero
 410b024:	888001cc 	andi	r2,r17,7
 410b028:	10000726 	beq	r2,zero,410b048 <__adddf3+0x160>
 410b02c:	888003cc 	andi	r2,r17,15
 410b030:	10800120 	cmpeqi	r2,r2,4
 410b034:	1000041e 	bne	r2,zero,410b048 <__adddf3+0x160>
 410b038:	88c00104 	addi	r3,r17,4
 410b03c:	1c63803a 	cmpltu	r17,r3,r17
 410b040:	4451883a 	add	r8,r8,r17
 410b044:	1823883a 	mov	r17,r3
 410b048:	4080202c 	andhi	r2,r8,128
 410b04c:	10006826 	beq	r2,zero,410b1f0 <__adddf3+0x308>
 410b050:	90c00044 	addi	r3,r18,1
 410b054:	1881ffe0 	cmpeqi	r2,r3,2047
 410b058:	18c1ffcc 	andi	r3,r3,2047
 410b05c:	10007a1e 	bne	r2,zero,410b248 <__adddf3+0x360>
 410b060:	00bfe034 	movhi	r2,65408
 410b064:	10bfffc4 	addi	r2,r2,-1
 410b068:	4090703a 	and	r8,r8,r2
 410b06c:	4004977a 	slli	r2,r8,29
 410b070:	4010927a 	slli	r8,r8,9
 410b074:	8822d0fa 	srli	r17,r17,3
 410b078:	4010d33a 	srli	r8,r8,12
 410b07c:	1444b03a 	or	r2,r2,r17
 410b080:	1806953a 	slli	r3,r3,20
 410b084:	802097fa 	slli	r16,r16,31
 410b088:	1a06b03a 	or	r3,r3,r8
 410b08c:	1c06b03a 	or	r3,r3,r16
 410b090:	dfc00417 	ldw	ra,16(sp)
 410b094:	dcc00317 	ldw	r19,12(sp)
 410b098:	dc800217 	ldw	r18,8(sp)
 410b09c:	dc400117 	ldw	r17,4(sp)
 410b0a0:	dc000017 	ldw	r16,0(sp)
 410b0a4:	dec00504 	addi	sp,sp,20
 410b0a8:	f800283a 	ret
 410b0ac:	18002626 	beq	r3,zero,410b148 <__adddf3+0x260>
 410b0b0:	1487c83a 	sub	r3,r2,r18
 410b0b4:	9000ba1e 	bne	r18,zero,410b3a0 <__adddf3+0x4b8>
 410b0b8:	5388b03a 	or	r4,r10,r14
 410b0bc:	20011826 	beq	r4,zero,410b520 <__adddf3+0x638>
 410b0c0:	193fffc4 	addi	r4,r3,-1
 410b0c4:	20015726 	beq	r4,zero,410b624 <__adddf3+0x73c>
 410b0c8:	18c1ffd8 	cmpnei	r3,r3,2047
 410b0cc:	18013026 	beq	r3,zero,410b590 <__adddf3+0x6a8>
 410b0d0:	2007883a 	mov	r3,r4
 410b0d4:	0000b506 	br	410b3ac <__adddf3+0x4c4>
 410b0d8:	00c07b0e 	bge	zero,r3,410b2c8 <__adddf3+0x3e0>
 410b0dc:	10002e26 	beq	r2,zero,410b198 <__adddf3+0x2b0>
 410b0e0:	9081ffd8 	cmpnei	r2,r18,2047
 410b0e4:	10005c26 	beq	r2,zero,410b258 <__adddf3+0x370>
 410b0e8:	4a402034 	orhi	r9,r9,128
 410b0ec:	18800e48 	cmpgei	r2,r3,57
 410b0f0:	10004b1e 	bne	r2,zero,410b220 <__adddf3+0x338>
 410b0f4:	18800808 	cmpgei	r2,r3,32
 410b0f8:	1000ec26 	beq	r2,zero,410b4ac <__adddf3+0x5c4>
 410b0fc:	1c7ff804 	addi	r17,r3,-32
 410b100:	19000820 	cmpeqi	r4,r3,32
 410b104:	4c44d83a 	srl	r2,r9,r17
 410b108:	2000041e 	bne	r4,zero,410b11c <__adddf3+0x234>
 410b10c:	01001004 	movi	r4,64
 410b110:	20c7c83a 	sub	r3,r4,r3
 410b114:	48d2983a 	sll	r9,r9,r3
 410b118:	6a5ab03a 	or	r13,r13,r9
 410b11c:	6822c03a 	cmpne	r17,r13,zero
 410b120:	88a2b03a 	or	r17,r17,r2
 410b124:	00004006 	br	410b228 <__adddf3+0x340>
 410b128:	4b44b03a 	or	r2,r9,r13
 410b12c:	10008226 	beq	r2,zero,410b338 <__adddf3+0x450>
 410b130:	18bfffc4 	addi	r2,r3,-1
 410b134:	10011026 	beq	r2,zero,410b578 <__adddf3+0x690>
 410b138:	18c1ffd8 	cmpnei	r3,r3,2047
 410b13c:	18004626 	beq	r3,zero,410b258 <__adddf3+0x370>
 410b140:	1007883a 	mov	r3,r2
 410b144:	003f8806 	br	410af68 <__adddf3+0x80>
 410b148:	90800044 	addi	r2,r18,1
 410b14c:	1081ff8c 	andi	r2,r2,2046
 410b150:	1000a51e 	bne	r2,zero,410b3e8 <__adddf3+0x500>
 410b154:	538ab03a 	or	r5,r10,r14
 410b158:	4b44b03a 	or	r2,r9,r13
 410b15c:	9000f81e 	bne	r18,zero,410b540 <__adddf3+0x658>
 410b160:	28013726 	beq	r5,zero,410b640 <__adddf3+0x758>
 410b164:	10011226 	beq	r2,zero,410b5b0 <__adddf3+0x6c8>
 410b168:	7363c83a 	sub	r17,r14,r13
 410b16c:	7445803a 	cmpltu	r2,r14,r17
 410b170:	5251c83a 	sub	r8,r10,r9
 410b174:	4091c83a 	sub	r8,r8,r2
 410b178:	4080202c 	andhi	r2,r8,128
 410b17c:	10018f26 	beq	r2,zero,410b7bc <__adddf3+0x8d4>
 410b180:	6ba3c83a 	sub	r17,r13,r14
 410b184:	4a95c83a 	sub	r10,r9,r10
 410b188:	6c51803a 	cmpltu	r8,r13,r17
 410b18c:	5211c83a 	sub	r8,r10,r8
 410b190:	3821883a 	mov	r16,r7
 410b194:	003fa306 	br	410b024 <__adddf3+0x13c>
 410b198:	4b44b03a 	or	r2,r9,r13
 410b19c:	10006626 	beq	r2,zero,410b338 <__adddf3+0x450>
 410b1a0:	18bfffc4 	addi	r2,r3,-1
 410b1a4:	1000ec26 	beq	r2,zero,410b558 <__adddf3+0x670>
 410b1a8:	18c1ffd8 	cmpnei	r3,r3,2047
 410b1ac:	18012d26 	beq	r3,zero,410b664 <__adddf3+0x77c>
 410b1b0:	1007883a 	mov	r3,r2
 410b1b4:	003fcd06 	br	410b0ec <__adddf3+0x204>
 410b1b8:	18fff844 	addi	r3,r3,-31
 410b1bc:	20800820 	cmpeqi	r2,r4,32
 410b1c0:	40c6d83a 	srl	r3,r8,r3
 410b1c4:	1000041e 	bne	r2,zero,410b1d8 <__adddf3+0x2f0>
 410b1c8:	00801004 	movi	r2,64
 410b1cc:	1109c83a 	sub	r4,r2,r4
 410b1d0:	4110983a 	sll	r8,r8,r4
 410b1d4:	8a22b03a 	or	r17,r17,r8
 410b1d8:	8822c03a 	cmpne	r17,r17,zero
 410b1dc:	88e2b03a 	or	r17,r17,r3
 410b1e0:	0011883a 	mov	r8,zero
 410b1e4:	0025883a 	mov	r18,zero
 410b1e8:	888001cc 	andi	r2,r17,7
 410b1ec:	103f8f1e 	bne	r2,zero,410b02c <__adddf3+0x144>
 410b1f0:	8822d0fa 	srli	r17,r17,3
 410b1f4:	4004977a 	slli	r2,r8,29
 410b1f8:	4014d0fa 	srli	r10,r8,3
 410b1fc:	9007883a 	mov	r3,r18
 410b200:	8884b03a 	or	r2,r17,r2
 410b204:	1901ffe0 	cmpeqi	r4,r3,2047
 410b208:	2000191e 	bne	r4,zero,410b270 <__adddf3+0x388>
 410b20c:	02000434 	movhi	r8,16
 410b210:	423fffc4 	addi	r8,r8,-1
 410b214:	5210703a 	and	r8,r10,r8
 410b218:	18c1ffcc 	andi	r3,r3,2047
 410b21c:	003f9806 	br	410b080 <__adddf3+0x198>
 410b220:	4b62b03a 	or	r17,r9,r13
 410b224:	8822c03a 	cmpne	r17,r17,zero
 410b228:	8ba3883a 	add	r17,r17,r14
 410b22c:	8b91803a 	cmpltu	r8,r17,r14
 410b230:	4291883a 	add	r8,r8,r10
 410b234:	4080202c 	andhi	r2,r8,128
 410b238:	103feb26 	beq	r2,zero,410b1e8 <__adddf3+0x300>
 410b23c:	94800044 	addi	r18,r18,1
 410b240:	9081ffe0 	cmpeqi	r2,r18,2047
 410b244:	10007426 	beq	r2,zero,410b418 <__adddf3+0x530>
 410b248:	00c1ffc4 	movi	r3,2047
 410b24c:	0011883a 	mov	r8,zero
 410b250:	0005883a 	mov	r2,zero
 410b254:	003f8a06 	br	410b080 <__adddf3+0x198>
 410b258:	500a977a 	slli	r5,r10,29
 410b25c:	00c80034 	movhi	r3,8192
 410b260:	18ffffc4 	addi	r3,r3,-1
 410b264:	5014d0fa 	srli	r10,r10,3
 410b268:	20c4703a 	and	r2,r4,r3
 410b26c:	1144b03a 	or	r2,r2,r5
 410b270:	1286b03a 	or	r3,r2,r10
 410b274:	18015426 	beq	r3,zero,410b7c8 <__adddf3+0x8e0>
 410b278:	00c00434 	movhi	r3,16
 410b27c:	18ffffc4 	addi	r3,r3,-1
 410b280:	52000234 	orhi	r8,r10,8
 410b284:	40d0703a 	and	r8,r8,r3
 410b288:	00c1ffc4 	movi	r3,2047
 410b28c:	003f7c06 	br	410b080 <__adddf3+0x198>
 410b290:	8809883a 	mov	r4,r17
 410b294:	410d5d40 	call	410d5d4 <__clzsi2>
 410b298:	10c00604 	addi	r3,r2,24
 410b29c:	19000808 	cmpgei	r4,r3,32
 410b2a0:	203f4b26 	beq	r4,zero,410afd0 <__adddf3+0xe8>
 410b2a4:	123ffe04 	addi	r8,r2,-8
 410b2a8:	8a10983a 	sll	r8,r17,r8
 410b2ac:	0023883a 	mov	r17,zero
 410b2b0:	1cbf4e0e 	bge	r3,r18,410afec <__adddf3+0x104>
 410b2b4:	00bfe034 	movhi	r2,65408
 410b2b8:	10bfffc4 	addi	r2,r2,-1
 410b2bc:	90e5c83a 	sub	r18,r18,r3
 410b2c0:	4090703a 	and	r8,r8,r2
 410b2c4:	003f5706 	br	410b024 <__adddf3+0x13c>
 410b2c8:	18002226 	beq	r3,zero,410b354 <__adddf3+0x46c>
 410b2cc:	1487c83a 	sub	r3,r2,r18
 410b2d0:	90006e26 	beq	r18,zero,410b48c <__adddf3+0x5a4>
 410b2d4:	1101ffd8 	cmpnei	r4,r2,2047
 410b2d8:	2000e926 	beq	r4,zero,410b680 <__adddf3+0x798>
 410b2dc:	52802034 	orhi	r10,r10,128
 410b2e0:	19000e48 	cmpgei	r4,r3,57
 410b2e4:	2000b91e 	bne	r4,zero,410b5cc <__adddf3+0x6e4>
 410b2e8:	19000808 	cmpgei	r4,r3,32
 410b2ec:	2001101e 	bne	r4,zero,410b730 <__adddf3+0x848>
 410b2f0:	01000804 	movi	r4,32
 410b2f4:	20c9c83a 	sub	r4,r4,r3
 410b2f8:	5122983a 	sll	r17,r10,r4
 410b2fc:	70cad83a 	srl	r5,r14,r3
 410b300:	7108983a 	sll	r4,r14,r4
 410b304:	50d4d83a 	srl	r10,r10,r3
 410b308:	8962b03a 	or	r17,r17,r5
 410b30c:	2008c03a 	cmpne	r4,r4,zero
 410b310:	8922b03a 	or	r17,r17,r4
 410b314:	4a93883a 	add	r9,r9,r10
 410b318:	8b63883a 	add	r17,r17,r13
 410b31c:	8b51803a 	cmpltu	r8,r17,r13
 410b320:	4251883a 	add	r8,r8,r9
 410b324:	1025883a 	mov	r18,r2
 410b328:	003fc206 	br	410b234 <__adddf3+0x34c>
 410b32c:	4b62b03a 	or	r17,r9,r13
 410b330:	8822c03a 	cmpne	r17,r17,zero
 410b334:	003f1a06 	br	410afa0 <__adddf3+0xb8>
 410b338:	500c977a 	slli	r6,r10,29
 410b33c:	01480034 	movhi	r5,8192
 410b340:	297fffc4 	addi	r5,r5,-1
 410b344:	2144703a 	and	r2,r4,r5
 410b348:	5014d0fa 	srli	r10,r10,3
 410b34c:	1184b03a 	or	r2,r2,r6
 410b350:	003fac06 	br	410b204 <__adddf3+0x31c>
 410b354:	90800044 	addi	r2,r18,1
 410b358:	1141ff8c 	andi	r5,r2,2046
 410b35c:	28005e1e 	bne	r5,zero,410b4d8 <__adddf3+0x5f0>
 410b360:	5384b03a 	or	r2,r10,r14
 410b364:	9000a71e 	bne	r18,zero,410b604 <__adddf3+0x71c>
 410b368:	1000e526 	beq	r2,zero,410b700 <__adddf3+0x818>
 410b36c:	4b44b03a 	or	r2,r9,r13
 410b370:	10008f26 	beq	r2,zero,410b5b0 <__adddf3+0x6c8>
 410b374:	7363883a 	add	r17,r14,r13
 410b378:	5255883a 	add	r10,r10,r9
 410b37c:	8b91803a 	cmpltu	r8,r17,r14
 410b380:	5211883a 	add	r8,r10,r8
 410b384:	4080202c 	andhi	r2,r8,128
 410b388:	103f9726 	beq	r2,zero,410b1e8 <__adddf3+0x300>
 410b38c:	00bfe034 	movhi	r2,65408
 410b390:	10bfffc4 	addi	r2,r2,-1
 410b394:	4090703a 	and	r8,r8,r2
 410b398:	04800044 	movi	r18,1
 410b39c:	003f9206 	br	410b1e8 <__adddf3+0x300>
 410b3a0:	1101ffd8 	cmpnei	r4,r2,2047
 410b3a4:	20007a26 	beq	r4,zero,410b590 <__adddf3+0x6a8>
 410b3a8:	52802034 	orhi	r10,r10,128
 410b3ac:	19000e48 	cmpgei	r4,r3,57
 410b3b0:	20002e1e 	bne	r4,zero,410b46c <__adddf3+0x584>
 410b3b4:	19000808 	cmpgei	r4,r3,32
 410b3b8:	2000871e 	bne	r4,zero,410b5d8 <__adddf3+0x6f0>
 410b3bc:	01000804 	movi	r4,32
 410b3c0:	20c9c83a 	sub	r4,r4,r3
 410b3c4:	5122983a 	sll	r17,r10,r4
 410b3c8:	70cad83a 	srl	r5,r14,r3
 410b3cc:	711c983a 	sll	r14,r14,r4
 410b3d0:	50d4d83a 	srl	r10,r10,r3
 410b3d4:	8962b03a 	or	r17,r17,r5
 410b3d8:	701cc03a 	cmpne	r14,r14,zero
 410b3dc:	8ba2b03a 	or	r17,r17,r14
 410b3e0:	4a93c83a 	sub	r9,r9,r10
 410b3e4:	00002306 	br	410b474 <__adddf3+0x58c>
 410b3e8:	7363c83a 	sub	r17,r14,r13
 410b3ec:	5267c83a 	sub	r19,r10,r9
 410b3f0:	7451803a 	cmpltu	r8,r14,r17
 410b3f4:	9a27c83a 	sub	r19,r19,r8
 410b3f8:	9880202c 	andhi	r2,r19,128
 410b3fc:	1000421e 	bne	r2,zero,410b508 <__adddf3+0x620>
 410b400:	8cc4b03a 	or	r2,r17,r19
 410b404:	103eee1e 	bne	r2,zero,410afc0 <__adddf3+0xd8>
 410b408:	0015883a 	mov	r10,zero
 410b40c:	0021883a 	mov	r16,zero
 410b410:	003f7e06 	br	410b20c <__adddf3+0x324>
 410b414:	04800084 	movi	r18,2
 410b418:	00bfe034 	movhi	r2,65408
 410b41c:	10bfffc4 	addi	r2,r2,-1
 410b420:	8806d07a 	srli	r3,r17,1
 410b424:	4090703a 	and	r8,r8,r2
 410b428:	400497fa 	slli	r2,r8,31
 410b42c:	8c40004c 	andi	r17,r17,1
 410b430:	1c62b03a 	or	r17,r3,r17
 410b434:	4010d07a 	srli	r8,r8,1
 410b438:	1462b03a 	or	r17,r2,r17
 410b43c:	003ef906 	br	410b024 <__adddf3+0x13c>
 410b440:	1c7ff804 	addi	r17,r3,-32
 410b444:	19000820 	cmpeqi	r4,r3,32
 410b448:	4c44d83a 	srl	r2,r9,r17
 410b44c:	2000041e 	bne	r4,zero,410b460 <__adddf3+0x578>
 410b450:	01001004 	movi	r4,64
 410b454:	20c7c83a 	sub	r3,r4,r3
 410b458:	48d2983a 	sll	r9,r9,r3
 410b45c:	6a5ab03a 	or	r13,r13,r9
 410b460:	6822c03a 	cmpne	r17,r13,zero
 410b464:	88a2b03a 	or	r17,r17,r2
 410b468:	003ecd06 	br	410afa0 <__adddf3+0xb8>
 410b46c:	5394b03a 	or	r10,r10,r14
 410b470:	5022c03a 	cmpne	r17,r10,zero
 410b474:	6c63c83a 	sub	r17,r13,r17
 410b478:	6c51803a 	cmpltu	r8,r13,r17
 410b47c:	4a11c83a 	sub	r8,r9,r8
 410b480:	3821883a 	mov	r16,r7
 410b484:	1025883a 	mov	r18,r2
 410b488:	003ec806 	br	410afac <__adddf3+0xc4>
 410b48c:	5388b03a 	or	r4,r10,r14
 410b490:	20008226 	beq	r4,zero,410b69c <__adddf3+0x7b4>
 410b494:	193fffc4 	addi	r4,r3,-1
 410b498:	2000b026 	beq	r4,zero,410b75c <__adddf3+0x874>
 410b49c:	18c1ffd8 	cmpnei	r3,r3,2047
 410b4a0:	18007726 	beq	r3,zero,410b680 <__adddf3+0x798>
 410b4a4:	2007883a 	mov	r3,r4
 410b4a8:	003f8d06 	br	410b2e0 <__adddf3+0x3f8>
 410b4ac:	00800804 	movi	r2,32
 410b4b0:	10c5c83a 	sub	r2,r2,r3
 410b4b4:	68c8d83a 	srl	r4,r13,r3
 410b4b8:	48a2983a 	sll	r17,r9,r2
 410b4bc:	689a983a 	sll	r13,r13,r2
 410b4c0:	48c6d83a 	srl	r3,r9,r3
 410b4c4:	8922b03a 	or	r17,r17,r4
 410b4c8:	681ac03a 	cmpne	r13,r13,zero
 410b4cc:	8b62b03a 	or	r17,r17,r13
 410b4d0:	50d5883a 	add	r10,r10,r3
 410b4d4:	003f5406 	br	410b228 <__adddf3+0x340>
 410b4d8:	10c1ffe0 	cmpeqi	r3,r2,2047
 410b4dc:	183f5a1e 	bne	r3,zero,410b248 <__adddf3+0x360>
 410b4e0:	7351883a 	add	r8,r14,r13
 410b4e4:	4387803a 	cmpltu	r3,r8,r14
 410b4e8:	5255883a 	add	r10,r10,r9
 410b4ec:	50c7883a 	add	r3,r10,r3
 410b4f0:	401ad07a 	srli	r13,r8,1
 410b4f4:	182297fa 	slli	r17,r3,31
 410b4f8:	1810d07a 	srli	r8,r3,1
 410b4fc:	1025883a 	mov	r18,r2
 410b500:	8b62b03a 	or	r17,r17,r13
 410b504:	003f3806 	br	410b1e8 <__adddf3+0x300>
 410b508:	6ba3c83a 	sub	r17,r13,r14
 410b50c:	4a93c83a 	sub	r9,r9,r10
 410b510:	6c51803a 	cmpltu	r8,r13,r17
 410b514:	4a27c83a 	sub	r19,r9,r8
 410b518:	3821883a 	mov	r16,r7
 410b51c:	003ea806 	br	410afc0 <__adddf3+0xd8>
 410b520:	480a977a 	slli	r5,r9,29
 410b524:	01080034 	movhi	r4,8192
 410b528:	213fffc4 	addi	r4,r4,-1
 410b52c:	3104703a 	and	r2,r6,r4
 410b530:	4814d0fa 	srli	r10,r9,3
 410b534:	1144b03a 	or	r2,r2,r5
 410b538:	3821883a 	mov	r16,r7
 410b53c:	003f3106 	br	410b204 <__adddf3+0x31c>
 410b540:	28005d1e 	bne	r5,zero,410b6b8 <__adddf3+0x7d0>
 410b544:	1000121e 	bne	r2,zero,410b590 <__adddf3+0x6a8>
 410b548:	0021883a 	mov	r16,zero
 410b54c:	4015883a 	mov	r10,r8
 410b550:	00bfffc4 	movi	r2,-1
 410b554:	003f4806 	br	410b278 <__adddf3+0x390>
 410b558:	7363883a 	add	r17,r14,r13
 410b55c:	5255883a 	add	r10,r10,r9
 410b560:	8b91803a 	cmpltu	r8,r17,r14
 410b564:	5211883a 	add	r8,r10,r8
 410b568:	4080202c 	andhi	r2,r8,128
 410b56c:	103fa91e 	bne	r2,zero,410b414 <__adddf3+0x52c>
 410b570:	04800044 	movi	r18,1
 410b574:	003f1c06 	br	410b1e8 <__adddf3+0x300>
 410b578:	7363c83a 	sub	r17,r14,r13
 410b57c:	5255c83a 	sub	r10,r10,r9
 410b580:	7451803a 	cmpltu	r8,r14,r17
 410b584:	5211c83a 	sub	r8,r10,r8
 410b588:	04800044 	movi	r18,1
 410b58c:	003e8706 	br	410afac <__adddf3+0xc4>
 410b590:	4806977a 	slli	r3,r9,29
 410b594:	00880034 	movhi	r2,8192
 410b598:	10bfffc4 	addi	r2,r2,-1
 410b59c:	3084703a 	and	r2,r6,r2
 410b5a0:	4814d0fa 	srli	r10,r9,3
 410b5a4:	10c4b03a 	or	r2,r2,r3
 410b5a8:	3821883a 	mov	r16,r7
 410b5ac:	003f3006 	br	410b270 <__adddf3+0x388>
 410b5b0:	500a977a 	slli	r5,r10,29
 410b5b4:	00880034 	movhi	r2,8192
 410b5b8:	10bfffc4 	addi	r2,r2,-1
 410b5bc:	2084703a 	and	r2,r4,r2
 410b5c0:	5014d0fa 	srli	r10,r10,3
 410b5c4:	1144b03a 	or	r2,r2,r5
 410b5c8:	003f1006 	br	410b20c <__adddf3+0x324>
 410b5cc:	5394b03a 	or	r10,r10,r14
 410b5d0:	5022c03a 	cmpne	r17,r10,zero
 410b5d4:	003f5006 	br	410b318 <__adddf3+0x430>
 410b5d8:	1c7ff804 	addi	r17,r3,-32
 410b5dc:	19400820 	cmpeqi	r5,r3,32
 410b5e0:	5448d83a 	srl	r4,r10,r17
 410b5e4:	2800041e 	bne	r5,zero,410b5f8 <__adddf3+0x710>
 410b5e8:	01401004 	movi	r5,64
 410b5ec:	28c7c83a 	sub	r3,r5,r3
 410b5f0:	50d4983a 	sll	r10,r10,r3
 410b5f4:	729cb03a 	or	r14,r14,r10
 410b5f8:	7022c03a 	cmpne	r17,r14,zero
 410b5fc:	8922b03a 	or	r17,r17,r4
 410b600:	003f9c06 	br	410b474 <__adddf3+0x58c>
 410b604:	10005a1e 	bne	r2,zero,410b770 <__adddf3+0x888>
 410b608:	4804977a 	slli	r2,r9,29
 410b60c:	00c80034 	movhi	r3,8192
 410b610:	18ffffc4 	addi	r3,r3,-1
 410b614:	30cc703a 	and	r6,r6,r3
 410b618:	4814d0fa 	srli	r10,r9,3
 410b61c:	1184b03a 	or	r2,r2,r6
 410b620:	003f1306 	br	410b270 <__adddf3+0x388>
 410b624:	6ba3c83a 	sub	r17,r13,r14
 410b628:	4a95c83a 	sub	r10,r9,r10
 410b62c:	6c51803a 	cmpltu	r8,r13,r17
 410b630:	5211c83a 	sub	r8,r10,r8
 410b634:	3821883a 	mov	r16,r7
 410b638:	04800044 	movi	r18,1
 410b63c:	003e5b06 	br	410afac <__adddf3+0xc4>
 410b640:	103f7126 	beq	r2,zero,410b408 <__adddf3+0x520>
 410b644:	4808977a 	slli	r4,r9,29
 410b648:	00880034 	movhi	r2,8192
 410b64c:	10bfffc4 	addi	r2,r2,-1
 410b650:	3084703a 	and	r2,r6,r2
 410b654:	4814d0fa 	srli	r10,r9,3
 410b658:	1104b03a 	or	r2,r2,r4
 410b65c:	3821883a 	mov	r16,r7
 410b660:	003eea06 	br	410b20c <__adddf3+0x324>
 410b664:	5006977a 	slli	r3,r10,29
 410b668:	00880034 	movhi	r2,8192
 410b66c:	10bfffc4 	addi	r2,r2,-1
 410b670:	2084703a 	and	r2,r4,r2
 410b674:	5014d0fa 	srli	r10,r10,3
 410b678:	10c4b03a 	or	r2,r2,r3
 410b67c:	003efc06 	br	410b270 <__adddf3+0x388>
 410b680:	4806977a 	slli	r3,r9,29
 410b684:	00880034 	movhi	r2,8192
 410b688:	10bfffc4 	addi	r2,r2,-1
 410b68c:	3084703a 	and	r2,r6,r2
 410b690:	4814d0fa 	srli	r10,r9,3
 410b694:	10c4b03a 	or	r2,r2,r3
 410b698:	003ef506 	br	410b270 <__adddf3+0x388>
 410b69c:	4808977a 	slli	r4,r9,29
 410b6a0:	00880034 	movhi	r2,8192
 410b6a4:	10bfffc4 	addi	r2,r2,-1
 410b6a8:	3084703a 	and	r2,r6,r2
 410b6ac:	4814d0fa 	srli	r10,r9,3
 410b6b0:	1104b03a 	or	r2,r2,r4
 410b6b4:	003ed306 	br	410b204 <__adddf3+0x31c>
 410b6b8:	500a977a 	slli	r5,r10,29
 410b6bc:	5014d0fa 	srli	r10,r10,3
 410b6c0:	10001626 	beq	r2,zero,410b71c <__adddf3+0x834>
 410b6c4:	00c80034 	movhi	r3,8192
 410b6c8:	18ffffc4 	addi	r3,r3,-1
 410b6cc:	20c4703a 	and	r2,r4,r3
 410b6d0:	5100022c 	andhi	r4,r10,8
 410b6d4:	1144b03a 	or	r2,r2,r5
 410b6d8:	203ee526 	beq	r4,zero,410b270 <__adddf3+0x388>
 410b6dc:	4808d0fa 	srli	r4,r9,3
 410b6e0:	2140022c 	andhi	r5,r4,8
 410b6e4:	283ee21e 	bne	r5,zero,410b270 <__adddf3+0x388>
 410b6e8:	4812977a 	slli	r9,r9,29
 410b6ec:	30c4703a 	and	r2,r6,r3
 410b6f0:	3821883a 	mov	r16,r7
 410b6f4:	1244b03a 	or	r2,r2,r9
 410b6f8:	2015883a 	mov	r10,r4
 410b6fc:	003edc06 	br	410b270 <__adddf3+0x388>
 410b700:	4804977a 	slli	r2,r9,29
 410b704:	01080034 	movhi	r4,8192
 410b708:	213fffc4 	addi	r4,r4,-1
 410b70c:	310c703a 	and	r6,r6,r4
 410b710:	4814d0fa 	srli	r10,r9,3
 410b714:	1184b03a 	or	r2,r2,r6
 410b718:	003ebc06 	br	410b20c <__adddf3+0x324>
 410b71c:	00880034 	movhi	r2,8192
 410b720:	10bfffc4 	addi	r2,r2,-1
 410b724:	2084703a 	and	r2,r4,r2
 410b728:	1144b03a 	or	r2,r2,r5
 410b72c:	003ed006 	br	410b270 <__adddf3+0x388>
 410b730:	193ff804 	addi	r4,r3,-32
 410b734:	19400820 	cmpeqi	r5,r3,32
 410b738:	5108d83a 	srl	r4,r10,r4
 410b73c:	2800041e 	bne	r5,zero,410b750 <__adddf3+0x868>
 410b740:	01401004 	movi	r5,64
 410b744:	28c7c83a 	sub	r3,r5,r3
 410b748:	50d4983a 	sll	r10,r10,r3
 410b74c:	729cb03a 	or	r14,r14,r10
 410b750:	7022c03a 	cmpne	r17,r14,zero
 410b754:	8922b03a 	or	r17,r17,r4
 410b758:	003eef06 	br	410b318 <__adddf3+0x430>
 410b75c:	7363883a 	add	r17,r14,r13
 410b760:	5255883a 	add	r10,r10,r9
 410b764:	8b51803a 	cmpltu	r8,r17,r13
 410b768:	5211883a 	add	r8,r10,r8
 410b76c:	003f7e06 	br	410b568 <__adddf3+0x680>
 410b770:	4b50b03a 	or	r8,r9,r13
 410b774:	500a977a 	slli	r5,r10,29
 410b778:	5014d0fa 	srli	r10,r10,3
 410b77c:	403fe726 	beq	r8,zero,410b71c <__adddf3+0x834>
 410b780:	00c80034 	movhi	r3,8192
 410b784:	18ffffc4 	addi	r3,r3,-1
 410b788:	20c4703a 	and	r2,r4,r3
 410b78c:	5100022c 	andhi	r4,r10,8
 410b790:	1144b03a 	or	r2,r2,r5
 410b794:	203eb626 	beq	r4,zero,410b270 <__adddf3+0x388>
 410b798:	4808d0fa 	srli	r4,r9,3
 410b79c:	2140022c 	andhi	r5,r4,8
 410b7a0:	283eb31e 	bne	r5,zero,410b270 <__adddf3+0x388>
 410b7a4:	4804977a 	slli	r2,r9,29
 410b7a8:	30cc703a 	and	r6,r6,r3
 410b7ac:	3821883a 	mov	r16,r7
 410b7b0:	3084b03a 	or	r2,r6,r2
 410b7b4:	2015883a 	mov	r10,r4
 410b7b8:	003ead06 	br	410b270 <__adddf3+0x388>
 410b7bc:	8a04b03a 	or	r2,r17,r8
 410b7c0:	103f1126 	beq	r2,zero,410b408 <__adddf3+0x520>
 410b7c4:	003e8806 	br	410b1e8 <__adddf3+0x300>
 410b7c8:	0005883a 	mov	r2,zero
 410b7cc:	00c1ffc4 	movi	r3,2047
 410b7d0:	0011883a 	mov	r8,zero
 410b7d4:	003e2a06 	br	410b080 <__adddf3+0x198>

0410b7d8 <__divdf3>:
 410b7d8:	2810d53a 	srli	r8,r5,20
 410b7dc:	defff004 	addi	sp,sp,-64
 410b7e0:	dc000615 	stw	r16,24(sp)
 410b7e4:	04000434 	movhi	r16,16
 410b7e8:	df000e15 	stw	fp,56(sp)
 410b7ec:	ddc00d15 	stw	r23,52(sp)
 410b7f0:	dd800c15 	stw	r22,48(sp)
 410b7f4:	dd000a15 	stw	r20,40(sp)
 410b7f8:	843fffc4 	addi	r16,r16,-1
 410b7fc:	dfc00f15 	stw	ra,60(sp)
 410b800:	dd400b15 	stw	r21,44(sp)
 410b804:	dcc00915 	stw	r19,36(sp)
 410b808:	dc800815 	stw	r18,32(sp)
 410b80c:	dc400715 	stw	r17,28(sp)
 410b810:	4201ffcc 	andi	r8,r8,2047
 410b814:	282ed7fa 	srli	r23,r5,31
 410b818:	3039883a 	mov	fp,r6
 410b81c:	382d883a 	mov	r22,r7
 410b820:	2029883a 	mov	r20,r4
 410b824:	2c20703a 	and	r16,r5,r16
 410b828:	40006826 	beq	r8,zero,410b9cc <__divdf3+0x1f4>
 410b82c:	4081ffe0 	cmpeqi	r2,r8,2047
 410b830:	1000791e 	bne	r2,zero,410ba18 <__divdf3+0x240>
 410b834:	2026d77a 	srli	r19,r4,29
 410b838:	800a90fa 	slli	r5,r16,3
 410b83c:	202890fa 	slli	r20,r4,3
 410b840:	44bf0044 	addi	r18,r8,-1023
 410b844:	994ab03a 	or	r5,r19,r5
 410b848:	2cc02034 	orhi	r19,r5,128
 410b84c:	0021883a 	mov	r16,zero
 410b850:	0023883a 	mov	r17,zero
 410b854:	b010d53a 	srli	r8,r22,20
 410b858:	00c00434 	movhi	r3,16
 410b85c:	18ffffc4 	addi	r3,r3,-1
 410b860:	4201ffcc 	andi	r8,r8,2047
 410b864:	b02ad7fa 	srli	r21,r22,31
 410b868:	b0ec703a 	and	r22,r22,r3
 410b86c:	40004626 	beq	r8,zero,410b988 <__divdf3+0x1b0>
 410b870:	4081ffe0 	cmpeqi	r2,r8,2047
 410b874:	10006f1e 	bne	r2,zero,410ba34 <__divdf3+0x25c>
 410b878:	b00690fa 	slli	r3,r22,3
 410b87c:	e004d77a 	srli	r2,fp,29
 410b880:	e01290fa 	slli	r9,fp,3
 410b884:	423f0044 	addi	r8,r8,-1023
 410b888:	10c6b03a 	or	r3,r2,r3
 410b88c:	1d802034 	orhi	r22,r3,128
 410b890:	9225c83a 	sub	r18,r18,r8
 410b894:	0007883a 	mov	r3,zero
 410b898:	80800428 	cmpgeui	r2,r16,16
 410b89c:	bd4ef03a 	xor	r7,r23,r21
 410b8a0:	1000a71e 	bne	r2,zero,410bb40 <__divdf3+0x368>
 410b8a4:	800c90ba 	slli	r6,r16,2
 410b8a8:	00810474 	movhi	r2,1041
 410b8ac:	3085883a 	add	r2,r6,r2
 410b8b0:	10ae2e17 	ldw	r2,-18248(r2)
 410b8b4:	1000683a 	jmp	r2
 410b8b8:	0410bb40 	call	410bb4 <__alt_mem_sdram_controller_0-0x3bef44c>
 410b8bc:	0410b964 	muli	r16,zero,17125
 410b8c0:	0410b914 	movui	r16,17124
 410b8c4:	0410b974 	movhi	r16,17125
 410b8c8:	0410b914 	movui	r16,17124
 410b8cc:	0410bae4 	muli	r16,zero,17131
 410b8d0:	0410b914 	movui	r16,17124
 410b8d4:	0410b974 	movhi	r16,17125
 410b8d8:	0410b964 	muli	r16,zero,17125
 410b8dc:	0410b964 	muli	r16,zero,17125
 410b8e0:	0410bae4 	muli	r16,zero,17131
 410b8e4:	0410b974 	movhi	r16,17125
 410b8e8:	0410b8f8 	rdprs	r16,zero,17123
 410b8ec:	0410b8f8 	rdprs	r16,zero,17123
 410b8f0:	0410b8f8 	rdprs	r16,zero,17123
 410b8f4:	0410bafc 	xorhi	r16,zero,17131
 410b8f8:	b80f883a 	mov	r7,r23
 410b8fc:	888000a0 	cmpeqi	r2,r17,2
 410b900:	1000181e 	bne	r2,zero,410b964 <__divdf3+0x18c>
 410b904:	888000e0 	cmpeqi	r2,r17,3
 410b908:	1001f61e 	bne	r2,zero,410c0e4 <__divdf3+0x90c>
 410b90c:	88800060 	cmpeqi	r2,r17,1
 410b910:	10006126 	beq	r2,zero,410ba98 <__divdf3+0x2c0>
 410b914:	0007883a 	mov	r3,zero
 410b918:	000b883a 	mov	r5,zero
 410b91c:	0029883a 	mov	r20,zero
 410b920:	1806953a 	slli	r3,r3,20
 410b924:	380e97fa 	slli	r7,r7,31
 410b928:	a005883a 	mov	r2,r20
 410b92c:	1946b03a 	or	r3,r3,r5
 410b930:	19c6b03a 	or	r3,r3,r7
 410b934:	dfc00f17 	ldw	ra,60(sp)
 410b938:	df000e17 	ldw	fp,56(sp)
 410b93c:	ddc00d17 	ldw	r23,52(sp)
 410b940:	dd800c17 	ldw	r22,48(sp)
 410b944:	dd400b17 	ldw	r21,44(sp)
 410b948:	dd000a17 	ldw	r20,40(sp)
 410b94c:	dcc00917 	ldw	r19,36(sp)
 410b950:	dc800817 	ldw	r18,32(sp)
 410b954:	dc400717 	ldw	r17,28(sp)
 410b958:	dc000617 	ldw	r16,24(sp)
 410b95c:	dec01004 	addi	sp,sp,64
 410b960:	f800283a 	ret
 410b964:	00c1ffc4 	movi	r3,2047
 410b968:	000b883a 	mov	r5,zero
 410b96c:	0029883a 	mov	r20,zero
 410b970:	003feb06 	br	410b920 <__divdf3+0x148>
 410b974:	a80f883a 	mov	r7,r21
 410b978:	b027883a 	mov	r19,r22
 410b97c:	4829883a 	mov	r20,r9
 410b980:	1823883a 	mov	r17,r3
 410b984:	003fdd06 	br	410b8fc <__divdf3+0x124>
 410b988:	b712b03a 	or	r9,r22,fp
 410b98c:	48003e26 	beq	r9,zero,410ba88 <__divdf3+0x2b0>
 410b990:	b0017726 	beq	r22,zero,410bf70 <__divdf3+0x798>
 410b994:	b009883a 	mov	r4,r22
 410b998:	410d5d40 	call	410d5d4 <__clzsi2>
 410b99c:	117ffd44 	addi	r5,r2,-11
 410b9a0:	01000744 	movi	r4,29
 410b9a4:	127ffe04 	addi	r9,r2,-8
 410b9a8:	2149c83a 	sub	r4,r4,r5
 410b9ac:	b246983a 	sll	r3,r22,r9
 410b9b0:	e108d83a 	srl	r4,fp,r4
 410b9b4:	e252983a 	sll	r9,fp,r9
 410b9b8:	20ecb03a 	or	r22,r4,r3
 410b9bc:	1491883a 	add	r8,r2,r18
 410b9c0:	4480fcc4 	addi	r18,r8,1011
 410b9c4:	0007883a 	mov	r3,zero
 410b9c8:	003fb306 	br	410b898 <__divdf3+0xc0>
 410b9cc:	8126b03a 	or	r19,r16,r4
 410b9d0:	2023883a 	mov	r17,r4
 410b9d4:	98002726 	beq	r19,zero,410ba74 <__divdf3+0x29c>
 410b9d8:	80017026 	beq	r16,zero,410bf9c <__divdf3+0x7c4>
 410b9dc:	8009883a 	mov	r4,r16
 410b9e0:	410d5d40 	call	410d5d4 <__clzsi2>
 410b9e4:	113ffd44 	addi	r4,r2,-11
 410b9e8:	00c00744 	movi	r3,29
 410b9ec:	14fffe04 	addi	r19,r2,-8
 410b9f0:	1907c83a 	sub	r3,r3,r4
 410b9f4:	84ca983a 	sll	r5,r16,r19
 410b9f8:	88c6d83a 	srl	r3,r17,r3
 410b9fc:	8ce8983a 	sll	r20,r17,r19
 410ba00:	1966b03a 	or	r19,r3,r5
 410ba04:	023f0344 	movi	r8,-1011
 410ba08:	40a5c83a 	sub	r18,r8,r2
 410ba0c:	0021883a 	mov	r16,zero
 410ba10:	0023883a 	mov	r17,zero
 410ba14:	003f8f06 	br	410b854 <__divdf3+0x7c>
 410ba18:	8126b03a 	or	r19,r16,r4
 410ba1c:	9800101e 	bne	r19,zero,410ba60 <__divdf3+0x288>
 410ba20:	0029883a 	mov	r20,zero
 410ba24:	04000204 	movi	r16,8
 410ba28:	0481ffc4 	movi	r18,2047
 410ba2c:	04400084 	movi	r17,2
 410ba30:	003f8806 	br	410b854 <__divdf3+0x7c>
 410ba34:	b712b03a 	or	r9,r22,fp
 410ba38:	94be0044 	addi	r18,r18,-2047
 410ba3c:	4800041e 	bne	r9,zero,410ba50 <__divdf3+0x278>
 410ba40:	84000094 	ori	r16,r16,2
 410ba44:	002d883a 	mov	r22,zero
 410ba48:	00c00084 	movi	r3,2
 410ba4c:	003f9206 	br	410b898 <__divdf3+0xc0>
 410ba50:	840000d4 	ori	r16,r16,3
 410ba54:	e013883a 	mov	r9,fp
 410ba58:	00c000c4 	movi	r3,3
 410ba5c:	003f8e06 	br	410b898 <__divdf3+0xc0>
 410ba60:	8027883a 	mov	r19,r16
 410ba64:	0481ffc4 	movi	r18,2047
 410ba68:	04000304 	movi	r16,12
 410ba6c:	044000c4 	movi	r17,3
 410ba70:	003f7806 	br	410b854 <__divdf3+0x7c>
 410ba74:	0029883a 	mov	r20,zero
 410ba78:	04000104 	movi	r16,4
 410ba7c:	0025883a 	mov	r18,zero
 410ba80:	04400044 	movi	r17,1
 410ba84:	003f7306 	br	410b854 <__divdf3+0x7c>
 410ba88:	84000054 	ori	r16,r16,1
 410ba8c:	002d883a 	mov	r22,zero
 410ba90:	00c00044 	movi	r3,1
 410ba94:	003f8006 	br	410b898 <__divdf3+0xc0>
 410ba98:	9440ffc4 	addi	r17,r18,1023
 410ba9c:	0441050e 	bge	zero,r17,410beb4 <__divdf3+0x6dc>
 410baa0:	a08001cc 	andi	r2,r20,7
 410baa4:	10016c1e 	bne	r2,zero,410c058 <__divdf3+0x880>
 410baa8:	a008d0fa 	srli	r4,r20,3
 410baac:	9880402c 	andhi	r2,r19,256
 410bab0:	10000426 	beq	r2,zero,410bac4 <__divdf3+0x2ec>
 410bab4:	00bfc034 	movhi	r2,65280
 410bab8:	10bfffc4 	addi	r2,r2,-1
 410babc:	98a6703a 	and	r19,r19,r2
 410bac0:	94410004 	addi	r17,r18,1024
 410bac4:	8881ffc8 	cmpgei	r2,r17,2047
 410bac8:	103fa61e 	bne	r2,zero,410b964 <__divdf3+0x18c>
 410bacc:	9828977a 	slli	r20,r19,29
 410bad0:	980a927a 	slli	r5,r19,9
 410bad4:	88c1ffcc 	andi	r3,r17,2047
 410bad8:	a128b03a 	or	r20,r20,r4
 410badc:	280ad33a 	srli	r5,r5,12
 410bae0:	003f8f06 	br	410b920 <__divdf3+0x148>
 410bae4:	01400434 	movhi	r5,16
 410bae8:	000f883a 	mov	r7,zero
 410baec:	297fffc4 	addi	r5,r5,-1
 410baf0:	053fffc4 	movi	r20,-1
 410baf4:	00c1ffc4 	movi	r3,2047
 410baf8:	003f8906 	br	410b920 <__divdf3+0x148>
 410bafc:	9880022c 	andhi	r2,r19,8
 410bb00:	10000926 	beq	r2,zero,410bb28 <__divdf3+0x350>
 410bb04:	b080022c 	andhi	r2,r22,8
 410bb08:	1000071e 	bne	r2,zero,410bb28 <__divdf3+0x350>
 410bb0c:	00800434 	movhi	r2,16
 410bb10:	b1400234 	orhi	r5,r22,8
 410bb14:	10bfffc4 	addi	r2,r2,-1
 410bb18:	288a703a 	and	r5,r5,r2
 410bb1c:	a80f883a 	mov	r7,r21
 410bb20:	4829883a 	mov	r20,r9
 410bb24:	003ff306 	br	410baf4 <__divdf3+0x31c>
 410bb28:	00800434 	movhi	r2,16
 410bb2c:	99400234 	orhi	r5,r19,8
 410bb30:	10bfffc4 	addi	r2,r2,-1
 410bb34:	288a703a 	and	r5,r5,r2
 410bb38:	b80f883a 	mov	r7,r23
 410bb3c:	003fed06 	br	410baf4 <__divdf3+0x31c>
 410bb40:	b4c10536 	bltu	r22,r19,410bf58 <__divdf3+0x780>
 410bb44:	b4c10326 	beq	r22,r19,410bf54 <__divdf3+0x77c>
 410bb48:	94bfffc4 	addi	r18,r18,-1
 410bb4c:	a039883a 	mov	fp,r20
 410bb50:	9821883a 	mov	r16,r19
 410bb54:	0023883a 	mov	r17,zero
 410bb58:	b006923a 	slli	r3,r22,8
 410bb5c:	482cd63a 	srli	r22,r9,24
 410bb60:	8009883a 	mov	r4,r16
 410bb64:	182ed43a 	srli	r23,r3,16
 410bb68:	b0ecb03a 	or	r22,r22,r3
 410bb6c:	d9c00015 	stw	r7,0(sp)
 410bb70:	b80b883a 	mov	r5,r23
 410bb74:	482a923a 	slli	r21,r9,8
 410bb78:	b53fffcc 	andi	r20,r22,65535
 410bb7c:	410046c0 	call	410046c <__udivsi3>
 410bb80:	100b883a 	mov	r5,r2
 410bb84:	a009883a 	mov	r4,r20
 410bb88:	1027883a 	mov	r19,r2
 410bb8c:	410aec00 	call	410aec0 <__mulsi3>
 410bb90:	8009883a 	mov	r4,r16
 410bb94:	b80b883a 	mov	r5,r23
 410bb98:	1021883a 	mov	r16,r2
 410bb9c:	41004d00 	call	41004d0 <__umodsi3>
 410bba0:	1004943a 	slli	r2,r2,16
 410bba4:	e008d43a 	srli	r4,fp,16
 410bba8:	d9c00017 	ldw	r7,0(sp)
 410bbac:	2088b03a 	or	r4,r4,r2
 410bbb0:	2400042e 	bgeu	r4,r16,410bbc4 <__divdf3+0x3ec>
 410bbb4:	2589883a 	add	r4,r4,r22
 410bbb8:	98bfffc4 	addi	r2,r19,-1
 410bbbc:	2581082e 	bgeu	r4,r22,410bfe0 <__divdf3+0x808>
 410bbc0:	1027883a 	mov	r19,r2
 410bbc4:	2421c83a 	sub	r16,r4,r16
 410bbc8:	b80b883a 	mov	r5,r23
 410bbcc:	8009883a 	mov	r4,r16
 410bbd0:	d9c00215 	stw	r7,8(sp)
 410bbd4:	410046c0 	call	410046c <__udivsi3>
 410bbd8:	100b883a 	mov	r5,r2
 410bbdc:	a009883a 	mov	r4,r20
 410bbe0:	d8800115 	stw	r2,4(sp)
 410bbe4:	410aec00 	call	410aec0 <__mulsi3>
 410bbe8:	b80b883a 	mov	r5,r23
 410bbec:	8009883a 	mov	r4,r16
 410bbf0:	d8800015 	stw	r2,0(sp)
 410bbf4:	41004d00 	call	41004d0 <__umodsi3>
 410bbf8:	100c943a 	slli	r6,r2,16
 410bbfc:	d8c00017 	ldw	r3,0(sp)
 410bc00:	e73fffcc 	andi	fp,fp,65535
 410bc04:	e18cb03a 	or	r6,fp,r6
 410bc08:	da000117 	ldw	r8,4(sp)
 410bc0c:	d9c00217 	ldw	r7,8(sp)
 410bc10:	30c0042e 	bgeu	r6,r3,410bc24 <__divdf3+0x44c>
 410bc14:	358d883a 	add	r6,r6,r22
 410bc18:	40bfffc4 	addi	r2,r8,-1
 410bc1c:	3580ec2e 	bgeu	r6,r22,410bfd0 <__divdf3+0x7f8>
 410bc20:	1011883a 	mov	r8,r2
 410bc24:	9826943a 	slli	r19,r19,16
 410bc28:	af3fffcc 	andi	fp,r21,65535
 410bc2c:	30c7c83a 	sub	r3,r6,r3
 410bc30:	9a26b03a 	or	r19,r19,r8
 410bc34:	9810d43a 	srli	r8,r19,16
 410bc38:	9abfffcc 	andi	r10,r19,65535
 410bc3c:	5009883a 	mov	r4,r10
 410bc40:	e00b883a 	mov	r5,fp
 410bc44:	d9c00515 	stw	r7,20(sp)
 410bc48:	d8c00315 	stw	r3,12(sp)
 410bc4c:	da800415 	stw	r10,16(sp)
 410bc50:	da000015 	stw	r8,0(sp)
 410bc54:	410aec00 	call	410aec0 <__mulsi3>
 410bc58:	da000017 	ldw	r8,0(sp)
 410bc5c:	e00b883a 	mov	r5,fp
 410bc60:	d8800215 	stw	r2,8(sp)
 410bc64:	4009883a 	mov	r4,r8
 410bc68:	410aec00 	call	410aec0 <__mulsi3>
 410bc6c:	da000017 	ldw	r8,0(sp)
 410bc70:	a820d43a 	srli	r16,r21,16
 410bc74:	d8800115 	stw	r2,4(sp)
 410bc78:	4009883a 	mov	r4,r8
 410bc7c:	800b883a 	mov	r5,r16
 410bc80:	410aec00 	call	410aec0 <__mulsi3>
 410bc84:	da800417 	ldw	r10,16(sp)
 410bc88:	8009883a 	mov	r4,r16
 410bc8c:	d8800015 	stw	r2,0(sp)
 410bc90:	500b883a 	mov	r5,r10
 410bc94:	410aec00 	call	410aec0 <__mulsi3>
 410bc98:	d9800217 	ldw	r6,8(sp)
 410bc9c:	da000117 	ldw	r8,4(sp)
 410bca0:	da400017 	ldw	r9,0(sp)
 410bca4:	3008d43a 	srli	r4,r6,16
 410bca8:	1205883a 	add	r2,r2,r8
 410bcac:	d8c00317 	ldw	r3,12(sp)
 410bcb0:	2089883a 	add	r4,r4,r2
 410bcb4:	d9c00517 	ldw	r7,20(sp)
 410bcb8:	2200022e 	bgeu	r4,r8,410bcc4 <__divdf3+0x4ec>
 410bcbc:	00800074 	movhi	r2,1
 410bcc0:	4893883a 	add	r9,r9,r2
 410bcc4:	200ad43a 	srli	r5,r4,16
 410bcc8:	2008943a 	slli	r4,r4,16
 410bccc:	31bfffcc 	andi	r6,r6,65535
 410bcd0:	2a4b883a 	add	r5,r5,r9
 410bcd4:	218d883a 	add	r6,r4,r6
 410bcd8:	19409436 	bltu	r3,r5,410bf2c <__divdf3+0x754>
 410bcdc:	19409226 	beq	r3,r5,410bf28 <__divdf3+0x750>
 410bce0:	898dc83a 	sub	r6,r17,r6
 410bce4:	89a3803a 	cmpltu	r17,r17,r6
 410bce8:	1947c83a 	sub	r3,r3,r5
 410bcec:	1c47c83a 	sub	r3,r3,r17
 410bcf0:	9440ffc4 	addi	r17,r18,1023
 410bcf4:	b0c0d326 	beq	r22,r3,410c044 <__divdf3+0x86c>
 410bcf8:	1809883a 	mov	r4,r3
 410bcfc:	b80b883a 	mov	r5,r23
 410bd00:	d9800315 	stw	r6,12(sp)
 410bd04:	d9c00215 	stw	r7,8(sp)
 410bd08:	d8c00015 	stw	r3,0(sp)
 410bd0c:	410046c0 	call	410046c <__udivsi3>
 410bd10:	100b883a 	mov	r5,r2
 410bd14:	a009883a 	mov	r4,r20
 410bd18:	d8800115 	stw	r2,4(sp)
 410bd1c:	410aec00 	call	410aec0 <__mulsi3>
 410bd20:	d8c00017 	ldw	r3,0(sp)
 410bd24:	b80b883a 	mov	r5,r23
 410bd28:	d8800015 	stw	r2,0(sp)
 410bd2c:	1809883a 	mov	r4,r3
 410bd30:	41004d00 	call	41004d0 <__umodsi3>
 410bd34:	d9800317 	ldw	r6,12(sp)
 410bd38:	1006943a 	slli	r3,r2,16
 410bd3c:	da400017 	ldw	r9,0(sp)
 410bd40:	3008d43a 	srli	r4,r6,16
 410bd44:	da000117 	ldw	r8,4(sp)
 410bd48:	d9c00217 	ldw	r7,8(sp)
 410bd4c:	20c6b03a 	or	r3,r4,r3
 410bd50:	1a40062e 	bgeu	r3,r9,410bd6c <__divdf3+0x594>
 410bd54:	1d87883a 	add	r3,r3,r22
 410bd58:	40bfffc4 	addi	r2,r8,-1
 410bd5c:	1d80c836 	bltu	r3,r22,410c080 <__divdf3+0x8a8>
 410bd60:	1a40c72e 	bgeu	r3,r9,410c080 <__divdf3+0x8a8>
 410bd64:	423fff84 	addi	r8,r8,-2
 410bd68:	1d87883a 	add	r3,r3,r22
 410bd6c:	1a47c83a 	sub	r3,r3,r9
 410bd70:	1809883a 	mov	r4,r3
 410bd74:	b80b883a 	mov	r5,r23
 410bd78:	d9800415 	stw	r6,16(sp)
 410bd7c:	d9c00315 	stw	r7,12(sp)
 410bd80:	da000215 	stw	r8,8(sp)
 410bd84:	d8c00115 	stw	r3,4(sp)
 410bd88:	410046c0 	call	410046c <__udivsi3>
 410bd8c:	100b883a 	mov	r5,r2
 410bd90:	a009883a 	mov	r4,r20
 410bd94:	d8800015 	stw	r2,0(sp)
 410bd98:	410aec00 	call	410aec0 <__mulsi3>
 410bd9c:	d8c00117 	ldw	r3,4(sp)
 410bda0:	b80b883a 	mov	r5,r23
 410bda4:	102f883a 	mov	r23,r2
 410bda8:	1809883a 	mov	r4,r3
 410bdac:	41004d00 	call	41004d0 <__umodsi3>
 410bdb0:	d9800417 	ldw	r6,16(sp)
 410bdb4:	1004943a 	slli	r2,r2,16
 410bdb8:	da400017 	ldw	r9,0(sp)
 410bdbc:	31bfffcc 	andi	r6,r6,65535
 410bdc0:	308cb03a 	or	r6,r6,r2
 410bdc4:	da000217 	ldw	r8,8(sp)
 410bdc8:	d9c00317 	ldw	r7,12(sp)
 410bdcc:	35c0062e 	bgeu	r6,r23,410bde8 <__divdf3+0x610>
 410bdd0:	358d883a 	add	r6,r6,r22
 410bdd4:	48bfffc4 	addi	r2,r9,-1
 410bdd8:	3580a736 	bltu	r6,r22,410c078 <__divdf3+0x8a0>
 410bddc:	35c0a62e 	bgeu	r6,r23,410c078 <__divdf3+0x8a0>
 410bde0:	4a7fff84 	addi	r9,r9,-2
 410bde4:	358d883a 	add	r6,r6,r22
 410bde8:	4028943a 	slli	r20,r8,16
 410bdec:	35d5c83a 	sub	r10,r6,r23
 410bdf0:	e009883a 	mov	r4,fp
 410bdf4:	a268b03a 	or	r20,r20,r9
 410bdf8:	a23fffcc 	andi	r8,r20,65535
 410bdfc:	a02ed43a 	srli	r23,r20,16
 410be00:	400b883a 	mov	r5,r8
 410be04:	d9c00315 	stw	r7,12(sp)
 410be08:	da800215 	stw	r10,8(sp)
 410be0c:	da000115 	stw	r8,4(sp)
 410be10:	410aec00 	call	410aec0 <__mulsi3>
 410be14:	e00b883a 	mov	r5,fp
 410be18:	b809883a 	mov	r4,r23
 410be1c:	1039883a 	mov	fp,r2
 410be20:	410aec00 	call	410aec0 <__mulsi3>
 410be24:	8009883a 	mov	r4,r16
 410be28:	b80b883a 	mov	r5,r23
 410be2c:	d8800015 	stw	r2,0(sp)
 410be30:	410aec00 	call	410aec0 <__mulsi3>
 410be34:	da000117 	ldw	r8,4(sp)
 410be38:	8009883a 	mov	r4,r16
 410be3c:	1021883a 	mov	r16,r2
 410be40:	400b883a 	mov	r5,r8
 410be44:	410aec00 	call	410aec0 <__mulsi3>
 410be48:	d9800017 	ldw	r6,0(sp)
 410be4c:	e006d43a 	srli	r3,fp,16
 410be50:	da800217 	ldw	r10,8(sp)
 410be54:	1185883a 	add	r2,r2,r6
 410be58:	1887883a 	add	r3,r3,r2
 410be5c:	d9c00317 	ldw	r7,12(sp)
 410be60:	1980022e 	bgeu	r3,r6,410be6c <__divdf3+0x694>
 410be64:	00800074 	movhi	r2,1
 410be68:	80a1883a 	add	r16,r16,r2
 410be6c:	1808d43a 	srli	r4,r3,16
 410be70:	1806943a 	slli	r3,r3,16
 410be74:	e73fffcc 	andi	fp,fp,65535
 410be78:	2409883a 	add	r4,r4,r16
 410be7c:	1f07883a 	add	r3,r3,fp
 410be80:	51000436 	bltu	r10,r4,410be94 <__divdf3+0x6bc>
 410be84:	51000226 	beq	r10,r4,410be90 <__divdf3+0x6b8>
 410be88:	a5000054 	ori	r20,r20,1
 410be8c:	003f0306 	br	410ba9c <__divdf3+0x2c4>
 410be90:	183f0226 	beq	r3,zero,410ba9c <__divdf3+0x2c4>
 410be94:	b28d883a 	add	r6,r22,r10
 410be98:	a0bfffc4 	addi	r2,r20,-1
 410be9c:	35806536 	bltu	r6,r22,410c034 <__divdf3+0x85c>
 410bea0:	31008036 	bltu	r6,r4,410c0a4 <__divdf3+0x8cc>
 410bea4:	31009426 	beq	r6,r4,410c0f8 <__divdf3+0x920>
 410bea8:	1029883a 	mov	r20,r2
 410beac:	003ff606 	br	410be88 <__divdf3+0x6b0>
 410beb0:	053fffc4 	movi	r20,-1
 410beb4:	01400044 	movi	r5,1
 410beb8:	2c4bc83a 	sub	r5,r5,r17
 410bebc:	28800e48 	cmpgei	r2,r5,57
 410bec0:	103e941e 	bne	r2,zero,410b914 <__divdf3+0x13c>
 410bec4:	28800808 	cmpgei	r2,r5,32
 410bec8:	1000491e 	bne	r2,zero,410bff0 <__divdf3+0x818>
 410becc:	92010784 	addi	r8,r18,1054
 410bed0:	9a04983a 	sll	r2,r19,r8
 410bed4:	a146d83a 	srl	r3,r20,r5
 410bed8:	a210983a 	sll	r8,r20,r8
 410bedc:	994ad83a 	srl	r5,r19,r5
 410bee0:	10e8b03a 	or	r20,r2,r3
 410bee4:	4010c03a 	cmpne	r8,r8,zero
 410bee8:	a228b03a 	or	r20,r20,r8
 410beec:	a08001cc 	andi	r2,r20,7
 410bef0:	10000726 	beq	r2,zero,410bf10 <__divdf3+0x738>
 410bef4:	a08003cc 	andi	r2,r20,15
 410bef8:	10800120 	cmpeqi	r2,r2,4
 410befc:	1000041e 	bne	r2,zero,410bf10 <__divdf3+0x738>
 410bf00:	a0800104 	addi	r2,r20,4
 410bf04:	1529803a 	cmpltu	r20,r2,r20
 410bf08:	2d0b883a 	add	r5,r5,r20
 410bf0c:	1029883a 	mov	r20,r2
 410bf10:	2880202c 	andhi	r2,r5,128
 410bf14:	10006f26 	beq	r2,zero,410c0d4 <__divdf3+0x8fc>
 410bf18:	00c00044 	movi	r3,1
 410bf1c:	000b883a 	mov	r5,zero
 410bf20:	0029883a 	mov	r20,zero
 410bf24:	003e7e06 	br	410b920 <__divdf3+0x148>
 410bf28:	89bf6d2e 	bgeu	r17,r6,410bce0 <__divdf3+0x508>
 410bf2c:	8d63883a 	add	r17,r17,r21
 410bf30:	8d45803a 	cmpltu	r2,r17,r21
 410bf34:	1585883a 	add	r2,r2,r22
 410bf38:	1887883a 	add	r3,r3,r2
 410bf3c:	98bfffc4 	addi	r2,r19,-1
 410bf40:	b0c0202e 	bgeu	r22,r3,410bfc4 <__divdf3+0x7ec>
 410bf44:	19405136 	bltu	r3,r5,410c08c <__divdf3+0x8b4>
 410bf48:	28c04f26 	beq	r5,r3,410c088 <__divdf3+0x8b0>
 410bf4c:	1027883a 	mov	r19,r2
 410bf50:	003f6306 	br	410bce0 <__divdf3+0x508>
 410bf54:	a27efc36 	bltu	r20,r9,410bb48 <__divdf3+0x370>
 410bf58:	983897fa 	slli	fp,r19,31
 410bf5c:	a004d07a 	srli	r2,r20,1
 410bf60:	9820d07a 	srli	r16,r19,1
 410bf64:	a02297fa 	slli	r17,r20,31
 410bf68:	e0b8b03a 	or	fp,fp,r2
 410bf6c:	003efa06 	br	410bb58 <__divdf3+0x380>
 410bf70:	e009883a 	mov	r4,fp
 410bf74:	410d5d40 	call	410d5d4 <__clzsi2>
 410bf78:	11400544 	addi	r5,r2,21
 410bf7c:	29000748 	cmpgei	r4,r5,29
 410bf80:	1007883a 	mov	r3,r2
 410bf84:	10800804 	addi	r2,r2,32
 410bf88:	203e8526 	beq	r4,zero,410b9a0 <__divdf3+0x1c8>
 410bf8c:	18fffe04 	addi	r3,r3,-8
 410bf90:	e0ec983a 	sll	r22,fp,r3
 410bf94:	0013883a 	mov	r9,zero
 410bf98:	003e8806 	br	410b9bc <__divdf3+0x1e4>
 410bf9c:	410d5d40 	call	410d5d4 <__clzsi2>
 410bfa0:	11000544 	addi	r4,r2,21
 410bfa4:	20c00748 	cmpgei	r3,r4,29
 410bfa8:	100b883a 	mov	r5,r2
 410bfac:	10800804 	addi	r2,r2,32
 410bfb0:	183e8d26 	beq	r3,zero,410b9e8 <__divdf3+0x210>
 410bfb4:	297ffe04 	addi	r5,r5,-8
 410bfb8:	a166983a 	sll	r19,r20,r5
 410bfbc:	0029883a 	mov	r20,zero
 410bfc0:	003e9006 	br	410ba04 <__divdf3+0x22c>
 410bfc4:	b0ffe11e 	bne	r22,r3,410bf4c <__divdf3+0x774>
 410bfc8:	8d7fe036 	bltu	r17,r21,410bf4c <__divdf3+0x774>
 410bfcc:	003fdd06 	br	410bf44 <__divdf3+0x76c>
 410bfd0:	30ff132e 	bgeu	r6,r3,410bc20 <__divdf3+0x448>
 410bfd4:	423fff84 	addi	r8,r8,-2
 410bfd8:	358d883a 	add	r6,r6,r22
 410bfdc:	003f1106 	br	410bc24 <__divdf3+0x44c>
 410bfe0:	243ef72e 	bgeu	r4,r16,410bbc0 <__divdf3+0x3e8>
 410bfe4:	9cffff84 	addi	r19,r19,-2
 410bfe8:	2589883a 	add	r4,r4,r22
 410bfec:	003ef506 	br	410bbc4 <__divdf3+0x3ec>
 410bff0:	00fff844 	movi	r3,-31
 410bff4:	1c47c83a 	sub	r3,r3,r17
 410bff8:	29400820 	cmpeqi	r5,r5,32
 410bffc:	98c6d83a 	srl	r3,r19,r3
 410c000:	2800031e 	bne	r5,zero,410c010 <__divdf3+0x838>
 410c004:	91410f84 	addi	r5,r18,1086
 410c008:	994a983a 	sll	r5,r19,r5
 410c00c:	a168b03a 	or	r20,r20,r5
 410c010:	a028c03a 	cmpne	r20,r20,zero
 410c014:	a0e8b03a 	or	r20,r20,r3
 410c018:	a4c001cc 	andi	r19,r20,7
 410c01c:	9800291e 	bne	r19,zero,410c0c4 <__divdf3+0x8ec>
 410c020:	000b883a 	mov	r5,zero
 410c024:	a028d0fa 	srli	r20,r20,3
 410c028:	0007883a 	mov	r3,zero
 410c02c:	a4e8b03a 	or	r20,r20,r19
 410c030:	003e3b06 	br	410b920 <__divdf3+0x148>
 410c034:	1029883a 	mov	r20,r2
 410c038:	313f931e 	bne	r6,r4,410be88 <__divdf3+0x6b0>
 410c03c:	1d7f921e 	bne	r3,r21,410be88 <__divdf3+0x6b0>
 410c040:	003e9606 	br	410ba9c <__divdf3+0x2c4>
 410c044:	047f9a0e 	bge	zero,r17,410beb0 <__divdf3+0x6d8>
 410c048:	0009883a 	mov	r4,zero
 410c04c:	05000044 	movi	r20,1
 410c050:	9d27883a 	add	r19,r19,r20
 410c054:	003e9506 	br	410baac <__divdf3+0x2d4>
 410c058:	a08003cc 	andi	r2,r20,15
 410c05c:	10800118 	cmpnei	r2,r2,4
 410c060:	103e9126 	beq	r2,zero,410baa8 <__divdf3+0x2d0>
 410c064:	a1000104 	addi	r4,r20,4
 410c068:	00bffec4 	movi	r2,-5
 410c06c:	2008d0fa 	srli	r4,r4,3
 410c070:	1529803a 	cmpltu	r20,r2,r20
 410c074:	003ff606 	br	410c050 <__divdf3+0x878>
 410c078:	1013883a 	mov	r9,r2
 410c07c:	003f5a06 	br	410bde8 <__divdf3+0x610>
 410c080:	1011883a 	mov	r8,r2
 410c084:	003f3906 	br	410bd6c <__divdf3+0x594>
 410c088:	89bfb02e 	bgeu	r17,r6,410bf4c <__divdf3+0x774>
 410c08c:	8d63883a 	add	r17,r17,r21
 410c090:	8d45803a 	cmpltu	r2,r17,r21
 410c094:	1585883a 	add	r2,r2,r22
 410c098:	9cffff84 	addi	r19,r19,-2
 410c09c:	1887883a 	add	r3,r3,r2
 410c0a0:	003f0f06 	br	410bce0 <__divdf3+0x508>
 410c0a4:	ad45883a 	add	r2,r21,r21
 410c0a8:	156b803a 	cmpltu	r21,r2,r21
 410c0ac:	adad883a 	add	r22,r21,r22
 410c0b0:	358d883a 	add	r6,r6,r22
 410c0b4:	a53fff84 	addi	r20,r20,-2
 410c0b8:	102b883a 	mov	r21,r2
 410c0bc:	313fdf26 	beq	r6,r4,410c03c <__divdf3+0x864>
 410c0c0:	003f7106 	br	410be88 <__divdf3+0x6b0>
 410c0c4:	a08003cc 	andi	r2,r20,15
 410c0c8:	10800118 	cmpnei	r2,r2,4
 410c0cc:	000b883a 	mov	r5,zero
 410c0d0:	103f8b1e 	bne	r2,zero,410bf00 <__divdf3+0x728>
 410c0d4:	2804927a 	slli	r2,r5,9
 410c0d8:	2826977a 	slli	r19,r5,29
 410c0dc:	100ad33a 	srli	r5,r2,12
 410c0e0:	003fd006 	br	410c024 <__divdf3+0x84c>
 410c0e4:	00800434 	movhi	r2,16
 410c0e8:	99400234 	orhi	r5,r19,8
 410c0ec:	10bfffc4 	addi	r2,r2,-1
 410c0f0:	288a703a 	and	r5,r5,r2
 410c0f4:	003e7f06 	br	410baf4 <__divdf3+0x31c>
 410c0f8:	a8ffea36 	bltu	r21,r3,410c0a4 <__divdf3+0x8cc>
 410c0fc:	1029883a 	mov	r20,r2
 410c100:	1d7f611e 	bne	r3,r21,410be88 <__divdf3+0x6b0>
 410c104:	003e6506 	br	410ba9c <__divdf3+0x2c4>

0410c108 <__eqdf2>:
 410c108:	2810d53a 	srli	r8,r5,20
 410c10c:	3806d53a 	srli	r3,r7,20
 410c110:	00800434 	movhi	r2,16
 410c114:	4201ffcc 	andi	r8,r8,2047
 410c118:	10bfffc4 	addi	r2,r2,-1
 410c11c:	4241ffd8 	cmpnei	r9,r8,2047
 410c120:	2814d7fa 	srli	r10,r5,31
 410c124:	3816d7fa 	srli	r11,r7,31
 410c128:	288a703a 	and	r5,r5,r2
 410c12c:	388e703a 	and	r7,r7,r2
 410c130:	1881ffcc 	andi	r2,r3,2047
 410c134:	48000626 	beq	r9,zero,410c150 <__eqdf2+0x48>
 410c138:	10c1ffe0 	cmpeqi	r3,r2,2047
 410c13c:	1800021e 	bne	r3,zero,410c148 <__eqdf2+0x40>
 410c140:	4080011e 	bne	r8,r2,410c148 <__eqdf2+0x40>
 410c144:	29c00826 	beq	r5,r7,410c168 <__eqdf2+0x60>
 410c148:	00800044 	movi	r2,1
 410c14c:	f800283a 	ret
 410c150:	2906b03a 	or	r3,r5,r4
 410c154:	183ffc1e 	bne	r3,zero,410c148 <__eqdf2+0x40>
 410c158:	1081ffd8 	cmpnei	r2,r2,2047
 410c15c:	103ffa1e 	bne	r2,zero,410c148 <__eqdf2+0x40>
 410c160:	398eb03a 	or	r7,r7,r6
 410c164:	383ff81e 	bne	r7,zero,410c148 <__eqdf2+0x40>
 410c168:	21bff71e 	bne	r4,r6,410c148 <__eqdf2+0x40>
 410c16c:	52c00426 	beq	r10,r11,410c180 <__eqdf2+0x78>
 410c170:	403ff51e 	bne	r8,zero,410c148 <__eqdf2+0x40>
 410c174:	290ab03a 	or	r5,r5,r4
 410c178:	2804c03a 	cmpne	r2,r5,zero
 410c17c:	f800283a 	ret
 410c180:	0005883a 	mov	r2,zero
 410c184:	f800283a 	ret

0410c188 <__gedf2>:
 410c188:	2810d53a 	srli	r8,r5,20
 410c18c:	3812d53a 	srli	r9,r7,20
 410c190:	00c00434 	movhi	r3,16
 410c194:	4201ffcc 	andi	r8,r8,2047
 410c198:	18ffffc4 	addi	r3,r3,-1
 410c19c:	4281ffd8 	cmpnei	r10,r8,2047
 410c1a0:	2816d7fa 	srli	r11,r5,31
 410c1a4:	3804d7fa 	srli	r2,r7,31
 410c1a8:	28ca703a 	and	r5,r5,r3
 410c1ac:	38ce703a 	and	r7,r7,r3
 410c1b0:	48c1ffcc 	andi	r3,r9,2047
 410c1b4:	50000a26 	beq	r10,zero,410c1e0 <__gedf2+0x58>
 410c1b8:	1a41ffd8 	cmpnei	r9,r3,2047
 410c1bc:	48000c26 	beq	r9,zero,410c1f0 <__gedf2+0x68>
 410c1c0:	4000171e 	bne	r8,zero,410c220 <__gedf2+0x98>
 410c1c4:	2912b03a 	or	r9,r5,r4
 410c1c8:	1800121e 	bne	r3,zero,410c214 <__gedf2+0x8c>
 410c1cc:	3994b03a 	or	r10,r7,r6
 410c1d0:	5000101e 	bne	r10,zero,410c214 <__gedf2+0x8c>
 410c1d4:	48000a1e 	bne	r9,zero,410c200 <__gedf2+0x78>
 410c1d8:	0005883a 	mov	r2,zero
 410c1dc:	f800283a 	ret
 410c1e0:	2912b03a 	or	r9,r5,r4
 410c1e4:	48001d1e 	bne	r9,zero,410c25c <__gedf2+0xd4>
 410c1e8:	1a41ffe0 	cmpeqi	r9,r3,2047
 410c1ec:	48000c26 	beq	r9,zero,410c220 <__gedf2+0x98>
 410c1f0:	3992b03a 	or	r9,r7,r6
 410c1f4:	4800191e 	bne	r9,zero,410c25c <__gedf2+0xd4>
 410c1f8:	40000526 	beq	r8,zero,410c210 <__gedf2+0x88>
 410c1fc:	58800c26 	beq	r11,r2,410c230 <__gedf2+0xa8>
 410c200:	00800044 	movi	r2,1
 410c204:	58000526 	beq	r11,zero,410c21c <__gedf2+0x94>
 410c208:	00bfffc4 	movi	r2,-1
 410c20c:	f800283a 	ret
 410c210:	2912b03a 	or	r9,r5,r4
 410c214:	483ff91e 	bne	r9,zero,410c1fc <__gedf2+0x74>
 410c218:	103ffb26 	beq	r2,zero,410c208 <__gedf2+0x80>
 410c21c:	f800283a 	ret
 410c220:	183ff61e 	bne	r3,zero,410c1fc <__gedf2+0x74>
 410c224:	3992b03a 	or	r9,r7,r6
 410c228:	483ff41e 	bne	r9,zero,410c1fc <__gedf2+0x74>
 410c22c:	003ff406 	br	410c200 <__gedf2+0x78>
 410c230:	1a000716 	blt	r3,r8,410c250 <__gedf2+0xc8>
 410c234:	40fff816 	blt	r8,r3,410c218 <__gedf2+0x90>
 410c238:	397ff136 	bltu	r7,r5,410c200 <__gedf2+0x78>
 410c23c:	29c00926 	beq	r5,r7,410c264 <__gedf2+0xdc>
 410c240:	29ffe52e 	bgeu	r5,r7,410c1d8 <__gedf2+0x50>
 410c244:	583ff026 	beq	r11,zero,410c208 <__gedf2+0x80>
 410c248:	5805883a 	mov	r2,r11
 410c24c:	f800283a 	ret
 410c250:	103fed1e 	bne	r2,zero,410c208 <__gedf2+0x80>
 410c254:	00800044 	movi	r2,1
 410c258:	f800283a 	ret
 410c25c:	00bfff84 	movi	r2,-2
 410c260:	f800283a 	ret
 410c264:	313fe636 	bltu	r6,r4,410c200 <__gedf2+0x78>
 410c268:	21bfdb2e 	bgeu	r4,r6,410c1d8 <__gedf2+0x50>
 410c26c:	003ff506 	br	410c244 <__gedf2+0xbc>

0410c270 <__ledf2>:
 410c270:	2810d53a 	srli	r8,r5,20
 410c274:	3812d53a 	srli	r9,r7,20
 410c278:	00c00434 	movhi	r3,16
 410c27c:	4201ffcc 	andi	r8,r8,2047
 410c280:	18ffffc4 	addi	r3,r3,-1
 410c284:	4281ffd8 	cmpnei	r10,r8,2047
 410c288:	2816d7fa 	srli	r11,r5,31
 410c28c:	3804d7fa 	srli	r2,r7,31
 410c290:	28ca703a 	and	r5,r5,r3
 410c294:	38ce703a 	and	r7,r7,r3
 410c298:	48c1ffcc 	andi	r3,r9,2047
 410c29c:	50000a26 	beq	r10,zero,410c2c8 <__ledf2+0x58>
 410c2a0:	1a41ffd8 	cmpnei	r9,r3,2047
 410c2a4:	48000c26 	beq	r9,zero,410c2d8 <__ledf2+0x68>
 410c2a8:	4000191e 	bne	r8,zero,410c310 <__ledf2+0xa0>
 410c2ac:	2912b03a 	or	r9,r5,r4
 410c2b0:	18000d1e 	bne	r3,zero,410c2e8 <__ledf2+0x78>
 410c2b4:	3994b03a 	or	r10,r7,r6
 410c2b8:	50000b1e 	bne	r10,zero,410c2e8 <__ledf2+0x78>
 410c2bc:	48000c1e 	bne	r9,zero,410c2f0 <__ledf2+0x80>
 410c2c0:	0005883a 	mov	r2,zero
 410c2c4:	f800283a 	ret
 410c2c8:	2912b03a 	or	r9,r5,r4
 410c2cc:	48000c1e 	bne	r9,zero,410c300 <__ledf2+0x90>
 410c2d0:	1a41ffe0 	cmpeqi	r9,r3,2047
 410c2d4:	48000e26 	beq	r9,zero,410c310 <__ledf2+0xa0>
 410c2d8:	3992b03a 	or	r9,r7,r6
 410c2dc:	4800081e 	bne	r9,zero,410c300 <__ledf2+0x90>
 410c2e0:	4000021e 	bne	r8,zero,410c2ec <__ledf2+0x7c>
 410c2e4:	2912b03a 	or	r9,r5,r4
 410c2e8:	48000726 	beq	r9,zero,410c308 <__ledf2+0x98>
 410c2ec:	58800c26 	beq	r11,r2,410c320 <__ledf2+0xb0>
 410c2f0:	00800044 	movi	r2,1
 410c2f4:	58000526 	beq	r11,zero,410c30c <__ledf2+0x9c>
 410c2f8:	00bfffc4 	movi	r2,-1
 410c2fc:	f800283a 	ret
 410c300:	00800084 	movi	r2,2
 410c304:	f800283a 	ret
 410c308:	103ffb26 	beq	r2,zero,410c2f8 <__ledf2+0x88>
 410c30c:	f800283a 	ret
 410c310:	183ff61e 	bne	r3,zero,410c2ec <__ledf2+0x7c>
 410c314:	3992b03a 	or	r9,r7,r6
 410c318:	483ff41e 	bne	r9,zero,410c2ec <__ledf2+0x7c>
 410c31c:	003ff406 	br	410c2f0 <__ledf2+0x80>
 410c320:	1a00030e 	bge	r3,r8,410c330 <__ledf2+0xc0>
 410c324:	103ff41e 	bne	r2,zero,410c2f8 <__ledf2+0x88>
 410c328:	00800044 	movi	r2,1
 410c32c:	f800283a 	ret
 410c330:	40fff516 	blt	r8,r3,410c308 <__ledf2+0x98>
 410c334:	397fee36 	bltu	r7,r5,410c2f0 <__ledf2+0x80>
 410c338:	29c00426 	beq	r5,r7,410c34c <__ledf2+0xdc>
 410c33c:	29ffe02e 	bgeu	r5,r7,410c2c0 <__ledf2+0x50>
 410c340:	583fed26 	beq	r11,zero,410c2f8 <__ledf2+0x88>
 410c344:	5805883a 	mov	r2,r11
 410c348:	f800283a 	ret
 410c34c:	313fe836 	bltu	r6,r4,410c2f0 <__ledf2+0x80>
 410c350:	21bfdb2e 	bgeu	r4,r6,410c2c0 <__ledf2+0x50>
 410c354:	003ffa06 	br	410c340 <__ledf2+0xd0>

0410c358 <__muldf3>:
 410c358:	2810d53a 	srli	r8,r5,20
 410c35c:	defff004 	addi	sp,sp,-64
 410c360:	00800434 	movhi	r2,16
 410c364:	df000e15 	stw	fp,56(sp)
 410c368:	dd000a15 	stw	r20,40(sp)
 410c36c:	dcc00915 	stw	r19,36(sp)
 410c370:	dc400715 	stw	r17,28(sp)
 410c374:	10bfffc4 	addi	r2,r2,-1
 410c378:	dfc00f15 	stw	ra,60(sp)
 410c37c:	ddc00d15 	stw	r23,52(sp)
 410c380:	dd800c15 	stw	r22,48(sp)
 410c384:	dd400b15 	stw	r21,44(sp)
 410c388:	dc800815 	stw	r18,32(sp)
 410c38c:	dc000615 	stw	r16,24(sp)
 410c390:	4201ffcc 	andi	r8,r8,2047
 410c394:	2828d7fa 	srli	r20,r5,31
 410c398:	2023883a 	mov	r17,r4
 410c39c:	3039883a 	mov	fp,r6
 410c3a0:	28a6703a 	and	r19,r5,r2
 410c3a4:	40013426 	beq	r8,zero,410c878 <__muldf3+0x520>
 410c3a8:	4081ffe0 	cmpeqi	r2,r8,2047
 410c3ac:	1001461e 	bne	r2,zero,410c8c8 <__muldf3+0x570>
 410c3b0:	980a90fa 	slli	r5,r19,3
 410c3b4:	2026d77a 	srli	r19,r4,29
 410c3b8:	202490fa 	slli	r18,r4,3
 410c3bc:	423f0044 	addi	r8,r8,-1023
 410c3c0:	9966b03a 	or	r19,r19,r5
 410c3c4:	9cc02034 	orhi	r19,r19,128
 410c3c8:	002b883a 	mov	r21,zero
 410c3cc:	002d883a 	mov	r22,zero
 410c3d0:	3804d53a 	srli	r2,r7,20
 410c3d4:	00c00434 	movhi	r3,16
 410c3d8:	18ffffc4 	addi	r3,r3,-1
 410c3dc:	1081ffcc 	andi	r2,r2,2047
 410c3e0:	382ed7fa 	srli	r23,r7,31
 410c3e4:	38e0703a 	and	r16,r7,r3
 410c3e8:	10011026 	beq	r2,zero,410c82c <__muldf3+0x4d4>
 410c3ec:	10c1ffe0 	cmpeqi	r3,r2,2047
 410c3f0:	18013c1e 	bne	r3,zero,410c8e4 <__muldf3+0x58c>
 410c3f4:	e008d77a 	srli	r4,fp,29
 410c3f8:	802090fa 	slli	r16,r16,3
 410c3fc:	e02290fa 	slli	r17,fp,3
 410c400:	10bf0044 	addi	r2,r2,-1023
 410c404:	2420b03a 	or	r16,r4,r16
 410c408:	84002034 	orhi	r16,r16,128
 410c40c:	4091883a 	add	r8,r8,r2
 410c410:	0009883a 	mov	r4,zero
 410c414:	a8800428 	cmpgeui	r2,r21,16
 410c418:	a5ccf03a 	xor	r6,r20,r23
 410c41c:	41c00044 	addi	r7,r8,1
 410c420:	1000371e 	bne	r2,zero,410c500 <__muldf3+0x1a8>
 410c424:	a80490ba 	slli	r2,r21,2
 410c428:	00c10474 	movhi	r3,1041
 410c42c:	10c7883a 	add	r3,r2,r3
 410c430:	18b10e17 	ldw	r2,-15304(r3)
 410c434:	1000683a 	jmp	r2
 410c438:	0410c500 	call	410c50 <__alt_mem_sdram_controller_0-0x3bef3b0>
 410c43c:	0410c47c 	xorhi	r16,zero,17169
 410c440:	0410c47c 	xorhi	r16,zero,17169
 410c444:	0410c478 	rdprs	r16,zero,17169
 410c448:	0410c488 	cmpgei	r16,zero,17170
 410c44c:	0410c488 	cmpgei	r16,zero,17170
 410c450:	0410c958 	cmpnei	r16,zero,17189
 410c454:	0410c478 	rdprs	r16,zero,17169
 410c458:	0410c488 	cmpgei	r16,zero,17170
 410c45c:	0410c958 	cmpnei	r16,zero,17189
 410c460:	0410c488 	cmpgei	r16,zero,17170
 410c464:	0410c478 	rdprs	r16,zero,17169
 410c468:	0410c900 	call	410c90 <__alt_mem_sdram_controller_0-0x3bef370>
 410c46c:	0410c900 	call	410c90 <__alt_mem_sdram_controller_0-0x3bef370>
 410c470:	0410c900 	call	410c90 <__alt_mem_sdram_controller_0-0x3bef370>
 410c474:	0410c9e4 	muli	r16,zero,17191
 410c478:	b80d883a 	mov	r6,r23
 410c47c:	8027883a 	mov	r19,r16
 410c480:	8825883a 	mov	r18,r17
 410c484:	202d883a 	mov	r22,r4
 410c488:	b08000a0 	cmpeqi	r2,r22,2
 410c48c:	1000181e 	bne	r2,zero,410c4f0 <__muldf3+0x198>
 410c490:	b08000e0 	cmpeqi	r2,r22,3
 410c494:	1001961e 	bne	r2,zero,410caf0 <__muldf3+0x798>
 410c498:	b0800060 	cmpeqi	r2,r22,1
 410c49c:	1000c926 	beq	r2,zero,410c7c4 <__muldf3+0x46c>
 410c4a0:	0007883a 	mov	r3,zero
 410c4a4:	0027883a 	mov	r19,zero
 410c4a8:	0025883a 	mov	r18,zero
 410c4ac:	1806953a 	slli	r3,r3,20
 410c4b0:	300c97fa 	slli	r6,r6,31
 410c4b4:	9005883a 	mov	r2,r18
 410c4b8:	1cc6b03a 	or	r3,r3,r19
 410c4bc:	1986b03a 	or	r3,r3,r6
 410c4c0:	dfc00f17 	ldw	ra,60(sp)
 410c4c4:	df000e17 	ldw	fp,56(sp)
 410c4c8:	ddc00d17 	ldw	r23,52(sp)
 410c4cc:	dd800c17 	ldw	r22,48(sp)
 410c4d0:	dd400b17 	ldw	r21,44(sp)
 410c4d4:	dd000a17 	ldw	r20,40(sp)
 410c4d8:	dcc00917 	ldw	r19,36(sp)
 410c4dc:	dc800817 	ldw	r18,32(sp)
 410c4e0:	dc400717 	ldw	r17,28(sp)
 410c4e4:	dc000617 	ldw	r16,24(sp)
 410c4e8:	dec01004 	addi	sp,sp,64
 410c4ec:	f800283a 	ret
 410c4f0:	00c1ffc4 	movi	r3,2047
 410c4f4:	0027883a 	mov	r19,zero
 410c4f8:	0025883a 	mov	r18,zero
 410c4fc:	003feb06 	br	410c4ac <__muldf3+0x154>
 410c500:	9028d43a 	srli	r20,r18,16
 410c504:	8f3fffcc 	andi	fp,r17,65535
 410c508:	957fffcc 	andi	r21,r18,65535
 410c50c:	a80b883a 	mov	r5,r21
 410c510:	e009883a 	mov	r4,fp
 410c514:	d9800315 	stw	r6,12(sp)
 410c518:	da000215 	stw	r8,8(sp)
 410c51c:	d9c00115 	stw	r7,4(sp)
 410c520:	8822d43a 	srli	r17,r17,16
 410c524:	410aec00 	call	410aec0 <__mulsi3>
 410c528:	e00b883a 	mov	r5,fp
 410c52c:	a009883a 	mov	r4,r20
 410c530:	102d883a 	mov	r22,r2
 410c534:	410aec00 	call	410aec0 <__mulsi3>
 410c538:	880b883a 	mov	r5,r17
 410c53c:	a009883a 	mov	r4,r20
 410c540:	102f883a 	mov	r23,r2
 410c544:	410aec00 	call	410aec0 <__mulsi3>
 410c548:	a80b883a 	mov	r5,r21
 410c54c:	8809883a 	mov	r4,r17
 410c550:	d8800015 	stw	r2,0(sp)
 410c554:	410aec00 	call	410aec0 <__mulsi3>
 410c558:	b006d43a 	srli	r3,r22,16
 410c55c:	15e5883a 	add	r18,r2,r23
 410c560:	d9c00117 	ldw	r7,4(sp)
 410c564:	1c87883a 	add	r3,r3,r18
 410c568:	da000217 	ldw	r8,8(sp)
 410c56c:	d9800317 	ldw	r6,12(sp)
 410c570:	1dc0042e 	bgeu	r3,r23,410c584 <__muldf3+0x22c>
 410c574:	d9000017 	ldw	r4,0(sp)
 410c578:	00800074 	movhi	r2,1
 410c57c:	2085883a 	add	r2,r4,r2
 410c580:	d8800015 	stw	r2,0(sp)
 410c584:	1804943a 	slli	r2,r3,16
 410c588:	85ffffcc 	andi	r23,r16,65535
 410c58c:	b5bfffcc 	andi	r22,r22,65535
 410c590:	1585883a 	add	r2,r2,r22
 410c594:	a80b883a 	mov	r5,r21
 410c598:	b809883a 	mov	r4,r23
 410c59c:	1824d43a 	srli	r18,r3,16
 410c5a0:	d9800515 	stw	r6,20(sp)
 410c5a4:	da000415 	stw	r8,16(sp)
 410c5a8:	d9c00315 	stw	r7,12(sp)
 410c5ac:	8020d43a 	srli	r16,r16,16
 410c5b0:	d8800115 	stw	r2,4(sp)
 410c5b4:	410aec00 	call	410aec0 <__mulsi3>
 410c5b8:	a009883a 	mov	r4,r20
 410c5bc:	b80b883a 	mov	r5,r23
 410c5c0:	d8800215 	stw	r2,8(sp)
 410c5c4:	410aec00 	call	410aec0 <__mulsi3>
 410c5c8:	a009883a 	mov	r4,r20
 410c5cc:	800b883a 	mov	r5,r16
 410c5d0:	102d883a 	mov	r22,r2
 410c5d4:	410aec00 	call	410aec0 <__mulsi3>
 410c5d8:	a80b883a 	mov	r5,r21
 410c5dc:	8009883a 	mov	r4,r16
 410c5e0:	1029883a 	mov	r20,r2
 410c5e4:	410aec00 	call	410aec0 <__mulsi3>
 410c5e8:	da800217 	ldw	r10,8(sp)
 410c5ec:	1585883a 	add	r2,r2,r22
 410c5f0:	d9c00317 	ldw	r7,12(sp)
 410c5f4:	5006d43a 	srli	r3,r10,16
 410c5f8:	da000417 	ldw	r8,16(sp)
 410c5fc:	d9800517 	ldw	r6,20(sp)
 410c600:	1887883a 	add	r3,r3,r2
 410c604:	1d80022e 	bgeu	r3,r22,410c610 <__muldf3+0x2b8>
 410c608:	00800074 	movhi	r2,1
 410c60c:	a0a9883a 	add	r20,r20,r2
 410c610:	1804d43a 	srli	r2,r3,16
 410c614:	1806943a 	slli	r3,r3,16
 410c618:	982cd43a 	srli	r22,r19,16
 410c61c:	9d7fffcc 	andi	r21,r19,65535
 410c620:	e009883a 	mov	r4,fp
 410c624:	54ffffcc 	andi	r19,r10,65535
 410c628:	a80b883a 	mov	r5,r21
 410c62c:	1ce7883a 	add	r19,r3,r19
 410c630:	d9800515 	stw	r6,20(sp)
 410c634:	da000415 	stw	r8,16(sp)
 410c638:	d9c00315 	stw	r7,12(sp)
 410c63c:	1529883a 	add	r20,r2,r20
 410c640:	410aec00 	call	410aec0 <__mulsi3>
 410c644:	e00b883a 	mov	r5,fp
 410c648:	b009883a 	mov	r4,r22
 410c64c:	d8800215 	stw	r2,8(sp)
 410c650:	410aec00 	call	410aec0 <__mulsi3>
 410c654:	8809883a 	mov	r4,r17
 410c658:	b00b883a 	mov	r5,r22
 410c65c:	1039883a 	mov	fp,r2
 410c660:	410aec00 	call	410aec0 <__mulsi3>
 410c664:	8809883a 	mov	r4,r17
 410c668:	a80b883a 	mov	r5,r21
 410c66c:	1023883a 	mov	r17,r2
 410c670:	410aec00 	call	410aec0 <__mulsi3>
 410c674:	d8c00217 	ldw	r3,8(sp)
 410c678:	1705883a 	add	r2,r2,fp
 410c67c:	d9c00317 	ldw	r7,12(sp)
 410c680:	1808d43a 	srli	r4,r3,16
 410c684:	da000417 	ldw	r8,16(sp)
 410c688:	d9800517 	ldw	r6,20(sp)
 410c68c:	2089883a 	add	r4,r4,r2
 410c690:	94e5883a 	add	r18,r18,r19
 410c694:	2700022e 	bgeu	r4,fp,410c6a0 <__muldf3+0x348>
 410c698:	00800074 	movhi	r2,1
 410c69c:	88a3883a 	add	r17,r17,r2
 410c6a0:	2004d43a 	srli	r2,r4,16
 410c6a4:	2038943a 	slli	fp,r4,16
 410c6a8:	18ffffcc 	andi	r3,r3,65535
 410c6ac:	b809883a 	mov	r4,r23
 410c6b0:	a80b883a 	mov	r5,r21
 410c6b4:	d9800415 	stw	r6,16(sp)
 410c6b8:	da000315 	stw	r8,12(sp)
 410c6bc:	d9c00215 	stw	r7,8(sp)
 410c6c0:	e0f9883a 	add	fp,fp,r3
 410c6c4:	1463883a 	add	r17,r2,r17
 410c6c8:	410aec00 	call	410aec0 <__mulsi3>
 410c6cc:	b80b883a 	mov	r5,r23
 410c6d0:	b009883a 	mov	r4,r22
 410c6d4:	102f883a 	mov	r23,r2
 410c6d8:	410aec00 	call	410aec0 <__mulsi3>
 410c6dc:	b00b883a 	mov	r5,r22
 410c6e0:	8009883a 	mov	r4,r16
 410c6e4:	102d883a 	mov	r22,r2
 410c6e8:	410aec00 	call	410aec0 <__mulsi3>
 410c6ec:	a80b883a 	mov	r5,r21
 410c6f0:	8009883a 	mov	r4,r16
 410c6f4:	1021883a 	mov	r16,r2
 410c6f8:	410aec00 	call	410aec0 <__mulsi3>
 410c6fc:	b80ad43a 	srli	r5,r23,16
 410c700:	1585883a 	add	r2,r2,r22
 410c704:	d9c00217 	ldw	r7,8(sp)
 410c708:	288b883a 	add	r5,r5,r2
 410c70c:	da000317 	ldw	r8,12(sp)
 410c710:	d9800417 	ldw	r6,16(sp)
 410c714:	2d80022e 	bgeu	r5,r22,410c720 <__muldf3+0x3c8>
 410c718:	00800074 	movhi	r2,1
 410c71c:	80a1883a 	add	r16,r16,r2
 410c720:	2806943a 	slli	r3,r5,16
 410c724:	d8800017 	ldw	r2,0(sp)
 410c728:	bdffffcc 	andi	r23,r23,65535
 410c72c:	1dc7883a 	add	r3,r3,r23
 410c730:	90ab883a 	add	r21,r18,r2
 410c734:	acd5803a 	cmpltu	r10,r21,r19
 410c738:	1d07883a 	add	r3,r3,r20
 410c73c:	af2b883a 	add	r21,r21,fp
 410c740:	1a97883a 	add	r11,r3,r10
 410c744:	af09803a 	cmpltu	r4,r21,fp
 410c748:	2826d43a 	srli	r19,r5,16
 410c74c:	5c53883a 	add	r9,r11,r17
 410c750:	4905883a 	add	r2,r9,r4
 410c754:	1d07803a 	cmpltu	r3,r3,r20
 410c758:	5a95803a 	cmpltu	r10,r11,r10
 410c75c:	1a86b03a 	or	r3,r3,r10
 410c760:	1109803a 	cmpltu	r4,r2,r4
 410c764:	4c53803a 	cmpltu	r9,r9,r17
 410c768:	1ce7883a 	add	r19,r3,r19
 410c76c:	4908b03a 	or	r4,r9,r4
 410c770:	a824927a 	slli	r18,r21,9
 410c774:	d8c00117 	ldw	r3,4(sp)
 410c778:	9927883a 	add	r19,r19,r4
 410c77c:	9c27883a 	add	r19,r19,r16
 410c780:	9826927a 	slli	r19,r19,9
 410c784:	a82ad5fa 	srli	r21,r21,23
 410c788:	100ad5fa 	srli	r5,r2,23
 410c78c:	90e4b03a 	or	r18,r18,r3
 410c790:	1004927a 	slli	r2,r2,9
 410c794:	9024c03a 	cmpne	r18,r18,zero
 410c798:	9564b03a 	or	r18,r18,r21
 410c79c:	98c0402c 	andhi	r3,r19,256
 410c7a0:	90a4b03a 	or	r18,r18,r2
 410c7a4:	9966b03a 	or	r19,r19,r5
 410c7a8:	1800b626 	beq	r3,zero,410ca84 <__muldf3+0x72c>
 410c7ac:	9006d07a 	srli	r3,r18,1
 410c7b0:	980497fa 	slli	r2,r19,31
 410c7b4:	9480004c 	andi	r18,r18,1
 410c7b8:	9826d07a 	srli	r19,r19,1
 410c7bc:	1c86b03a 	or	r3,r3,r18
 410c7c0:	18a4b03a 	or	r18,r3,r2
 410c7c4:	3900ffc4 	addi	r4,r7,1023
 410c7c8:	0100690e 	bge	zero,r4,410c970 <__muldf3+0x618>
 410c7cc:	908001cc 	andi	r2,r18,7
 410c7d0:	10000726 	beq	r2,zero,410c7f0 <__muldf3+0x498>
 410c7d4:	908003cc 	andi	r2,r18,15
 410c7d8:	10800120 	cmpeqi	r2,r2,4
 410c7dc:	1000041e 	bne	r2,zero,410c7f0 <__muldf3+0x498>
 410c7e0:	90800104 	addi	r2,r18,4
 410c7e4:	14a5803a 	cmpltu	r18,r2,r18
 410c7e8:	9ca7883a 	add	r19,r19,r18
 410c7ec:	1025883a 	mov	r18,r2
 410c7f0:	9880402c 	andhi	r2,r19,256
 410c7f4:	10000426 	beq	r2,zero,410c808 <__muldf3+0x4b0>
 410c7f8:	00bfc034 	movhi	r2,65280
 410c7fc:	10bfffc4 	addi	r2,r2,-1
 410c800:	98a6703a 	and	r19,r19,r2
 410c804:	39010004 	addi	r4,r7,1024
 410c808:	2081ffc8 	cmpgei	r2,r4,2047
 410c80c:	103f381e 	bne	r2,zero,410c4f0 <__muldf3+0x198>
 410c810:	9804977a 	slli	r2,r19,29
 410c814:	9024d0fa 	srli	r18,r18,3
 410c818:	9826927a 	slli	r19,r19,9
 410c81c:	20c1ffcc 	andi	r3,r4,2047
 410c820:	14a4b03a 	or	r18,r2,r18
 410c824:	9826d33a 	srli	r19,r19,12
 410c828:	003f2006 	br	410c4ac <__muldf3+0x154>
 410c82c:	8722b03a 	or	r17,r16,fp
 410c830:	88004526 	beq	r17,zero,410c948 <__muldf3+0x5f0>
 410c834:	da000015 	stw	r8,0(sp)
 410c838:	80008626 	beq	r16,zero,410ca54 <__muldf3+0x6fc>
 410c83c:	8009883a 	mov	r4,r16
 410c840:	410d5d40 	call	410d5d4 <__clzsi2>
 410c844:	da000017 	ldw	r8,0(sp)
 410c848:	117ffd44 	addi	r5,r2,-11
 410c84c:	01000744 	movi	r4,29
 410c850:	147ffe04 	addi	r17,r2,-8
 410c854:	2149c83a 	sub	r4,r4,r5
 410c858:	8460983a 	sll	r16,r16,r17
 410c85c:	e108d83a 	srl	r4,fp,r4
 410c860:	e462983a 	sll	r17,fp,r17
 410c864:	2420b03a 	or	r16,r4,r16
 410c868:	4091c83a 	sub	r8,r8,r2
 410c86c:	423f0344 	addi	r8,r8,-1011
 410c870:	0009883a 	mov	r4,zero
 410c874:	003ee706 	br	410c414 <__muldf3+0xbc>
 410c878:	9924b03a 	or	r18,r19,r4
 410c87c:	90002d26 	beq	r18,zero,410c934 <__muldf3+0x5dc>
 410c880:	d9c00015 	stw	r7,0(sp)
 410c884:	98006826 	beq	r19,zero,410ca28 <__muldf3+0x6d0>
 410c888:	9809883a 	mov	r4,r19
 410c88c:	410d5d40 	call	410d5d4 <__clzsi2>
 410c890:	d9c00017 	ldw	r7,0(sp)
 410c894:	113ffd44 	addi	r4,r2,-11
 410c898:	00c00744 	movi	r3,29
 410c89c:	14bffe04 	addi	r18,r2,-8
 410c8a0:	1907c83a 	sub	r3,r3,r4
 410c8a4:	9ca6983a 	sll	r19,r19,r18
 410c8a8:	88c6d83a 	srl	r3,r17,r3
 410c8ac:	8ca4983a 	sll	r18,r17,r18
 410c8b0:	1ce6b03a 	or	r19,r3,r19
 410c8b4:	023f0344 	movi	r8,-1011
 410c8b8:	4091c83a 	sub	r8,r8,r2
 410c8bc:	002b883a 	mov	r21,zero
 410c8c0:	002d883a 	mov	r22,zero
 410c8c4:	003ec206 	br	410c3d0 <__muldf3+0x78>
 410c8c8:	9924b03a 	or	r18,r19,r4
 410c8cc:	9000141e 	bne	r18,zero,410c920 <__muldf3+0x5c8>
 410c8d0:	0027883a 	mov	r19,zero
 410c8d4:	05400204 	movi	r21,8
 410c8d8:	0201ffc4 	movi	r8,2047
 410c8dc:	05800084 	movi	r22,2
 410c8e0:	003ebb06 	br	410c3d0 <__muldf3+0x78>
 410c8e4:	8722b03a 	or	r17,r16,fp
 410c8e8:	4201ffc4 	addi	r8,r8,2047
 410c8ec:	8800081e 	bne	r17,zero,410c910 <__muldf3+0x5b8>
 410c8f0:	ad400094 	ori	r21,r21,2
 410c8f4:	0021883a 	mov	r16,zero
 410c8f8:	01000084 	movi	r4,2
 410c8fc:	003ec506 	br	410c414 <__muldf3+0xbc>
 410c900:	b08000a0 	cmpeqi	r2,r22,2
 410c904:	a00d883a 	mov	r6,r20
 410c908:	103ee126 	beq	r2,zero,410c490 <__muldf3+0x138>
 410c90c:	003ef806 	br	410c4f0 <__muldf3+0x198>
 410c910:	ad4000d4 	ori	r21,r21,3
 410c914:	e023883a 	mov	r17,fp
 410c918:	010000c4 	movi	r4,3
 410c91c:	003ebd06 	br	410c414 <__muldf3+0xbc>
 410c920:	2025883a 	mov	r18,r4
 410c924:	05400304 	movi	r21,12
 410c928:	0201ffc4 	movi	r8,2047
 410c92c:	058000c4 	movi	r22,3
 410c930:	003ea706 	br	410c3d0 <__muldf3+0x78>
 410c934:	0027883a 	mov	r19,zero
 410c938:	05400104 	movi	r21,4
 410c93c:	0011883a 	mov	r8,zero
 410c940:	05800044 	movi	r22,1
 410c944:	003ea206 	br	410c3d0 <__muldf3+0x78>
 410c948:	ad400054 	ori	r21,r21,1
 410c94c:	0021883a 	mov	r16,zero
 410c950:	01000044 	movi	r4,1
 410c954:	003eaf06 	br	410c414 <__muldf3+0xbc>
 410c958:	04c00434 	movhi	r19,16
 410c95c:	000d883a 	mov	r6,zero
 410c960:	9cffffc4 	addi	r19,r19,-1
 410c964:	04bfffc4 	movi	r18,-1
 410c968:	00c1ffc4 	movi	r3,2047
 410c96c:	003ecf06 	br	410c4ac <__muldf3+0x154>
 410c970:	00800044 	movi	r2,1
 410c974:	1105c83a 	sub	r2,r2,r4
 410c978:	10c00e48 	cmpgei	r3,r2,57
 410c97c:	183ec81e 	bne	r3,zero,410c4a0 <__muldf3+0x148>
 410c980:	10c00808 	cmpgei	r3,r2,32
 410c984:	1800411e 	bne	r3,zero,410ca8c <__muldf3+0x734>
 410c988:	39c10784 	addi	r7,r7,1054
 410c98c:	99c6983a 	sll	r3,r19,r7
 410c990:	9088d83a 	srl	r4,r18,r2
 410c994:	91ce983a 	sll	r7,r18,r7
 410c998:	98a6d83a 	srl	r19,r19,r2
 410c99c:	1904b03a 	or	r2,r3,r4
 410c9a0:	3824c03a 	cmpne	r18,r7,zero
 410c9a4:	1484b03a 	or	r2,r2,r18
 410c9a8:	10c001cc 	andi	r3,r2,7
 410c9ac:	18000726 	beq	r3,zero,410c9cc <__muldf3+0x674>
 410c9b0:	10c003cc 	andi	r3,r2,15
 410c9b4:	18c00120 	cmpeqi	r3,r3,4
 410c9b8:	1800041e 	bne	r3,zero,410c9cc <__muldf3+0x674>
 410c9bc:	10c00104 	addi	r3,r2,4
 410c9c0:	1885803a 	cmpltu	r2,r3,r2
 410c9c4:	98a7883a 	add	r19,r19,r2
 410c9c8:	1805883a 	mov	r2,r3
 410c9cc:	98c0202c 	andhi	r3,r19,128
 410c9d0:	18004326 	beq	r3,zero,410cae0 <__muldf3+0x788>
 410c9d4:	00c00044 	movi	r3,1
 410c9d8:	0027883a 	mov	r19,zero
 410c9dc:	0025883a 	mov	r18,zero
 410c9e0:	003eb206 	br	410c4ac <__muldf3+0x154>
 410c9e4:	9880022c 	andhi	r2,r19,8
 410c9e8:	10000926 	beq	r2,zero,410ca10 <__muldf3+0x6b8>
 410c9ec:	8080022c 	andhi	r2,r16,8
 410c9f0:	1000071e 	bne	r2,zero,410ca10 <__muldf3+0x6b8>
 410c9f4:	00800434 	movhi	r2,16
 410c9f8:	84c00234 	orhi	r19,r16,8
 410c9fc:	10bfffc4 	addi	r2,r2,-1
 410ca00:	98a6703a 	and	r19,r19,r2
 410ca04:	b80d883a 	mov	r6,r23
 410ca08:	8825883a 	mov	r18,r17
 410ca0c:	003fd606 	br	410c968 <__muldf3+0x610>
 410ca10:	00800434 	movhi	r2,16
 410ca14:	9cc00234 	orhi	r19,r19,8
 410ca18:	10bfffc4 	addi	r2,r2,-1
 410ca1c:	98a6703a 	and	r19,r19,r2
 410ca20:	a00d883a 	mov	r6,r20
 410ca24:	003fd006 	br	410c968 <__muldf3+0x610>
 410ca28:	410d5d40 	call	410d5d4 <__clzsi2>
 410ca2c:	11000544 	addi	r4,r2,21
 410ca30:	21400748 	cmpgei	r5,r4,29
 410ca34:	1007883a 	mov	r3,r2
 410ca38:	d9c00017 	ldw	r7,0(sp)
 410ca3c:	10800804 	addi	r2,r2,32
 410ca40:	283f9526 	beq	r5,zero,410c898 <__muldf3+0x540>
 410ca44:	18fffe04 	addi	r3,r3,-8
 410ca48:	88e6983a 	sll	r19,r17,r3
 410ca4c:	0025883a 	mov	r18,zero
 410ca50:	003f9806 	br	410c8b4 <__muldf3+0x55c>
 410ca54:	e009883a 	mov	r4,fp
 410ca58:	410d5d40 	call	410d5d4 <__clzsi2>
 410ca5c:	11400544 	addi	r5,r2,21
 410ca60:	29000748 	cmpgei	r4,r5,29
 410ca64:	1007883a 	mov	r3,r2
 410ca68:	da000017 	ldw	r8,0(sp)
 410ca6c:	10800804 	addi	r2,r2,32
 410ca70:	203f7626 	beq	r4,zero,410c84c <__muldf3+0x4f4>
 410ca74:	1c3ffe04 	addi	r16,r3,-8
 410ca78:	e420983a 	sll	r16,fp,r16
 410ca7c:	0023883a 	mov	r17,zero
 410ca80:	003f7906 	br	410c868 <__muldf3+0x510>
 410ca84:	400f883a 	mov	r7,r8
 410ca88:	003f4e06 	br	410c7c4 <__muldf3+0x46c>
 410ca8c:	00fff844 	movi	r3,-31
 410ca90:	1907c83a 	sub	r3,r3,r4
 410ca94:	10800820 	cmpeqi	r2,r2,32
 410ca98:	98c6d83a 	srl	r3,r19,r3
 410ca9c:	1000031e 	bne	r2,zero,410caac <__muldf3+0x754>
 410caa0:	39c10f84 	addi	r7,r7,1086
 410caa4:	99e6983a 	sll	r19,r19,r7
 410caa8:	94e4b03a 	or	r18,r18,r19
 410caac:	9024c03a 	cmpne	r18,r18,zero
 410cab0:	90c4b03a 	or	r2,r18,r3
 410cab4:	148001cc 	andi	r18,r2,7
 410cab8:	9000051e 	bne	r18,zero,410cad0 <__muldf3+0x778>
 410cabc:	0027883a 	mov	r19,zero
 410cac0:	1004d0fa 	srli	r2,r2,3
 410cac4:	0007883a 	mov	r3,zero
 410cac8:	14a4b03a 	or	r18,r2,r18
 410cacc:	003e7706 	br	410c4ac <__muldf3+0x154>
 410cad0:	10c003cc 	andi	r3,r2,15
 410cad4:	18c00118 	cmpnei	r3,r3,4
 410cad8:	0027883a 	mov	r19,zero
 410cadc:	183fb71e 	bne	r3,zero,410c9bc <__muldf3+0x664>
 410cae0:	9806927a 	slli	r3,r19,9
 410cae4:	9824977a 	slli	r18,r19,29
 410cae8:	1826d33a 	srli	r19,r3,12
 410caec:	003ff406 	br	410cac0 <__muldf3+0x768>
 410caf0:	00800434 	movhi	r2,16
 410caf4:	9cc00234 	orhi	r19,r19,8
 410caf8:	10bfffc4 	addi	r2,r2,-1
 410cafc:	98a6703a 	and	r19,r19,r2
 410cb00:	003f9906 	br	410c968 <__muldf3+0x610>

0410cb04 <__subdf3>:
 410cb04:	00800434 	movhi	r2,16
 410cb08:	3810d53a 	srli	r8,r7,20
 410cb0c:	10bfffc4 	addi	r2,r2,-1
 410cb10:	2806d53a 	srli	r3,r5,20
 410cb14:	2892703a 	and	r9,r5,r2
 410cb18:	3884703a 	and	r2,r7,r2
 410cb1c:	280ad7fa 	srli	r5,r5,31
 410cb20:	481290fa 	slli	r9,r9,3
 410cb24:	2018d77a 	srli	r12,r4,29
 410cb28:	100490fa 	slli	r2,r2,3
 410cb2c:	3016d77a 	srli	r11,r6,29
 410cb30:	defffb04 	addi	sp,sp,-20
 410cb34:	4201ffcc 	andi	r8,r8,2047
 410cb38:	dc800215 	stw	r18,8(sp)
 410cb3c:	dc400115 	stw	r17,4(sp)
 410cb40:	1c81ffcc 	andi	r18,r3,2047
 410cb44:	dfc00415 	stw	ra,16(sp)
 410cb48:	dcc00315 	stw	r19,12(sp)
 410cb4c:	dc000015 	stw	r16,0(sp)
 410cb50:	4281ffd8 	cmpnei	r10,r8,2047
 410cb54:	2823883a 	mov	r17,r5
 410cb58:	201c90fa 	slli	r14,r4,3
 410cb5c:	380ed7fa 	srli	r7,r7,31
 410cb60:	301a90fa 	slli	r13,r6,3
 410cb64:	29403fcc 	andi	r5,r5,255
 410cb68:	6252b03a 	or	r9,r12,r9
 410cb6c:	589eb03a 	or	r15,r11,r2
 410cb70:	9207c83a 	sub	r3,r18,r8
 410cb74:	50006826 	beq	r10,zero,410cd18 <__subdf3+0x214>
 410cb78:	3ac0005c 	xori	r11,r7,1
 410cb7c:	2ac07326 	beq	r5,r11,410cd4c <__subdf3+0x248>
 410cb80:	00c0590e 	bge	zero,r3,410cce8 <__subdf3+0x1e4>
 410cb84:	4000691e 	bne	r8,zero,410cd2c <__subdf3+0x228>
 410cb88:	7b44b03a 	or	r2,r15,r13
 410cb8c:	1000fb26 	beq	r2,zero,410cf7c <__subdf3+0x478>
 410cb90:	18bfffc4 	addi	r2,r3,-1
 410cb94:	10019126 	beq	r2,zero,410d1dc <__subdf3+0x6d8>
 410cb98:	18c1ffd8 	cmpnei	r3,r3,2047
 410cb9c:	1800c326 	beq	r3,zero,410ceac <__subdf3+0x3a8>
 410cba0:	1007883a 	mov	r3,r2
 410cba4:	18800e48 	cmpgei	r2,r3,57
 410cba8:	1000651e 	bne	r2,zero,410cd40 <__subdf3+0x23c>
 410cbac:	18800808 	cmpgei	r2,r3,32
 410cbb0:	1001331e 	bne	r2,zero,410d080 <__subdf3+0x57c>
 410cbb4:	00800804 	movi	r2,32
 410cbb8:	10c5c83a 	sub	r2,r2,r3
 410cbbc:	78a0983a 	sll	r16,r15,r2
 410cbc0:	68c8d83a 	srl	r4,r13,r3
 410cbc4:	689a983a 	sll	r13,r13,r2
 410cbc8:	78c4d83a 	srl	r2,r15,r3
 410cbcc:	8120b03a 	or	r16,r16,r4
 410cbd0:	681ac03a 	cmpne	r13,r13,zero
 410cbd4:	8360b03a 	or	r16,r16,r13
 410cbd8:	4893c83a 	sub	r9,r9,r2
 410cbdc:	7421c83a 	sub	r16,r14,r16
 410cbe0:	7409803a 	cmpltu	r4,r14,r16
 410cbe4:	4909c83a 	sub	r4,r9,r4
 410cbe8:	2080202c 	andhi	r2,r4,128
 410cbec:	10009326 	beq	r2,zero,410ce3c <__subdf3+0x338>
 410cbf0:	04c02034 	movhi	r19,128
 410cbf4:	9cffffc4 	addi	r19,r19,-1
 410cbf8:	24e6703a 	and	r19,r4,r19
 410cbfc:	9800b926 	beq	r19,zero,410cee4 <__subdf3+0x3e0>
 410cc00:	9809883a 	mov	r4,r19
 410cc04:	410d5d40 	call	410d5d4 <__clzsi2>
 410cc08:	10fffe04 	addi	r3,r2,-8
 410cc0c:	01000804 	movi	r4,32
 410cc10:	20c9c83a 	sub	r4,r4,r3
 410cc14:	8108d83a 	srl	r4,r16,r4
 410cc18:	98e6983a 	sll	r19,r19,r3
 410cc1c:	80e0983a 	sll	r16,r16,r3
 410cc20:	24c8b03a 	or	r4,r4,r19
 410cc24:	1c80b816 	blt	r3,r18,410cf08 <__subdf3+0x404>
 410cc28:	1c87c83a 	sub	r3,r3,r18
 410cc2c:	19400044 	addi	r5,r3,1
 410cc30:	28800808 	cmpgei	r2,r5,32
 410cc34:	1000751e 	bne	r2,zero,410ce0c <__subdf3+0x308>
 410cc38:	00800804 	movi	r2,32
 410cc3c:	1145c83a 	sub	r2,r2,r5
 410cc40:	8146d83a 	srl	r3,r16,r5
 410cc44:	80a0983a 	sll	r16,r16,r2
 410cc48:	2084983a 	sll	r2,r4,r2
 410cc4c:	2148d83a 	srl	r4,r4,r5
 410cc50:	8020c03a 	cmpne	r16,r16,zero
 410cc54:	10c4b03a 	or	r2,r2,r3
 410cc58:	1420b03a 	or	r16,r2,r16
 410cc5c:	0025883a 	mov	r18,zero
 410cc60:	808001cc 	andi	r2,r16,7
 410cc64:	10000726 	beq	r2,zero,410cc84 <__subdf3+0x180>
 410cc68:	808003cc 	andi	r2,r16,15
 410cc6c:	10800120 	cmpeqi	r2,r2,4
 410cc70:	1000041e 	bne	r2,zero,410cc84 <__subdf3+0x180>
 410cc74:	80800104 	addi	r2,r16,4
 410cc78:	1421803a 	cmpltu	r16,r2,r16
 410cc7c:	2409883a 	add	r4,r4,r16
 410cc80:	1021883a 	mov	r16,r2
 410cc84:	2080202c 	andhi	r2,r4,128
 410cc88:	10006e26 	beq	r2,zero,410ce44 <__subdf3+0x340>
 410cc8c:	90c00044 	addi	r3,r18,1
 410cc90:	1881ffe0 	cmpeqi	r2,r3,2047
 410cc94:	18c1ffcc 	andi	r3,r3,2047
 410cc98:	1000801e 	bne	r2,zero,410ce9c <__subdf3+0x398>
 410cc9c:	00bfe034 	movhi	r2,65408
 410cca0:	10bfffc4 	addi	r2,r2,-1
 410cca4:	2088703a 	and	r4,r4,r2
 410cca8:	2004977a 	slli	r2,r4,29
 410ccac:	2008927a 	slli	r4,r4,9
 410ccb0:	8020d0fa 	srli	r16,r16,3
 410ccb4:	2008d33a 	srli	r4,r4,12
 410ccb8:	1404b03a 	or	r2,r2,r16
 410ccbc:	1806953a 	slli	r3,r3,20
 410ccc0:	882297fa 	slli	r17,r17,31
 410ccc4:	1906b03a 	or	r3,r3,r4
 410ccc8:	1c46b03a 	or	r3,r3,r17
 410cccc:	dfc00417 	ldw	ra,16(sp)
 410ccd0:	dcc00317 	ldw	r19,12(sp)
 410ccd4:	dc800217 	ldw	r18,8(sp)
 410ccd8:	dc400117 	ldw	r17,4(sp)
 410ccdc:	dc000017 	ldw	r16,0(sp)
 410cce0:	dec00504 	addi	sp,sp,20
 410cce4:	f800283a 	ret
 410cce8:	18002c26 	beq	r3,zero,410cd9c <__subdf3+0x298>
 410ccec:	4487c83a 	sub	r3,r8,r18
 410ccf0:	5823883a 	mov	r17,r11
 410ccf4:	9000bb1e 	bne	r18,zero,410cfe4 <__subdf3+0x4e0>
 410ccf8:	4b84b03a 	or	r2,r9,r14
 410ccfc:	10011726 	beq	r2,zero,410d15c <__subdf3+0x658>
 410cd00:	18bfffc4 	addi	r2,r3,-1
 410cd04:	10016326 	beq	r2,zero,410d294 <__subdf3+0x790>
 410cd08:	18c1ffd8 	cmpnei	r3,r3,2047
 410cd0c:	18012c26 	beq	r3,zero,410d1c0 <__subdf3+0x6bc>
 410cd10:	1007883a 	mov	r3,r2
 410cd14:	0000b506 	br	410cfec <__subdf3+0x4e8>
 410cd18:	7b44b03a 	or	r2,r15,r13
 410cd1c:	103f9626 	beq	r2,zero,410cb78 <__subdf3+0x74>
 410cd20:	3ac03fcc 	andi	r11,r7,255
 410cd24:	29c07d26 	beq	r5,r7,410cf1c <__subdf3+0x418>
 410cd28:	00ffef0e 	bge	zero,r3,410cce8 <__subdf3+0x1e4>
 410cd2c:	9081ffd8 	cmpnei	r2,r18,2047
 410cd30:	10005e26 	beq	r2,zero,410ceac <__subdf3+0x3a8>
 410cd34:	18800e48 	cmpgei	r2,r3,57
 410cd38:	7bc02034 	orhi	r15,r15,128
 410cd3c:	103f9b26 	beq	r2,zero,410cbac <__subdf3+0xa8>
 410cd40:	7b60b03a 	or	r16,r15,r13
 410cd44:	8020c03a 	cmpne	r16,r16,zero
 410cd48:	003fa406 	br	410cbdc <__subdf3+0xd8>
 410cd4c:	00c0730e 	bge	zero,r3,410cf1c <__subdf3+0x418>
 410cd50:	40002626 	beq	r8,zero,410cdec <__subdf3+0x2e8>
 410cd54:	9081ffd8 	cmpnei	r2,r18,2047
 410cd58:	10005426 	beq	r2,zero,410ceac <__subdf3+0x3a8>
 410cd5c:	7bc02034 	orhi	r15,r15,128
 410cd60:	18800e48 	cmpgei	r2,r3,57
 410cd64:	1000431e 	bne	r2,zero,410ce74 <__subdf3+0x370>
 410cd68:	18800808 	cmpgei	r2,r3,32
 410cd6c:	1000de26 	beq	r2,zero,410d0e8 <__subdf3+0x5e4>
 410cd70:	1c3ff804 	addi	r16,r3,-32
 410cd74:	18800820 	cmpeqi	r2,r3,32
 410cd78:	7c0ad83a 	srl	r5,r15,r16
 410cd7c:	1000041e 	bne	r2,zero,410cd90 <__subdf3+0x28c>
 410cd80:	00801004 	movi	r2,64
 410cd84:	10c5c83a 	sub	r2,r2,r3
 410cd88:	7884983a 	sll	r2,r15,r2
 410cd8c:	689ab03a 	or	r13,r13,r2
 410cd90:	6820c03a 	cmpne	r16,r13,zero
 410cd94:	8160b03a 	or	r16,r16,r5
 410cd98:	00003806 	br	410ce7c <__subdf3+0x378>
 410cd9c:	90800044 	addi	r2,r18,1
 410cda0:	1081ff8c 	andi	r2,r2,2046
 410cda4:	1000a01e 	bne	r2,zero,410d028 <__subdf3+0x524>
 410cda8:	4b8ab03a 	or	r5,r9,r14
 410cdac:	7b44b03a 	or	r2,r15,r13
 410cdb0:	9000f11e 	bne	r18,zero,410d178 <__subdf3+0x674>
 410cdb4:	28012e26 	beq	r5,zero,410d270 <__subdf3+0x76c>
 410cdb8:	10010e26 	beq	r2,zero,410d1f4 <__subdf3+0x6f0>
 410cdbc:	7361c83a 	sub	r16,r14,r13
 410cdc0:	7405803a 	cmpltu	r2,r14,r16
 410cdc4:	4bc9c83a 	sub	r4,r9,r15
 410cdc8:	2089c83a 	sub	r4,r4,r2
 410cdcc:	2080202c 	andhi	r2,r4,128
 410cdd0:	10016d26 	beq	r2,zero,410d388 <__subdf3+0x884>
 410cdd4:	6ba1c83a 	sub	r16,r13,r14
 410cdd8:	7a49c83a 	sub	r4,r15,r9
 410cddc:	6c1b803a 	cmpltu	r13,r13,r16
 410cde0:	2349c83a 	sub	r4,r4,r13
 410cde4:	5823883a 	mov	r17,r11
 410cde8:	003f9d06 	br	410cc60 <__subdf3+0x15c>
 410cdec:	7b44b03a 	or	r2,r15,r13
 410cdf0:	10006226 	beq	r2,zero,410cf7c <__subdf3+0x478>
 410cdf4:	18bfffc4 	addi	r2,r3,-1
 410cdf8:	1000e926 	beq	r2,zero,410d1a0 <__subdf3+0x69c>
 410cdfc:	18c1ffd8 	cmpnei	r3,r3,2047
 410ce00:	18012a26 	beq	r3,zero,410d2ac <__subdf3+0x7a8>
 410ce04:	1007883a 	mov	r3,r2
 410ce08:	003fd506 	br	410cd60 <__subdf3+0x25c>
 410ce0c:	18fff844 	addi	r3,r3,-31
 410ce10:	28800820 	cmpeqi	r2,r5,32
 410ce14:	20c6d83a 	srl	r3,r4,r3
 410ce18:	1000041e 	bne	r2,zero,410ce2c <__subdf3+0x328>
 410ce1c:	00801004 	movi	r2,64
 410ce20:	114bc83a 	sub	r5,r2,r5
 410ce24:	2148983a 	sll	r4,r4,r5
 410ce28:	8120b03a 	or	r16,r16,r4
 410ce2c:	8020c03a 	cmpne	r16,r16,zero
 410ce30:	80e0b03a 	or	r16,r16,r3
 410ce34:	0009883a 	mov	r4,zero
 410ce38:	0025883a 	mov	r18,zero
 410ce3c:	808001cc 	andi	r2,r16,7
 410ce40:	103f891e 	bne	r2,zero,410cc68 <__subdf3+0x164>
 410ce44:	8020d0fa 	srli	r16,r16,3
 410ce48:	2004977a 	slli	r2,r4,29
 410ce4c:	2012d0fa 	srli	r9,r4,3
 410ce50:	9007883a 	mov	r3,r18
 410ce54:	8084b03a 	or	r2,r16,r2
 410ce58:	1901ffe0 	cmpeqi	r4,r3,2047
 410ce5c:	2000191e 	bne	r4,zero,410cec4 <__subdf3+0x3c0>
 410ce60:	01000434 	movhi	r4,16
 410ce64:	213fffc4 	addi	r4,r4,-1
 410ce68:	4908703a 	and	r4,r9,r4
 410ce6c:	18c1ffcc 	andi	r3,r3,2047
 410ce70:	003f9206 	br	410ccbc <__subdf3+0x1b8>
 410ce74:	7b60b03a 	or	r16,r15,r13
 410ce78:	8020c03a 	cmpne	r16,r16,zero
 410ce7c:	83a1883a 	add	r16,r16,r14
 410ce80:	8389803a 	cmpltu	r4,r16,r14
 410ce84:	2249883a 	add	r4,r4,r9
 410ce88:	2080202c 	andhi	r2,r4,128
 410ce8c:	103feb26 	beq	r2,zero,410ce3c <__subdf3+0x338>
 410ce90:	94800044 	addi	r18,r18,1
 410ce94:	9081ffe0 	cmpeqi	r2,r18,2047
 410ce98:	10006f26 	beq	r2,zero,410d058 <__subdf3+0x554>
 410ce9c:	00c1ffc4 	movi	r3,2047
 410cea0:	0009883a 	mov	r4,zero
 410cea4:	0005883a 	mov	r2,zero
 410cea8:	003f8406 	br	410ccbc <__subdf3+0x1b8>
 410ceac:	4806977a 	slli	r3,r9,29
 410ceb0:	00880034 	movhi	r2,8192
 410ceb4:	10bfffc4 	addi	r2,r2,-1
 410ceb8:	4812d0fa 	srli	r9,r9,3
 410cebc:	2088703a 	and	r4,r4,r2
 410cec0:	20c4b03a 	or	r2,r4,r3
 410cec4:	4886b03a 	or	r3,r9,r2
 410cec8:	18013726 	beq	r3,zero,410d3a8 <__subdf3+0x8a4>
 410cecc:	00c00434 	movhi	r3,16
 410ced0:	18ffffc4 	addi	r3,r3,-1
 410ced4:	49000234 	orhi	r4,r9,8
 410ced8:	20c8703a 	and	r4,r4,r3
 410cedc:	00c1ffc4 	movi	r3,2047
 410cee0:	003f7606 	br	410ccbc <__subdf3+0x1b8>
 410cee4:	8009883a 	mov	r4,r16
 410cee8:	410d5d40 	call	410d5d4 <__clzsi2>
 410ceec:	10c00604 	addi	r3,r2,24
 410cef0:	19000808 	cmpgei	r4,r3,32
 410cef4:	203f4526 	beq	r4,zero,410cc0c <__subdf3+0x108>
 410cef8:	113ffe04 	addi	r4,r2,-8
 410cefc:	8108983a 	sll	r4,r16,r4
 410cf00:	0021883a 	mov	r16,zero
 410cf04:	1cbf480e 	bge	r3,r18,410cc28 <__subdf3+0x124>
 410cf08:	00bfe034 	movhi	r2,65408
 410cf0c:	10bfffc4 	addi	r2,r2,-1
 410cf10:	90e5c83a 	sub	r18,r18,r3
 410cf14:	2088703a 	and	r4,r4,r2
 410cf18:	003f5106 	br	410cc60 <__subdf3+0x15c>
 410cf1c:	18001e26 	beq	r3,zero,410cf98 <__subdf3+0x494>
 410cf20:	4487c83a 	sub	r3,r8,r18
 410cf24:	90006826 	beq	r18,zero,410d0c8 <__subdf3+0x5c4>
 410cf28:	5000a526 	beq	r10,zero,410d1c0 <__subdf3+0x6bc>
 410cf2c:	4a402034 	orhi	r9,r9,128
 410cf30:	18800e48 	cmpgei	r2,r3,57
 410cf34:	1000b61e 	bne	r2,zero,410d210 <__subdf3+0x70c>
 410cf38:	18800808 	cmpgei	r2,r3,32
 410cf3c:	1001021e 	bne	r2,zero,410d348 <__subdf3+0x844>
 410cf40:	00800804 	movi	r2,32
 410cf44:	10c5c83a 	sub	r2,r2,r3
 410cf48:	48a0983a 	sll	r16,r9,r2
 410cf4c:	70c8d83a 	srl	r4,r14,r3
 410cf50:	7084983a 	sll	r2,r14,r2
 410cf54:	48d2d83a 	srl	r9,r9,r3
 410cf58:	8120b03a 	or	r16,r16,r4
 410cf5c:	1004c03a 	cmpne	r2,r2,zero
 410cf60:	80a0b03a 	or	r16,r16,r2
 410cf64:	7a5f883a 	add	r15,r15,r9
 410cf68:	8361883a 	add	r16,r16,r13
 410cf6c:	8349803a 	cmpltu	r4,r16,r13
 410cf70:	23c9883a 	add	r4,r4,r15
 410cf74:	4025883a 	mov	r18,r8
 410cf78:	003fc306 	br	410ce88 <__subdf3+0x384>
 410cf7c:	480a977a 	slli	r5,r9,29
 410cf80:	00880034 	movhi	r2,8192
 410cf84:	10bfffc4 	addi	r2,r2,-1
 410cf88:	2088703a 	and	r4,r4,r2
 410cf8c:	4812d0fa 	srli	r9,r9,3
 410cf90:	2144b03a 	or	r2,r4,r5
 410cf94:	003fb006 	br	410ce58 <__subdf3+0x354>
 410cf98:	90800044 	addi	r2,r18,1
 410cf9c:	1141ff8c 	andi	r5,r2,2046
 410cfa0:	28005c1e 	bne	r5,zero,410d114 <__subdf3+0x610>
 410cfa4:	4b84b03a 	or	r2,r9,r14
 410cfa8:	9000a71e 	bne	r18,zero,410d248 <__subdf3+0x744>
 410cfac:	1000df26 	beq	r2,zero,410d32c <__subdf3+0x828>
 410cfb0:	7b44b03a 	or	r2,r15,r13
 410cfb4:	10008f26 	beq	r2,zero,410d1f4 <__subdf3+0x6f0>
 410cfb8:	7361883a 	add	r16,r14,r13
 410cfbc:	4bc9883a 	add	r4,r9,r15
 410cfc0:	839d803a 	cmpltu	r14,r16,r14
 410cfc4:	2389883a 	add	r4,r4,r14
 410cfc8:	2080202c 	andhi	r2,r4,128
 410cfcc:	103f9b26 	beq	r2,zero,410ce3c <__subdf3+0x338>
 410cfd0:	00bfe034 	movhi	r2,65408
 410cfd4:	10bfffc4 	addi	r2,r2,-1
 410cfd8:	2088703a 	and	r4,r4,r2
 410cfdc:	04800044 	movi	r18,1
 410cfe0:	003f9606 	br	410ce3c <__subdf3+0x338>
 410cfe4:	50007626 	beq	r10,zero,410d1c0 <__subdf3+0x6bc>
 410cfe8:	4a402034 	orhi	r9,r9,128
 410cfec:	18800e48 	cmpgei	r2,r3,57
 410cff0:	10002e1e 	bne	r2,zero,410d0ac <__subdf3+0x5a8>
 410cff4:	18800808 	cmpgei	r2,r3,32
 410cff8:	1000881e 	bne	r2,zero,410d21c <__subdf3+0x718>
 410cffc:	00800804 	movi	r2,32
 410d000:	10c5c83a 	sub	r2,r2,r3
 410d004:	48a0983a 	sll	r16,r9,r2
 410d008:	70c8d83a 	srl	r4,r14,r3
 410d00c:	709c983a 	sll	r14,r14,r2
 410d010:	48d2d83a 	srl	r9,r9,r3
 410d014:	8120b03a 	or	r16,r16,r4
 410d018:	701cc03a 	cmpne	r14,r14,zero
 410d01c:	83a0b03a 	or	r16,r16,r14
 410d020:	7a5fc83a 	sub	r15,r15,r9
 410d024:	00002306 	br	410d0b4 <__subdf3+0x5b0>
 410d028:	7361c83a 	sub	r16,r14,r13
 410d02c:	4be7c83a 	sub	r19,r9,r15
 410d030:	7409803a 	cmpltu	r4,r14,r16
 410d034:	9927c83a 	sub	r19,r19,r4
 410d038:	9880202c 	andhi	r2,r19,128
 410d03c:	1000411e 	bne	r2,zero,410d144 <__subdf3+0x640>
 410d040:	84c4b03a 	or	r2,r16,r19
 410d044:	103eed1e 	bne	r2,zero,410cbfc <__subdf3+0xf8>
 410d048:	0013883a 	mov	r9,zero
 410d04c:	0023883a 	mov	r17,zero
 410d050:	003f8306 	br	410ce60 <__subdf3+0x35c>
 410d054:	04800084 	movi	r18,2
 410d058:	00bfe034 	movhi	r2,65408
 410d05c:	10bfffc4 	addi	r2,r2,-1
 410d060:	8006d07a 	srli	r3,r16,1
 410d064:	2088703a 	and	r4,r4,r2
 410d068:	200497fa 	slli	r2,r4,31
 410d06c:	8400004c 	andi	r16,r16,1
 410d070:	1c20b03a 	or	r16,r3,r16
 410d074:	2008d07a 	srli	r4,r4,1
 410d078:	1420b03a 	or	r16,r2,r16
 410d07c:	003ef806 	br	410cc60 <__subdf3+0x15c>
 410d080:	1c3ff804 	addi	r16,r3,-32
 410d084:	18800820 	cmpeqi	r2,r3,32
 410d088:	7c0ad83a 	srl	r5,r15,r16
 410d08c:	1000041e 	bne	r2,zero,410d0a0 <__subdf3+0x59c>
 410d090:	00801004 	movi	r2,64
 410d094:	10c5c83a 	sub	r2,r2,r3
 410d098:	7884983a 	sll	r2,r15,r2
 410d09c:	689ab03a 	or	r13,r13,r2
 410d0a0:	6820c03a 	cmpne	r16,r13,zero
 410d0a4:	8160b03a 	or	r16,r16,r5
 410d0a8:	003ecc06 	br	410cbdc <__subdf3+0xd8>
 410d0ac:	4b92b03a 	or	r9,r9,r14
 410d0b0:	4820c03a 	cmpne	r16,r9,zero
 410d0b4:	6c21c83a 	sub	r16,r13,r16
 410d0b8:	6c09803a 	cmpltu	r4,r13,r16
 410d0bc:	7909c83a 	sub	r4,r15,r4
 410d0c0:	4025883a 	mov	r18,r8
 410d0c4:	003ec806 	br	410cbe8 <__subdf3+0xe4>
 410d0c8:	4b84b03a 	or	r2,r9,r14
 410d0cc:	10007e26 	beq	r2,zero,410d2c8 <__subdf3+0x7c4>
 410d0d0:	18bfffc4 	addi	r2,r3,-1
 410d0d4:	1000a726 	beq	r2,zero,410d374 <__subdf3+0x870>
 410d0d8:	18c1ffd8 	cmpnei	r3,r3,2047
 410d0dc:	18003826 	beq	r3,zero,410d1c0 <__subdf3+0x6bc>
 410d0e0:	1007883a 	mov	r3,r2
 410d0e4:	003f9206 	br	410cf30 <__subdf3+0x42c>
 410d0e8:	00800804 	movi	r2,32
 410d0ec:	10c5c83a 	sub	r2,r2,r3
 410d0f0:	78a0983a 	sll	r16,r15,r2
 410d0f4:	68c8d83a 	srl	r4,r13,r3
 410d0f8:	689a983a 	sll	r13,r13,r2
 410d0fc:	78c4d83a 	srl	r2,r15,r3
 410d100:	8120b03a 	or	r16,r16,r4
 410d104:	681ac03a 	cmpne	r13,r13,zero
 410d108:	8360b03a 	or	r16,r16,r13
 410d10c:	4893883a 	add	r9,r9,r2
 410d110:	003f5a06 	br	410ce7c <__subdf3+0x378>
 410d114:	10c1ffe0 	cmpeqi	r3,r2,2047
 410d118:	183f601e 	bne	r3,zero,410ce9c <__subdf3+0x398>
 410d11c:	735b883a 	add	r13,r14,r13
 410d120:	6b9d803a 	cmpltu	r14,r13,r14
 410d124:	4bc9883a 	add	r4,r9,r15
 410d128:	2389883a 	add	r4,r4,r14
 410d12c:	202097fa 	slli	r16,r4,31
 410d130:	681ad07a 	srli	r13,r13,1
 410d134:	2008d07a 	srli	r4,r4,1
 410d138:	1025883a 	mov	r18,r2
 410d13c:	8360b03a 	or	r16,r16,r13
 410d140:	003f3e06 	br	410ce3c <__subdf3+0x338>
 410d144:	6ba1c83a 	sub	r16,r13,r14
 410d148:	7a49c83a 	sub	r4,r15,r9
 410d14c:	6c1b803a 	cmpltu	r13,r13,r16
 410d150:	2367c83a 	sub	r19,r4,r13
 410d154:	5823883a 	mov	r17,r11
 410d158:	003ea806 	br	410cbfc <__subdf3+0xf8>
 410d15c:	7808977a 	slli	r4,r15,29
 410d160:	00880034 	movhi	r2,8192
 410d164:	10bfffc4 	addi	r2,r2,-1
 410d168:	308c703a 	and	r6,r6,r2
 410d16c:	7812d0fa 	srli	r9,r15,3
 410d170:	3104b03a 	or	r2,r6,r4
 410d174:	003f3806 	br	410ce58 <__subdf3+0x354>
 410d178:	28005a1e 	bne	r5,zero,410d2e4 <__subdf3+0x7e0>
 410d17c:	10008526 	beq	r2,zero,410d394 <__subdf3+0x890>
 410d180:	7806977a 	slli	r3,r15,29
 410d184:	00880034 	movhi	r2,8192
 410d188:	10bfffc4 	addi	r2,r2,-1
 410d18c:	3084703a 	and	r2,r6,r2
 410d190:	7812d0fa 	srli	r9,r15,3
 410d194:	10c4b03a 	or	r2,r2,r3
 410d198:	5823883a 	mov	r17,r11
 410d19c:	003f4906 	br	410cec4 <__subdf3+0x3c0>
 410d1a0:	7361883a 	add	r16,r14,r13
 410d1a4:	4bc9883a 	add	r4,r9,r15
 410d1a8:	839d803a 	cmpltu	r14,r16,r14
 410d1ac:	2389883a 	add	r4,r4,r14
 410d1b0:	2080202c 	andhi	r2,r4,128
 410d1b4:	103fa71e 	bne	r2,zero,410d054 <__subdf3+0x550>
 410d1b8:	04800044 	movi	r18,1
 410d1bc:	003f1f06 	br	410ce3c <__subdf3+0x338>
 410d1c0:	7806977a 	slli	r3,r15,29
 410d1c4:	00880034 	movhi	r2,8192
 410d1c8:	10bfffc4 	addi	r2,r2,-1
 410d1cc:	3084703a 	and	r2,r6,r2
 410d1d0:	7812d0fa 	srli	r9,r15,3
 410d1d4:	10c4b03a 	or	r2,r2,r3
 410d1d8:	003f3a06 	br	410cec4 <__subdf3+0x3c0>
 410d1dc:	7361c83a 	sub	r16,r14,r13
 410d1e0:	4bc9c83a 	sub	r4,r9,r15
 410d1e4:	741d803a 	cmpltu	r14,r14,r16
 410d1e8:	2389c83a 	sub	r4,r4,r14
 410d1ec:	04800044 	movi	r18,1
 410d1f0:	003e7d06 	br	410cbe8 <__subdf3+0xe4>
 410d1f4:	480a977a 	slli	r5,r9,29
 410d1f8:	00880034 	movhi	r2,8192
 410d1fc:	10bfffc4 	addi	r2,r2,-1
 410d200:	2084703a 	and	r2,r4,r2
 410d204:	4812d0fa 	srli	r9,r9,3
 410d208:	1144b03a 	or	r2,r2,r5
 410d20c:	003f1406 	br	410ce60 <__subdf3+0x35c>
 410d210:	4b92b03a 	or	r9,r9,r14
 410d214:	4820c03a 	cmpne	r16,r9,zero
 410d218:	003f5306 	br	410cf68 <__subdf3+0x464>
 410d21c:	1c3ff804 	addi	r16,r3,-32
 410d220:	19000820 	cmpeqi	r4,r3,32
 410d224:	4c04d83a 	srl	r2,r9,r16
 410d228:	2000041e 	bne	r4,zero,410d23c <__subdf3+0x738>
 410d22c:	01001004 	movi	r4,64
 410d230:	20c7c83a 	sub	r3,r4,r3
 410d234:	48d2983a 	sll	r9,r9,r3
 410d238:	725cb03a 	or	r14,r14,r9
 410d23c:	7020c03a 	cmpne	r16,r14,zero
 410d240:	80a0b03a 	or	r16,r16,r2
 410d244:	003f9b06 	br	410d0b4 <__subdf3+0x5b0>
 410d248:	103fdd26 	beq	r2,zero,410d1c0 <__subdf3+0x6bc>
 410d24c:	7b5ab03a 	or	r13,r15,r13
 410d250:	480a977a 	slli	r5,r9,29
 410d254:	4812d0fa 	srli	r9,r9,3
 410d258:	6800251e 	bne	r13,zero,410d2f0 <__subdf3+0x7ec>
 410d25c:	00880034 	movhi	r2,8192
 410d260:	10bfffc4 	addi	r2,r2,-1
 410d264:	2084703a 	and	r2,r4,r2
 410d268:	1144b03a 	or	r2,r2,r5
 410d26c:	003f1506 	br	410cec4 <__subdf3+0x3c0>
 410d270:	103f7526 	beq	r2,zero,410d048 <__subdf3+0x544>
 410d274:	7808977a 	slli	r4,r15,29
 410d278:	00880034 	movhi	r2,8192
 410d27c:	10bfffc4 	addi	r2,r2,-1
 410d280:	3084703a 	and	r2,r6,r2
 410d284:	7812d0fa 	srli	r9,r15,3
 410d288:	1104b03a 	or	r2,r2,r4
 410d28c:	5823883a 	mov	r17,r11
 410d290:	003ef306 	br	410ce60 <__subdf3+0x35c>
 410d294:	6ba1c83a 	sub	r16,r13,r14
 410d298:	7a49c83a 	sub	r4,r15,r9
 410d29c:	6c1b803a 	cmpltu	r13,r13,r16
 410d2a0:	2349c83a 	sub	r4,r4,r13
 410d2a4:	04800044 	movi	r18,1
 410d2a8:	003e4f06 	br	410cbe8 <__subdf3+0xe4>
 410d2ac:	4806977a 	slli	r3,r9,29
 410d2b0:	00880034 	movhi	r2,8192
 410d2b4:	10bfffc4 	addi	r2,r2,-1
 410d2b8:	2084703a 	and	r2,r4,r2
 410d2bc:	4812d0fa 	srli	r9,r9,3
 410d2c0:	10c4b03a 	or	r2,r2,r3
 410d2c4:	003eff06 	br	410cec4 <__subdf3+0x3c0>
 410d2c8:	7808977a 	slli	r4,r15,29
 410d2cc:	00880034 	movhi	r2,8192
 410d2d0:	10bfffc4 	addi	r2,r2,-1
 410d2d4:	3084703a 	and	r2,r6,r2
 410d2d8:	7812d0fa 	srli	r9,r15,3
 410d2dc:	1104b03a 	or	r2,r2,r4
 410d2e0:	003edd06 	br	410ce58 <__subdf3+0x354>
 410d2e4:	480a977a 	slli	r5,r9,29
 410d2e8:	4812d0fa 	srli	r9,r9,3
 410d2ec:	103fdb26 	beq	r2,zero,410d25c <__subdf3+0x758>
 410d2f0:	00c80034 	movhi	r3,8192
 410d2f4:	18ffffc4 	addi	r3,r3,-1
 410d2f8:	20c4703a 	and	r2,r4,r3
 410d2fc:	4900022c 	andhi	r4,r9,8
 410d300:	1144b03a 	or	r2,r2,r5
 410d304:	203eef26 	beq	r4,zero,410cec4 <__subdf3+0x3c0>
 410d308:	7808d0fa 	srli	r4,r15,3
 410d30c:	2140022c 	andhi	r5,r4,8
 410d310:	283eec1e 	bne	r5,zero,410cec4 <__subdf3+0x3c0>
 410d314:	7804977a 	slli	r2,r15,29
 410d318:	30cc703a 	and	r6,r6,r3
 410d31c:	5823883a 	mov	r17,r11
 410d320:	3084b03a 	or	r2,r6,r2
 410d324:	2013883a 	mov	r9,r4
 410d328:	003ee606 	br	410cec4 <__subdf3+0x3c0>
 410d32c:	7808977a 	slli	r4,r15,29
 410d330:	00880034 	movhi	r2,8192
 410d334:	10bfffc4 	addi	r2,r2,-1
 410d338:	3084703a 	and	r2,r6,r2
 410d33c:	7812d0fa 	srli	r9,r15,3
 410d340:	1104b03a 	or	r2,r2,r4
 410d344:	003ec606 	br	410ce60 <__subdf3+0x35c>
 410d348:	18bff804 	addi	r2,r3,-32
 410d34c:	19000820 	cmpeqi	r4,r3,32
 410d350:	4884d83a 	srl	r2,r9,r2
 410d354:	2000041e 	bne	r4,zero,410d368 <__subdf3+0x864>
 410d358:	01001004 	movi	r4,64
 410d35c:	20c7c83a 	sub	r3,r4,r3
 410d360:	48d2983a 	sll	r9,r9,r3
 410d364:	725cb03a 	or	r14,r14,r9
 410d368:	7020c03a 	cmpne	r16,r14,zero
 410d36c:	80a0b03a 	or	r16,r16,r2
 410d370:	003efd06 	br	410cf68 <__subdf3+0x464>
 410d374:	7361883a 	add	r16,r14,r13
 410d378:	4bc9883a 	add	r4,r9,r15
 410d37c:	835b803a 	cmpltu	r13,r16,r13
 410d380:	2349883a 	add	r4,r4,r13
 410d384:	003f8a06 	br	410d1b0 <__subdf3+0x6ac>
 410d388:	8104b03a 	or	r2,r16,r4
 410d38c:	103f2e26 	beq	r2,zero,410d048 <__subdf3+0x544>
 410d390:	003eaa06 	br	410ce3c <__subdf3+0x338>
 410d394:	02400434 	movhi	r9,16
 410d398:	0023883a 	mov	r17,zero
 410d39c:	00bfffc4 	movi	r2,-1
 410d3a0:	4a7fffc4 	addi	r9,r9,-1
 410d3a4:	003ec906 	br	410cecc <__subdf3+0x3c8>
 410d3a8:	0005883a 	mov	r2,zero
 410d3ac:	00c1ffc4 	movi	r3,2047
 410d3b0:	0009883a 	mov	r4,zero
 410d3b4:	003e4106 	br	410ccbc <__subdf3+0x1b8>

0410d3b8 <__unorddf2>:
 410d3b8:	2806d53a 	srli	r3,r5,20
 410d3bc:	3810d53a 	srli	r8,r7,20
 410d3c0:	02400434 	movhi	r9,16
 410d3c4:	18c1ffcc 	andi	r3,r3,2047
 410d3c8:	4a7fffc4 	addi	r9,r9,-1
 410d3cc:	18c1ffd8 	cmpnei	r3,r3,2047
 410d3d0:	2a4a703a 	and	r5,r5,r9
 410d3d4:	3a4e703a 	and	r7,r7,r9
 410d3d8:	4201ffcc 	andi	r8,r8,2047
 410d3dc:	18000426 	beq	r3,zero,410d3f0 <__unorddf2+0x38>
 410d3e0:	4201ffd8 	cmpnei	r8,r8,2047
 410d3e4:	40000626 	beq	r8,zero,410d400 <__unorddf2+0x48>
 410d3e8:	0005883a 	mov	r2,zero
 410d3ec:	f800283a 	ret
 410d3f0:	290ab03a 	or	r5,r5,r4
 410d3f4:	283ffa26 	beq	r5,zero,410d3e0 <__unorddf2+0x28>
 410d3f8:	00800044 	movi	r2,1
 410d3fc:	f800283a 	ret
 410d400:	398eb03a 	or	r7,r7,r6
 410d404:	3804c03a 	cmpne	r2,r7,zero
 410d408:	f800283a 	ret

0410d40c <__fixdfsi>:
 410d40c:	2806d53a 	srli	r3,r5,20
 410d410:	01800434 	movhi	r6,16
 410d414:	31bfffc4 	addi	r6,r6,-1
 410d418:	18c1ffcc 	andi	r3,r3,2047
 410d41c:	19c0ffd0 	cmplti	r7,r3,1023
 410d420:	2810d7fa 	srli	r8,r5,31
 410d424:	298a703a 	and	r5,r5,r6
 410d428:	3800061e 	bne	r7,zero,410d444 <__fixdfsi+0x38>
 410d42c:	18810790 	cmplti	r2,r3,1054
 410d430:	1000061e 	bne	r2,zero,410d44c <__fixdfsi+0x40>
 410d434:	00a00034 	movhi	r2,32768
 410d438:	10bfffc4 	addi	r2,r2,-1
 410d43c:	4085883a 	add	r2,r8,r2
 410d440:	f800283a 	ret
 410d444:	0005883a 	mov	r2,zero
 410d448:	f800283a 	ret
 410d44c:	01810cc4 	movi	r6,1075
 410d450:	30cdc83a 	sub	r6,r6,r3
 410d454:	30800808 	cmpgei	r2,r6,32
 410d458:	29400434 	orhi	r5,r5,16
 410d45c:	1000071e 	bne	r2,zero,410d47c <__fixdfsi+0x70>
 410d460:	18befb44 	addi	r2,r3,-1043
 410d464:	2884983a 	sll	r2,r5,r2
 410d468:	2188d83a 	srl	r4,r4,r6
 410d46c:	1104b03a 	or	r2,r2,r4
 410d470:	403ff526 	beq	r8,zero,410d448 <__fixdfsi+0x3c>
 410d474:	0085c83a 	sub	r2,zero,r2
 410d478:	f800283a 	ret
 410d47c:	008104c4 	movi	r2,1043
 410d480:	10c5c83a 	sub	r2,r2,r3
 410d484:	2884d83a 	srl	r2,r5,r2
 410d488:	003ff906 	br	410d470 <__fixdfsi+0x64>

0410d48c <__floatsidf>:
 410d48c:	defffd04 	addi	sp,sp,-12
 410d490:	dfc00215 	stw	ra,8(sp)
 410d494:	dc400115 	stw	r17,4(sp)
 410d498:	dc000015 	stw	r16,0(sp)
 410d49c:	20001326 	beq	r4,zero,410d4ec <__floatsidf+0x60>
 410d4a0:	2022d7fa 	srli	r17,r4,31
 410d4a4:	2021883a 	mov	r16,r4
 410d4a8:	20002416 	blt	r4,zero,410d53c <__floatsidf+0xb0>
 410d4ac:	8009883a 	mov	r4,r16
 410d4b0:	410d5d40 	call	410d5d4 <__clzsi2>
 410d4b4:	01010784 	movi	r4,1054
 410d4b8:	2089c83a 	sub	r4,r4,r2
 410d4bc:	114002c8 	cmpgei	r5,r2,11
 410d4c0:	20c1ffcc 	andi	r3,r4,2047
 410d4c4:	2800161e 	bne	r5,zero,410d520 <__floatsidf+0x94>
 410d4c8:	010002c4 	movi	r4,11
 410d4cc:	2089c83a 	sub	r4,r4,r2
 410d4d0:	810ad83a 	srl	r5,r16,r4
 410d4d4:	01000434 	movhi	r4,16
 410d4d8:	10800544 	addi	r2,r2,21
 410d4dc:	213fffc4 	addi	r4,r4,-1
 410d4e0:	8084983a 	sll	r2,r16,r2
 410d4e4:	290a703a 	and	r5,r5,r4
 410d4e8:	00000406 	br	410d4fc <__floatsidf+0x70>
 410d4ec:	0023883a 	mov	r17,zero
 410d4f0:	0007883a 	mov	r3,zero
 410d4f4:	000b883a 	mov	r5,zero
 410d4f8:	0005883a 	mov	r2,zero
 410d4fc:	1808953a 	slli	r4,r3,20
 410d500:	880697fa 	slli	r3,r17,31
 410d504:	2148b03a 	or	r4,r4,r5
 410d508:	20c6b03a 	or	r3,r4,r3
 410d50c:	dfc00217 	ldw	ra,8(sp)
 410d510:	dc400117 	ldw	r17,4(sp)
 410d514:	dc000017 	ldw	r16,0(sp)
 410d518:	dec00304 	addi	sp,sp,12
 410d51c:	f800283a 	ret
 410d520:	10bffd44 	addi	r2,r2,-11
 410d524:	808a983a 	sll	r5,r16,r2
 410d528:	00800434 	movhi	r2,16
 410d52c:	10bfffc4 	addi	r2,r2,-1
 410d530:	288a703a 	and	r5,r5,r2
 410d534:	0005883a 	mov	r2,zero
 410d538:	003ff006 	br	410d4fc <__floatsidf+0x70>
 410d53c:	0121c83a 	sub	r16,zero,r4
 410d540:	003fda06 	br	410d4ac <__floatsidf+0x20>

0410d544 <__floatunsidf>:
 410d544:	defffe04 	addi	sp,sp,-8
 410d548:	dc000015 	stw	r16,0(sp)
 410d54c:	dfc00115 	stw	ra,4(sp)
 410d550:	2021883a 	mov	r16,r4
 410d554:	20000f26 	beq	r4,zero,410d594 <__floatunsidf+0x50>
 410d558:	410d5d40 	call	410d5d4 <__clzsi2>
 410d55c:	00c10784 	movi	r3,1054
 410d560:	1887c83a 	sub	r3,r3,r2
 410d564:	110002c8 	cmpgei	r4,r2,11
 410d568:	18c1ffcc 	andi	r3,r3,2047
 410d56c:	2000121e 	bne	r4,zero,410d5b8 <__floatunsidf+0x74>
 410d570:	014002c4 	movi	r5,11
 410d574:	288bc83a 	sub	r5,r5,r2
 410d578:	814ad83a 	srl	r5,r16,r5
 410d57c:	01000434 	movhi	r4,16
 410d580:	10800544 	addi	r2,r2,21
 410d584:	213fffc4 	addi	r4,r4,-1
 410d588:	80a0983a 	sll	r16,r16,r2
 410d58c:	290a703a 	and	r5,r5,r4
 410d590:	00000206 	br	410d59c <__floatunsidf+0x58>
 410d594:	0007883a 	mov	r3,zero
 410d598:	000b883a 	mov	r5,zero
 410d59c:	1806953a 	slli	r3,r3,20
 410d5a0:	8005883a 	mov	r2,r16
 410d5a4:	1946b03a 	or	r3,r3,r5
 410d5a8:	dfc00117 	ldw	ra,4(sp)
 410d5ac:	dc000017 	ldw	r16,0(sp)
 410d5b0:	dec00204 	addi	sp,sp,8
 410d5b4:	f800283a 	ret
 410d5b8:	117ffd44 	addi	r5,r2,-11
 410d5bc:	814a983a 	sll	r5,r16,r5
 410d5c0:	00800434 	movhi	r2,16
 410d5c4:	10bfffc4 	addi	r2,r2,-1
 410d5c8:	288a703a 	and	r5,r5,r2
 410d5cc:	0021883a 	mov	r16,zero
 410d5d0:	003ff206 	br	410d59c <__floatunsidf+0x58>

0410d5d4 <__clzsi2>:
 410d5d4:	00bfffd4 	movui	r2,65535
 410d5d8:	11000436 	bltu	r2,r4,410d5ec <__clzsi2+0x18>
 410d5dc:	20804030 	cmpltui	r2,r4,256
 410d5e0:	10000e26 	beq	r2,zero,410d61c <__clzsi2+0x48>
 410d5e4:	01400804 	movi	r5,32
 410d5e8:	00000406 	br	410d5fc <__clzsi2+0x28>
 410d5ec:	00804034 	movhi	r2,256
 410d5f0:	20800736 	bltu	r4,r2,410d610 <__clzsi2+0x3c>
 410d5f4:	2008d63a 	srli	r4,r4,24
 410d5f8:	01400204 	movi	r5,8
 410d5fc:	00c10474 	movhi	r3,1041
 410d600:	20c7883a 	add	r3,r4,r3
 410d604:	18846303 	ldbu	r2,4492(r3)
 410d608:	2885c83a 	sub	r2,r5,r2
 410d60c:	f800283a 	ret
 410d610:	2008d43a 	srli	r4,r4,16
 410d614:	01400404 	movi	r5,16
 410d618:	003ff806 	br	410d5fc <__clzsi2+0x28>
 410d61c:	2008d23a 	srli	r4,r4,8
 410d620:	01400604 	movi	r5,24
 410d624:	003ff506 	br	410d5fc <__clzsi2+0x28>

0410d628 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 410d628:	defffe04 	addi	sp,sp,-8
 410d62c:	dfc00115 	stw	ra,4(sp)
 410d630:	df000015 	stw	fp,0(sp)
 410d634:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 410d638:	d0a00917 	ldw	r2,-32732(gp)
 410d63c:	10000326 	beq	r2,zero,410d64c <alt_get_errno+0x24>
 410d640:	d0a00917 	ldw	r2,-32732(gp)
 410d644:	103ee83a 	callr	r2
 410d648:	00000106 	br	410d650 <alt_get_errno+0x28>
 410d64c:	d0a74304 	addi	r2,gp,-25332
}
 410d650:	e037883a 	mov	sp,fp
 410d654:	dfc00117 	ldw	ra,4(sp)
 410d658:	df000017 	ldw	fp,0(sp)
 410d65c:	dec00204 	addi	sp,sp,8
 410d660:	f800283a 	ret

0410d664 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 410d664:	defffb04 	addi	sp,sp,-20
 410d668:	dfc00415 	stw	ra,16(sp)
 410d66c:	df000315 	stw	fp,12(sp)
 410d670:	df000304 	addi	fp,sp,12
 410d674:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 410d678:	e0bffd17 	ldw	r2,-12(fp)
 410d67c:	10000916 	blt	r2,zero,410d6a4 <close+0x40>
 410d680:	e0fffd17 	ldw	r3,-12(fp)
 410d684:	1805883a 	mov	r2,r3
 410d688:	1085883a 	add	r2,r2,r2
 410d68c:	10c5883a 	add	r2,r2,r3
 410d690:	100490ba 	slli	r2,r2,2
 410d694:	00c10474 	movhi	r3,1041
 410d698:	18c73404 	addi	r3,r3,7376
 410d69c:	10c5883a 	add	r2,r2,r3
 410d6a0:	00000106 	br	410d6a8 <close+0x44>
 410d6a4:	0005883a 	mov	r2,zero
 410d6a8:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
 410d6ac:	e0bfff17 	ldw	r2,-4(fp)
 410d6b0:	10001926 	beq	r2,zero,410d718 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 410d6b4:	e0bfff17 	ldw	r2,-4(fp)
 410d6b8:	10800017 	ldw	r2,0(r2)
 410d6bc:	10800417 	ldw	r2,16(r2)
 410d6c0:	10000626 	beq	r2,zero,410d6dc <close+0x78>
 410d6c4:	e0bfff17 	ldw	r2,-4(fp)
 410d6c8:	10800017 	ldw	r2,0(r2)
 410d6cc:	10800417 	ldw	r2,16(r2)
 410d6d0:	e13fff17 	ldw	r4,-4(fp)
 410d6d4:	103ee83a 	callr	r2
 410d6d8:	00000106 	br	410d6e0 <close+0x7c>
 410d6dc:	0005883a 	mov	r2,zero
 410d6e0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 410d6e4:	e13ffd17 	ldw	r4,-12(fp)
 410d6e8:	410df200 	call	410df20 <alt_release_fd>
    if (rval < 0)
 410d6ec:	e0bffe17 	ldw	r2,-8(fp)
 410d6f0:	1000070e 	bge	r2,zero,410d710 <close+0xac>
    {
      ALT_ERRNO = -rval;
 410d6f4:	410d6280 	call	410d628 <alt_get_errno>
 410d6f8:	1007883a 	mov	r3,r2
 410d6fc:	e0bffe17 	ldw	r2,-8(fp)
 410d700:	0085c83a 	sub	r2,zero,r2
 410d704:	18800015 	stw	r2,0(r3)
      return -1;
 410d708:	00bfffc4 	movi	r2,-1
 410d70c:	00000706 	br	410d72c <close+0xc8>
    }
    return 0;
 410d710:	0005883a 	mov	r2,zero
 410d714:	00000506 	br	410d72c <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 410d718:	410d6280 	call	410d628 <alt_get_errno>
 410d71c:	1007883a 	mov	r3,r2
 410d720:	00801444 	movi	r2,81
 410d724:	18800015 	stw	r2,0(r3)
    return -1;
 410d728:	00bfffc4 	movi	r2,-1
  }
}
 410d72c:	e037883a 	mov	sp,fp
 410d730:	dfc00117 	ldw	ra,4(sp)
 410d734:	df000017 	ldw	fp,0(sp)
 410d738:	dec00204 	addi	sp,sp,8
 410d73c:	f800283a 	ret

0410d740 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 410d740:	defffc04 	addi	sp,sp,-16
 410d744:	df000315 	stw	fp,12(sp)
 410d748:	df000304 	addi	fp,sp,12
 410d74c:	e13fff15 	stw	r4,-4(fp)
 410d750:	e17ffe15 	stw	r5,-8(fp)
 410d754:	e1bffd15 	stw	r6,-12(fp)
  return len;
 410d758:	e0bffd17 	ldw	r2,-12(fp)
}
 410d75c:	e037883a 	mov	sp,fp
 410d760:	df000017 	ldw	fp,0(sp)
 410d764:	dec00104 	addi	sp,sp,4
 410d768:	f800283a 	ret

0410d76c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 410d76c:	defffd04 	addi	sp,sp,-12
 410d770:	df000215 	stw	fp,8(sp)
 410d774:	df000204 	addi	fp,sp,8
 410d778:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 410d77c:	0001883a 	nop
 410d780:	e0bffe17 	ldw	r2,-8(fp)
 410d784:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 410d788:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 410d78c:	10000226 	beq	r2,zero,410d798 <_exit+0x2c>
    ALT_SIM_FAIL();
 410d790:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
 410d794:	00000106 	br	410d79c <_exit+0x30>
    ALT_SIM_PASS();
 410d798:	002af0b0 	cmpltui	zero,zero,43970
}
 410d79c:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 410d7a0:	003fff06 	br	410d7a0 <_exit+0x34>

0410d7a4 <alt_get_errno>:
{
 410d7a4:	defffe04 	addi	sp,sp,-8
 410d7a8:	dfc00115 	stw	ra,4(sp)
 410d7ac:	df000015 	stw	fp,0(sp)
 410d7b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 410d7b4:	d0a00917 	ldw	r2,-32732(gp)
 410d7b8:	10000326 	beq	r2,zero,410d7c8 <alt_get_errno+0x24>
 410d7bc:	d0a00917 	ldw	r2,-32732(gp)
 410d7c0:	103ee83a 	callr	r2
 410d7c4:	00000106 	br	410d7cc <alt_get_errno+0x28>
 410d7c8:	d0a74304 	addi	r2,gp,-25332
}
 410d7cc:	e037883a 	mov	sp,fp
 410d7d0:	dfc00117 	ldw	ra,4(sp)
 410d7d4:	df000017 	ldw	fp,0(sp)
 410d7d8:	dec00204 	addi	sp,sp,8
 410d7dc:	f800283a 	ret

0410d7e0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 410d7e0:	defffb04 	addi	sp,sp,-20
 410d7e4:	dfc00415 	stw	ra,16(sp)
 410d7e8:	df000315 	stw	fp,12(sp)
 410d7ec:	df000304 	addi	fp,sp,12
 410d7f0:	e13ffe15 	stw	r4,-8(fp)
 410d7f4:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 410d7f8:	e0bffe17 	ldw	r2,-8(fp)
 410d7fc:	10000916 	blt	r2,zero,410d824 <fstat+0x44>
 410d800:	e0fffe17 	ldw	r3,-8(fp)
 410d804:	1805883a 	mov	r2,r3
 410d808:	1085883a 	add	r2,r2,r2
 410d80c:	10c5883a 	add	r2,r2,r3
 410d810:	100490ba 	slli	r2,r2,2
 410d814:	00c10474 	movhi	r3,1041
 410d818:	18c73404 	addi	r3,r3,7376
 410d81c:	10c5883a 	add	r2,r2,r3
 410d820:	00000106 	br	410d828 <fstat+0x48>
 410d824:	0005883a 	mov	r2,zero
 410d828:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 410d82c:	e0bfff17 	ldw	r2,-4(fp)
 410d830:	10001026 	beq	r2,zero,410d874 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 410d834:	e0bfff17 	ldw	r2,-4(fp)
 410d838:	10800017 	ldw	r2,0(r2)
 410d83c:	10800817 	ldw	r2,32(r2)
 410d840:	10000726 	beq	r2,zero,410d860 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
 410d844:	e0bfff17 	ldw	r2,-4(fp)
 410d848:	10800017 	ldw	r2,0(r2)
 410d84c:	10800817 	ldw	r2,32(r2)
 410d850:	e17ffd17 	ldw	r5,-12(fp)
 410d854:	e13fff17 	ldw	r4,-4(fp)
 410d858:	103ee83a 	callr	r2
 410d85c:	00000a06 	br	410d888 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 410d860:	e0bffd17 	ldw	r2,-12(fp)
 410d864:	00c80004 	movi	r3,8192
 410d868:	10c00115 	stw	r3,4(r2)
      return 0;
 410d86c:	0005883a 	mov	r2,zero
 410d870:	00000506 	br	410d888 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 410d874:	410d7a40 	call	410d7a4 <alt_get_errno>
 410d878:	1007883a 	mov	r3,r2
 410d87c:	00801444 	movi	r2,81
 410d880:	18800015 	stw	r2,0(r3)
    return -1;
 410d884:	00bfffc4 	movi	r2,-1
  }
}
 410d888:	e037883a 	mov	sp,fp
 410d88c:	dfc00117 	ldw	ra,4(sp)
 410d890:	df000017 	ldw	fp,0(sp)
 410d894:	dec00204 	addi	sp,sp,8
 410d898:	f800283a 	ret

0410d89c <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 410d89c:	deffff04 	addi	sp,sp,-4
 410d8a0:	df000015 	stw	fp,0(sp)
 410d8a4:	d839883a 	mov	fp,sp
  return 0;
 410d8a8:	0005883a 	mov	r2,zero
}
 410d8ac:	e037883a 	mov	sp,fp
 410d8b0:	df000017 	ldw	fp,0(sp)
 410d8b4:	dec00104 	addi	sp,sp,4
 410d8b8:	f800283a 	ret

0410d8bc <alt_get_errno>:
{
 410d8bc:	defffe04 	addi	sp,sp,-8
 410d8c0:	dfc00115 	stw	ra,4(sp)
 410d8c4:	df000015 	stw	fp,0(sp)
 410d8c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 410d8cc:	d0a00917 	ldw	r2,-32732(gp)
 410d8d0:	10000326 	beq	r2,zero,410d8e0 <alt_get_errno+0x24>
 410d8d4:	d0a00917 	ldw	r2,-32732(gp)
 410d8d8:	103ee83a 	callr	r2
 410d8dc:	00000106 	br	410d8e4 <alt_get_errno+0x28>
 410d8e0:	d0a74304 	addi	r2,gp,-25332
}
 410d8e4:	e037883a 	mov	sp,fp
 410d8e8:	dfc00117 	ldw	ra,4(sp)
 410d8ec:	df000017 	ldw	fp,0(sp)
 410d8f0:	dec00204 	addi	sp,sp,8
 410d8f4:	f800283a 	ret

0410d8f8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 410d8f8:	deffea04 	addi	sp,sp,-88
 410d8fc:	dfc01515 	stw	ra,84(sp)
 410d900:	df001415 	stw	fp,80(sp)
 410d904:	df001404 	addi	fp,sp,80
 410d908:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 410d90c:	e0bfec17 	ldw	r2,-80(fp)
 410d910:	10000916 	blt	r2,zero,410d938 <isatty+0x40>
 410d914:	e0ffec17 	ldw	r3,-80(fp)
 410d918:	1805883a 	mov	r2,r3
 410d91c:	1085883a 	add	r2,r2,r2
 410d920:	10c5883a 	add	r2,r2,r3
 410d924:	100490ba 	slli	r2,r2,2
 410d928:	00c10474 	movhi	r3,1041
 410d92c:	18c73404 	addi	r3,r3,7376
 410d930:	10c5883a 	add	r2,r2,r3
 410d934:	00000106 	br	410d93c <isatty+0x44>
 410d938:	0005883a 	mov	r2,zero
 410d93c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 410d940:	e0bfff17 	ldw	r2,-4(fp)
 410d944:	10000e26 	beq	r2,zero,410d980 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 410d948:	e0bfff17 	ldw	r2,-4(fp)
 410d94c:	10800017 	ldw	r2,0(r2)
 410d950:	10800817 	ldw	r2,32(r2)
 410d954:	1000021e 	bne	r2,zero,410d960 <isatty+0x68>
    {
      return 1;
 410d958:	00800044 	movi	r2,1
 410d95c:	00000d06 	br	410d994 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 410d960:	e0bfed04 	addi	r2,fp,-76
 410d964:	100b883a 	mov	r5,r2
 410d968:	e13fec17 	ldw	r4,-80(fp)
 410d96c:	410d7e00 	call	410d7e0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 410d970:	e0bfee17 	ldw	r2,-72(fp)
 410d974:	10880020 	cmpeqi	r2,r2,8192
 410d978:	10803fcc 	andi	r2,r2,255
 410d97c:	00000506 	br	410d994 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 410d980:	410d8bc0 	call	410d8bc <alt_get_errno>
 410d984:	1007883a 	mov	r3,r2
 410d988:	00801444 	movi	r2,81
 410d98c:	18800015 	stw	r2,0(r3)
    return 0;
 410d990:	0005883a 	mov	r2,zero
  }
}
 410d994:	e037883a 	mov	sp,fp
 410d998:	dfc00117 	ldw	ra,4(sp)
 410d99c:	df000017 	ldw	fp,0(sp)
 410d9a0:	dec00204 	addi	sp,sp,8
 410d9a4:	f800283a 	ret

0410d9a8 <alt_get_errno>:
{
 410d9a8:	defffe04 	addi	sp,sp,-8
 410d9ac:	dfc00115 	stw	ra,4(sp)
 410d9b0:	df000015 	stw	fp,0(sp)
 410d9b4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 410d9b8:	d0a00917 	ldw	r2,-32732(gp)
 410d9bc:	10000326 	beq	r2,zero,410d9cc <alt_get_errno+0x24>
 410d9c0:	d0a00917 	ldw	r2,-32732(gp)
 410d9c4:	103ee83a 	callr	r2
 410d9c8:	00000106 	br	410d9d0 <alt_get_errno+0x28>
 410d9cc:	d0a74304 	addi	r2,gp,-25332
}
 410d9d0:	e037883a 	mov	sp,fp
 410d9d4:	dfc00117 	ldw	ra,4(sp)
 410d9d8:	df000017 	ldw	fp,0(sp)
 410d9dc:	dec00204 	addi	sp,sp,8
 410d9e0:	f800283a 	ret

0410d9e4 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 410d9e4:	defffb04 	addi	sp,sp,-20
 410d9e8:	dfc00415 	stw	ra,16(sp)
 410d9ec:	df000315 	stw	fp,12(sp)
 410d9f0:	df000304 	addi	fp,sp,12
 410d9f4:	e13ffe15 	stw	r4,-8(fp)
 410d9f8:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
 410d9fc:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
 410da00:	e0bffe17 	ldw	r2,-8(fp)
 410da04:	00802e16 	blt	zero,r2,410dac0 <kill+0xdc>
 410da08:	e0bffd17 	ldw	r2,-12(fp)
 410da0c:	10800828 	cmpgeui	r2,r2,32
 410da10:	1000281e 	bne	r2,zero,410dab4 <kill+0xd0>
 410da14:	e0bffd17 	ldw	r2,-12(fp)
 410da18:	100690ba 	slli	r3,r2,2
 410da1c:	00810474 	movhi	r2,1041
 410da20:	1885883a 	add	r2,r3,r2
 410da24:	10b68b17 	ldw	r2,-9684(r2)
 410da28:	1000683a 	jmp	r2
 410da2c:	0410dad4 	movui	r16,17259
 410da30:	0410dab4 	movhi	r16,17258
 410da34:	0410dab4 	movhi	r16,17258
 410da38:	0410daac 	andhi	r16,zero,17258
 410da3c:	0410daac 	andhi	r16,zero,17258
 410da40:	0410daac 	andhi	r16,zero,17258
 410da44:	0410daac 	andhi	r16,zero,17258
 410da48:	0410dab4 	movhi	r16,17258
 410da4c:	0410daac 	andhi	r16,zero,17258
 410da50:	0410daac 	andhi	r16,zero,17258
 410da54:	0410daac 	andhi	r16,zero,17258
 410da58:	0410daac 	andhi	r16,zero,17258
 410da5c:	0410daac 	andhi	r16,zero,17258
 410da60:	0410daac 	andhi	r16,zero,17258
 410da64:	0410daac 	andhi	r16,zero,17258
 410da68:	0410daac 	andhi	r16,zero,17258
 410da6c:	0410dad4 	movui	r16,17259
 410da70:	0410dab4 	movhi	r16,17258
 410da74:	0410dab4 	movhi	r16,17258
 410da78:	0410dab4 	movhi	r16,17258
 410da7c:	0410dad4 	movui	r16,17259
 410da80:	0410dab4 	movhi	r16,17258
 410da84:	0410dab4 	movhi	r16,17258
 410da88:	0410daac 	andhi	r16,zero,17258
 410da8c:	0410daac 	andhi	r16,zero,17258
 410da90:	0410daac 	andhi	r16,zero,17258
 410da94:	0410daac 	andhi	r16,zero,17258
 410da98:	0410daac 	andhi	r16,zero,17258
 410da9c:	0410dab4 	movhi	r16,17258
 410daa0:	0410dab4 	movhi	r16,17258
 410daa4:	0410daac 	andhi	r16,zero,17258
 410daa8:	0410daac 	andhi	r16,zero,17258
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 410daac:	0009883a 	mov	r4,zero
 410dab0:	410d76c0 	call	410d76c <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 410dab4:	00800584 	movi	r2,22
 410dab8:	e0bfff15 	stw	r2,-4(fp)
 410dabc:	00000606 	br	410dad8 <kill+0xf4>
    }
  }

  else if (pid > 0)
 410dac0:	e0bffe17 	ldw	r2,-8(fp)
 410dac4:	0080040e 	bge	zero,r2,410dad8 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 410dac8:	008000c4 	movi	r2,3
 410dacc:	e0bfff15 	stw	r2,-4(fp)
 410dad0:	00000106 	br	410dad8 <kill+0xf4>
      break;
 410dad4:	0001883a 	nop
  }

  if (status)
 410dad8:	e0bfff17 	ldw	r2,-4(fp)
 410dadc:	10000626 	beq	r2,zero,410daf8 <kill+0x114>
  {
    ALT_ERRNO = status;
 410dae0:	410d9a80 	call	410d9a8 <alt_get_errno>
 410dae4:	1007883a 	mov	r3,r2
 410dae8:	e0bfff17 	ldw	r2,-4(fp)
 410daec:	18800015 	stw	r2,0(r3)
    return -1;
 410daf0:	00bfffc4 	movi	r2,-1
 410daf4:	00000106 	br	410dafc <kill+0x118>
  }

  return 0;
 410daf8:	0005883a 	mov	r2,zero
}
 410dafc:	e037883a 	mov	sp,fp
 410db00:	dfc00117 	ldw	ra,4(sp)
 410db04:	df000017 	ldw	fp,0(sp)
 410db08:	dec00204 	addi	sp,sp,8
 410db0c:	f800283a 	ret

0410db10 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 410db10:	defffc04 	addi	sp,sp,-16
 410db14:	df000315 	stw	fp,12(sp)
 410db18:	df000304 	addi	fp,sp,12
 410db1c:	e13fff15 	stw	r4,-4(fp)
 410db20:	e17ffe15 	stw	r5,-8(fp)
 410db24:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
 410db28:	e0fffe17 	ldw	r3,-8(fp)
 410db2c:	e0bfff17 	ldw	r2,-4(fp)
 410db30:	18800c26 	beq	r3,r2,410db64 <alt_load_section+0x54>
  {
    while( to != end )
 410db34:	00000806 	br	410db58 <alt_load_section+0x48>
    {
      *to++ = *from++;
 410db38:	e0ffff17 	ldw	r3,-4(fp)
 410db3c:	18800104 	addi	r2,r3,4
 410db40:	e0bfff15 	stw	r2,-4(fp)
 410db44:	e0bffe17 	ldw	r2,-8(fp)
 410db48:	11000104 	addi	r4,r2,4
 410db4c:	e13ffe15 	stw	r4,-8(fp)
 410db50:	18c00017 	ldw	r3,0(r3)
 410db54:	10c00015 	stw	r3,0(r2)
    while( to != end )
 410db58:	e0fffe17 	ldw	r3,-8(fp)
 410db5c:	e0bffd17 	ldw	r2,-12(fp)
 410db60:	18bff51e 	bne	r3,r2,410db38 <alt_load_section+0x28>
    }
  }
}
 410db64:	0001883a 	nop
 410db68:	e037883a 	mov	sp,fp
 410db6c:	df000017 	ldw	fp,0(sp)
 410db70:	dec00104 	addi	sp,sp,4
 410db74:	f800283a 	ret

0410db78 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 410db78:	defffe04 	addi	sp,sp,-8
 410db7c:	dfc00115 	stw	ra,4(sp)
 410db80:	df000015 	stw	fp,0(sp)
 410db84:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 410db88:	01810474 	movhi	r6,1041
 410db8c:	318bee04 	addi	r6,r6,12216
 410db90:	01410474 	movhi	r5,1041
 410db94:	2944c404 	addi	r5,r5,4880
 410db98:	01010474 	movhi	r4,1041
 410db9c:	210bee04 	addi	r4,r4,12216
 410dba0:	410db100 	call	410db10 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 410dba4:	01810434 	movhi	r6,1040
 410dba8:	31808904 	addi	r6,r6,548
 410dbac:	01410434 	movhi	r5,1040
 410dbb0:	29400804 	addi	r5,r5,32
 410dbb4:	01010434 	movhi	r4,1040
 410dbb8:	21000804 	addi	r4,r4,32
 410dbbc:	410db100 	call	410db10 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 410dbc0:	01810474 	movhi	r6,1041
 410dbc4:	3184c404 	addi	r6,r6,4880
 410dbc8:	01410474 	movhi	r5,1041
 410dbcc:	29430304 	addi	r5,r5,3084
 410dbd0:	01010474 	movhi	r4,1041
 410dbd4:	21030304 	addi	r4,r4,3084
 410dbd8:	410db100 	call	410db10 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 410dbdc:	410fc980 	call	410fc98 <alt_dcache_flush_all>
  alt_icache_flush_all();
 410dbe0:	410fef40 	call	410fef4 <alt_icache_flush_all>
}
 410dbe4:	0001883a 	nop
 410dbe8:	e037883a 	mov	sp,fp
 410dbec:	dfc00117 	ldw	ra,4(sp)
 410dbf0:	df000017 	ldw	fp,0(sp)
 410dbf4:	dec00204 	addi	sp,sp,8
 410dbf8:	f800283a 	ret

0410dbfc <alt_get_errno>:
{
 410dbfc:	defffe04 	addi	sp,sp,-8
 410dc00:	dfc00115 	stw	ra,4(sp)
 410dc04:	df000015 	stw	fp,0(sp)
 410dc08:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 410dc0c:	d0a00917 	ldw	r2,-32732(gp)
 410dc10:	10000326 	beq	r2,zero,410dc20 <alt_get_errno+0x24>
 410dc14:	d0a00917 	ldw	r2,-32732(gp)
 410dc18:	103ee83a 	callr	r2
 410dc1c:	00000106 	br	410dc24 <alt_get_errno+0x28>
 410dc20:	d0a74304 	addi	r2,gp,-25332
}
 410dc24:	e037883a 	mov	sp,fp
 410dc28:	dfc00117 	ldw	ra,4(sp)
 410dc2c:	df000017 	ldw	fp,0(sp)
 410dc30:	dec00204 	addi	sp,sp,8
 410dc34:	f800283a 	ret

0410dc38 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 410dc38:	defff904 	addi	sp,sp,-28
 410dc3c:	dfc00615 	stw	ra,24(sp)
 410dc40:	df000515 	stw	fp,20(sp)
 410dc44:	df000504 	addi	fp,sp,20
 410dc48:	e13ffd15 	stw	r4,-12(fp)
 410dc4c:	e17ffc15 	stw	r5,-16(fp)
 410dc50:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 410dc54:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 410dc58:	e0bffd17 	ldw	r2,-12(fp)
 410dc5c:	10000916 	blt	r2,zero,410dc84 <lseek+0x4c>
 410dc60:	e0fffd17 	ldw	r3,-12(fp)
 410dc64:	1805883a 	mov	r2,r3
 410dc68:	1085883a 	add	r2,r2,r2
 410dc6c:	10c5883a 	add	r2,r2,r3
 410dc70:	100490ba 	slli	r2,r2,2
 410dc74:	00c10474 	movhi	r3,1041
 410dc78:	18c73404 	addi	r3,r3,7376
 410dc7c:	10c5883a 	add	r2,r2,r3
 410dc80:	00000106 	br	410dc88 <lseek+0x50>
 410dc84:	0005883a 	mov	r2,zero
 410dc88:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
 410dc8c:	e0bffe17 	ldw	r2,-8(fp)
 410dc90:	10001026 	beq	r2,zero,410dcd4 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 410dc94:	e0bffe17 	ldw	r2,-8(fp)
 410dc98:	10800017 	ldw	r2,0(r2)
 410dc9c:	10800717 	ldw	r2,28(r2)
 410dca0:	10000926 	beq	r2,zero,410dcc8 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 410dca4:	e0bffe17 	ldw	r2,-8(fp)
 410dca8:	10800017 	ldw	r2,0(r2)
 410dcac:	10800717 	ldw	r2,28(r2)
 410dcb0:	e1bffb17 	ldw	r6,-20(fp)
 410dcb4:	e17ffc17 	ldw	r5,-16(fp)
 410dcb8:	e13ffe17 	ldw	r4,-8(fp)
 410dcbc:	103ee83a 	callr	r2
 410dcc0:	e0bfff15 	stw	r2,-4(fp)
 410dcc4:	00000506 	br	410dcdc <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 410dcc8:	00bfde84 	movi	r2,-134
 410dccc:	e0bfff15 	stw	r2,-4(fp)
 410dcd0:	00000206 	br	410dcdc <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
 410dcd4:	00bfebc4 	movi	r2,-81
 410dcd8:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
 410dcdc:	e0bfff17 	ldw	r2,-4(fp)
 410dce0:	1000070e 	bge	r2,zero,410dd00 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
 410dce4:	410dbfc0 	call	410dbfc <alt_get_errno>
 410dce8:	1007883a 	mov	r3,r2
 410dcec:	e0bfff17 	ldw	r2,-4(fp)
 410dcf0:	0085c83a 	sub	r2,zero,r2
 410dcf4:	18800015 	stw	r2,0(r3)
    rc = -1;
 410dcf8:	00bfffc4 	movi	r2,-1
 410dcfc:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
 410dd00:	e0bfff17 	ldw	r2,-4(fp)
}
 410dd04:	e037883a 	mov	sp,fp
 410dd08:	dfc00117 	ldw	ra,4(sp)
 410dd0c:	df000017 	ldw	fp,0(sp)
 410dd10:	dec00204 	addi	sp,sp,8
 410dd14:	f800283a 	ret

0410dd18 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 410dd18:	defffd04 	addi	sp,sp,-12
 410dd1c:	dfc00215 	stw	ra,8(sp)
 410dd20:	df000115 	stw	fp,4(sp)
 410dd24:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 410dd28:	0009883a 	mov	r4,zero
 410dd2c:	410e2900 	call	410e290 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 410dd30:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 410dd34:	410e2cc0 	call	410e2cc <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 410dd38:	01810474 	movhi	r6,1041
 410dd3c:	3184a604 	addi	r6,r6,4760
 410dd40:	01410474 	movhi	r5,1041
 410dd44:	2944a604 	addi	r5,r5,4760
 410dd48:	01010474 	movhi	r4,1041
 410dd4c:	2104a604 	addi	r4,r4,4760
 410dd50:	41102800 	call	4110280 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 410dd54:	410fd9c0 	call	410fd9c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 410dd58:	01010474 	movhi	r4,1041
 410dd5c:	213f8004 	addi	r4,r4,-512
 410dd60:	411099c0 	call	411099c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 410dd64:	d0a74517 	ldw	r2,-25324(gp)
 410dd68:	d0e74617 	ldw	r3,-25320(gp)
 410dd6c:	d1274717 	ldw	r4,-25316(gp)
 410dd70:	200d883a 	mov	r6,r4
 410dd74:	180b883a 	mov	r5,r3
 410dd78:	1009883a 	mov	r4,r2
 410dd7c:	41002600 	call	4100260 <main>
 410dd80:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 410dd84:	01000044 	movi	r4,1
 410dd88:	410d6640 	call	410d664 <close>
  exit (result);
 410dd8c:	e13fff17 	ldw	r4,-4(fp)
 410dd90:	41109b00 	call	41109b0 <exit>

0410dd94 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 410dd94:	defffe04 	addi	sp,sp,-8
 410dd98:	df000115 	stw	fp,4(sp)
 410dd9c:	df000104 	addi	fp,sp,4
 410dda0:	e13fff15 	stw	r4,-4(fp)
}
 410dda4:	0001883a 	nop
 410dda8:	e037883a 	mov	sp,fp
 410ddac:	df000017 	ldw	fp,0(sp)
 410ddb0:	dec00104 	addi	sp,sp,4
 410ddb4:	f800283a 	ret

0410ddb8 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 410ddb8:	defffe04 	addi	sp,sp,-8
 410ddbc:	df000115 	stw	fp,4(sp)
 410ddc0:	df000104 	addi	fp,sp,4
 410ddc4:	e13fff15 	stw	r4,-4(fp)
}
 410ddc8:	0001883a 	nop
 410ddcc:	e037883a 	mov	sp,fp
 410ddd0:	df000017 	ldw	fp,0(sp)
 410ddd4:	dec00104 	addi	sp,sp,4
 410ddd8:	f800283a 	ret

0410dddc <alt_get_errno>:
{
 410dddc:	defffe04 	addi	sp,sp,-8
 410dde0:	dfc00115 	stw	ra,4(sp)
 410dde4:	df000015 	stw	fp,0(sp)
 410dde8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 410ddec:	d0a00917 	ldw	r2,-32732(gp)
 410ddf0:	10000326 	beq	r2,zero,410de00 <alt_get_errno+0x24>
 410ddf4:	d0a00917 	ldw	r2,-32732(gp)
 410ddf8:	103ee83a 	callr	r2
 410ddfc:	00000106 	br	410de04 <alt_get_errno+0x28>
 410de00:	d0a74304 	addi	r2,gp,-25332
}
 410de04:	e037883a 	mov	sp,fp
 410de08:	dfc00117 	ldw	ra,4(sp)
 410de0c:	df000017 	ldw	fp,0(sp)
 410de10:	dec00204 	addi	sp,sp,8
 410de14:	f800283a 	ret

0410de18 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 410de18:	defff904 	addi	sp,sp,-28
 410de1c:	dfc00615 	stw	ra,24(sp)
 410de20:	df000515 	stw	fp,20(sp)
 410de24:	df000504 	addi	fp,sp,20
 410de28:	e13ffd15 	stw	r4,-12(fp)
 410de2c:	e17ffc15 	stw	r5,-16(fp)
 410de30:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 410de34:	e0bffd17 	ldw	r2,-12(fp)
 410de38:	10000916 	blt	r2,zero,410de60 <read+0x48>
 410de3c:	e0fffd17 	ldw	r3,-12(fp)
 410de40:	1805883a 	mov	r2,r3
 410de44:	1085883a 	add	r2,r2,r2
 410de48:	10c5883a 	add	r2,r2,r3
 410de4c:	100490ba 	slli	r2,r2,2
 410de50:	00c10474 	movhi	r3,1041
 410de54:	18c73404 	addi	r3,r3,7376
 410de58:	10c5883a 	add	r2,r2,r3
 410de5c:	00000106 	br	410de64 <read+0x4c>
 410de60:	0005883a 	mov	r2,zero
 410de64:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 410de68:	e0bfff17 	ldw	r2,-4(fp)
 410de6c:	10002226 	beq	r2,zero,410def8 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 410de70:	e0bfff17 	ldw	r2,-4(fp)
 410de74:	10800217 	ldw	r2,8(r2)
 410de78:	108000cc 	andi	r2,r2,3
 410de7c:	10800060 	cmpeqi	r2,r2,1
 410de80:	1000181e 	bne	r2,zero,410dee4 <read+0xcc>
        (fd->dev->read))
 410de84:	e0bfff17 	ldw	r2,-4(fp)
 410de88:	10800017 	ldw	r2,0(r2)
 410de8c:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 410de90:	10001426 	beq	r2,zero,410dee4 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 410de94:	e0bfff17 	ldw	r2,-4(fp)
 410de98:	10800017 	ldw	r2,0(r2)
 410de9c:	10800517 	ldw	r2,20(r2)
 410dea0:	e0fffb17 	ldw	r3,-20(fp)
 410dea4:	180d883a 	mov	r6,r3
 410dea8:	e17ffc17 	ldw	r5,-16(fp)
 410deac:	e13fff17 	ldw	r4,-4(fp)
 410deb0:	103ee83a 	callr	r2
 410deb4:	e0bffe15 	stw	r2,-8(fp)
 410deb8:	e0bffe17 	ldw	r2,-8(fp)
 410debc:	1000070e 	bge	r2,zero,410dedc <read+0xc4>
        {
          ALT_ERRNO = -rval;
 410dec0:	410dddc0 	call	410dddc <alt_get_errno>
 410dec4:	1007883a 	mov	r3,r2
 410dec8:	e0bffe17 	ldw	r2,-8(fp)
 410decc:	0085c83a 	sub	r2,zero,r2
 410ded0:	18800015 	stw	r2,0(r3)
          return -1;
 410ded4:	00bfffc4 	movi	r2,-1
 410ded8:	00000c06 	br	410df0c <read+0xf4>
        }
        return rval;
 410dedc:	e0bffe17 	ldw	r2,-8(fp)
 410dee0:	00000a06 	br	410df0c <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
 410dee4:	410dddc0 	call	410dddc <alt_get_errno>
 410dee8:	1007883a 	mov	r3,r2
 410deec:	00800344 	movi	r2,13
 410def0:	18800015 	stw	r2,0(r3)
 410def4:	00000406 	br	410df08 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 410def8:	410dddc0 	call	410dddc <alt_get_errno>
 410defc:	1007883a 	mov	r3,r2
 410df00:	00801444 	movi	r2,81
 410df04:	18800015 	stw	r2,0(r3)
  }
  return -1;
 410df08:	00bfffc4 	movi	r2,-1
}
 410df0c:	e037883a 	mov	sp,fp
 410df10:	dfc00117 	ldw	ra,4(sp)
 410df14:	df000017 	ldw	fp,0(sp)
 410df18:	dec00204 	addi	sp,sp,8
 410df1c:	f800283a 	ret

0410df20 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 410df20:	defffe04 	addi	sp,sp,-8
 410df24:	df000115 	stw	fp,4(sp)
 410df28:	df000104 	addi	fp,sp,4
 410df2c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 410df30:	e0bfff17 	ldw	r2,-4(fp)
 410df34:	108000d0 	cmplti	r2,r2,3
 410df38:	1000101e 	bne	r2,zero,410df7c <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
 410df3c:	e0ffff17 	ldw	r3,-4(fp)
 410df40:	1805883a 	mov	r2,r3
 410df44:	1085883a 	add	r2,r2,r2
 410df48:	10c5883a 	add	r2,r2,r3
 410df4c:	100490ba 	slli	r2,r2,2
 410df50:	00c10474 	movhi	r3,1041
 410df54:	10c7883a 	add	r3,r2,r3
 410df58:	18073615 	stw	zero,7384(r3)
    alt_fd_list[fd].dev      = 0;
 410df5c:	e0ffff17 	ldw	r3,-4(fp)
 410df60:	1805883a 	mov	r2,r3
 410df64:	1085883a 	add	r2,r2,r2
 410df68:	10c5883a 	add	r2,r2,r3
 410df6c:	100490ba 	slli	r2,r2,2
 410df70:	00c10474 	movhi	r3,1041
 410df74:	10c7883a 	add	r3,r2,r3
 410df78:	18073415 	stw	zero,7376(r3)
  }
}
 410df7c:	0001883a 	nop
 410df80:	e037883a 	mov	sp,fp
 410df84:	df000017 	ldw	fp,0(sp)
 410df88:	dec00104 	addi	sp,sp,4
 410df8c:	f800283a 	ret

0410df90 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 410df90:	defff904 	addi	sp,sp,-28
 410df94:	df000615 	stw	fp,24(sp)
 410df98:	df000604 	addi	fp,sp,24
 410df9c:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
 410dfa0:	0005303a 	rdctl	r2,status
 410dfa4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 410dfa8:	e0fffd17 	ldw	r3,-12(fp)
 410dfac:	00bfff84 	movi	r2,-2
 410dfb0:	1884703a 	and	r2,r3,r2
 410dfb4:	1001703a 	wrctl	status,r2
  return context;
 410dfb8:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 410dfbc:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 410dfc0:	d0a00a17 	ldw	r2,-32728(gp)
 410dfc4:	10c000c4 	addi	r3,r2,3
 410dfc8:	00bfff04 	movi	r2,-4
 410dfcc:	1884703a 	and	r2,r3,r2
 410dfd0:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 410dfd4:	d0e00a17 	ldw	r3,-32728(gp)
 410dfd8:	e0bffa17 	ldw	r2,-24(fp)
 410dfdc:	1887883a 	add	r3,r3,r2
 410dfe0:	00814034 	movhi	r2,1280
 410dfe4:	10800004 	addi	r2,r2,0
 410dfe8:	10c0072e 	bgeu	r2,r3,410e008 <sbrk+0x78>
 410dfec:	e0bfff17 	ldw	r2,-4(fp)
 410dff0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 410dff4:	e0bffc17 	ldw	r2,-16(fp)
 410dff8:	1001703a 	wrctl	status,r2
}
 410dffc:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 410e000:	00bfffc4 	movi	r2,-1
 410e004:	00000c06 	br	410e038 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
 410e008:	d0a00a17 	ldw	r2,-32728(gp)
 410e00c:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
 410e010:	d0e00a17 	ldw	r3,-32728(gp)
 410e014:	e0bffa17 	ldw	r2,-24(fp)
 410e018:	1885883a 	add	r2,r3,r2
 410e01c:	d0a00a15 	stw	r2,-32728(gp)
 410e020:	e0bfff17 	ldw	r2,-4(fp)
 410e024:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
 410e028:	e0bffb17 	ldw	r2,-20(fp)
 410e02c:	1001703a 	wrctl	status,r2
}
 410e030:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 410e034:	e0bffe17 	ldw	r2,-8(fp)
} 
 410e038:	e037883a 	mov	sp,fp
 410e03c:	df000017 	ldw	fp,0(sp)
 410e040:	dec00104 	addi	sp,sp,4
 410e044:	f800283a 	ret

0410e048 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 410e048:	defffd04 	addi	sp,sp,-12
 410e04c:	dfc00215 	stw	ra,8(sp)
 410e050:	df000115 	stw	fp,4(sp)
 410e054:	df000104 	addi	fp,sp,4
 410e058:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 410e05c:	e13fff17 	ldw	r4,-4(fp)
 410e060:	410fb400 	call	410fb40 <alt_busy_sleep>
}
 410e064:	e037883a 	mov	sp,fp
 410e068:	dfc00117 	ldw	ra,4(sp)
 410e06c:	df000017 	ldw	fp,0(sp)
 410e070:	dec00204 	addi	sp,sp,8
 410e074:	f800283a 	ret

0410e078 <alt_get_errno>:
{
 410e078:	defffe04 	addi	sp,sp,-8
 410e07c:	dfc00115 	stw	ra,4(sp)
 410e080:	df000015 	stw	fp,0(sp)
 410e084:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 410e088:	d0a00917 	ldw	r2,-32732(gp)
 410e08c:	10000326 	beq	r2,zero,410e09c <alt_get_errno+0x24>
 410e090:	d0a00917 	ldw	r2,-32732(gp)
 410e094:	103ee83a 	callr	r2
 410e098:	00000106 	br	410e0a0 <alt_get_errno+0x28>
 410e09c:	d0a74304 	addi	r2,gp,-25332
}
 410e0a0:	e037883a 	mov	sp,fp
 410e0a4:	dfc00117 	ldw	ra,4(sp)
 410e0a8:	df000017 	ldw	fp,0(sp)
 410e0ac:	dec00204 	addi	sp,sp,8
 410e0b0:	f800283a 	ret

0410e0b4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 410e0b4:	defff904 	addi	sp,sp,-28
 410e0b8:	dfc00615 	stw	ra,24(sp)
 410e0bc:	df000515 	stw	fp,20(sp)
 410e0c0:	df000504 	addi	fp,sp,20
 410e0c4:	e13ffd15 	stw	r4,-12(fp)
 410e0c8:	e17ffc15 	stw	r5,-16(fp)
 410e0cc:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 410e0d0:	e0bffd17 	ldw	r2,-12(fp)
 410e0d4:	10000916 	blt	r2,zero,410e0fc <write+0x48>
 410e0d8:	e0fffd17 	ldw	r3,-12(fp)
 410e0dc:	1805883a 	mov	r2,r3
 410e0e0:	1085883a 	add	r2,r2,r2
 410e0e4:	10c5883a 	add	r2,r2,r3
 410e0e8:	100490ba 	slli	r2,r2,2
 410e0ec:	00c10474 	movhi	r3,1041
 410e0f0:	18c73404 	addi	r3,r3,7376
 410e0f4:	10c5883a 	add	r2,r2,r3
 410e0f8:	00000106 	br	410e100 <write+0x4c>
 410e0fc:	0005883a 	mov	r2,zero
 410e100:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 410e104:	e0bfff17 	ldw	r2,-4(fp)
 410e108:	10002126 	beq	r2,zero,410e190 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 410e10c:	e0bfff17 	ldw	r2,-4(fp)
 410e110:	10800217 	ldw	r2,8(r2)
 410e114:	108000cc 	andi	r2,r2,3
 410e118:	10001826 	beq	r2,zero,410e17c <write+0xc8>
 410e11c:	e0bfff17 	ldw	r2,-4(fp)
 410e120:	10800017 	ldw	r2,0(r2)
 410e124:	10800617 	ldw	r2,24(r2)
 410e128:	10001426 	beq	r2,zero,410e17c <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 410e12c:	e0bfff17 	ldw	r2,-4(fp)
 410e130:	10800017 	ldw	r2,0(r2)
 410e134:	10800617 	ldw	r2,24(r2)
 410e138:	e0fffb17 	ldw	r3,-20(fp)
 410e13c:	180d883a 	mov	r6,r3
 410e140:	e17ffc17 	ldw	r5,-16(fp)
 410e144:	e13fff17 	ldw	r4,-4(fp)
 410e148:	103ee83a 	callr	r2
 410e14c:	e0bffe15 	stw	r2,-8(fp)
 410e150:	e0bffe17 	ldw	r2,-8(fp)
 410e154:	1000070e 	bge	r2,zero,410e174 <write+0xc0>
      {
        ALT_ERRNO = -rval;
 410e158:	410e0780 	call	410e078 <alt_get_errno>
 410e15c:	1007883a 	mov	r3,r2
 410e160:	e0bffe17 	ldw	r2,-8(fp)
 410e164:	0085c83a 	sub	r2,zero,r2
 410e168:	18800015 	stw	r2,0(r3)
        return -1;
 410e16c:	00bfffc4 	movi	r2,-1
 410e170:	00000c06 	br	410e1a4 <write+0xf0>
      }
      return rval;
 410e174:	e0bffe17 	ldw	r2,-8(fp)
 410e178:	00000a06 	br	410e1a4 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
 410e17c:	410e0780 	call	410e078 <alt_get_errno>
 410e180:	1007883a 	mov	r3,r2
 410e184:	00800344 	movi	r2,13
 410e188:	18800015 	stw	r2,0(r3)
 410e18c:	00000406 	br	410e1a0 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 410e190:	410e0780 	call	410e078 <alt_get_errno>
 410e194:	1007883a 	mov	r3,r2
 410e198:	00801444 	movi	r2,81
 410e19c:	18800015 	stw	r2,0(r3)
  }
  return -1;
 410e1a0:	00bfffc4 	movi	r2,-1
}
 410e1a4:	e037883a 	mov	sp,fp
 410e1a8:	dfc00117 	ldw	ra,4(sp)
 410e1ac:	df000017 	ldw	fp,0(sp)
 410e1b0:	dec00204 	addi	sp,sp,8
 410e1b4:	f800283a 	ret

0410e1b8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 410e1b8:	defffd04 	addi	sp,sp,-12
 410e1bc:	dfc00215 	stw	ra,8(sp)
 410e1c0:	df000115 	stw	fp,4(sp)
 410e1c4:	df000104 	addi	fp,sp,4
 410e1c8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 410e1cc:	d1600604 	addi	r5,gp,-32744
 410e1d0:	e13fff17 	ldw	r4,-4(fp)
 410e1d4:	410fcf40 	call	410fcf4 <alt_dev_llist_insert>
}
 410e1d8:	e037883a 	mov	sp,fp
 410e1dc:	dfc00117 	ldw	ra,4(sp)
 410e1e0:	df000017 	ldw	fp,0(sp)
 410e1e4:	dec00204 	addi	sp,sp,8
 410e1e8:	f800283a 	ret

0410e1ec <alt_get_errno>:
{
 410e1ec:	defffe04 	addi	sp,sp,-8
 410e1f0:	dfc00115 	stw	ra,4(sp)
 410e1f4:	df000015 	stw	fp,0(sp)
 410e1f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 410e1fc:	d0a00917 	ldw	r2,-32732(gp)
 410e200:	10000326 	beq	r2,zero,410e210 <alt_get_errno+0x24>
 410e204:	d0a00917 	ldw	r2,-32732(gp)
 410e208:	103ee83a 	callr	r2
 410e20c:	00000106 	br	410e214 <alt_get_errno+0x28>
 410e210:	d0a74304 	addi	r2,gp,-25332
}
 410e214:	e037883a 	mov	sp,fp
 410e218:	dfc00117 	ldw	ra,4(sp)
 410e21c:	df000017 	ldw	fp,0(sp)
 410e220:	dec00204 	addi	sp,sp,8
 410e224:	f800283a 	ret

0410e228 <alt_avalon_mutex_reg>:
/*
 * Register a Mutex device
 */

static ALT_INLINE int alt_avalon_mutex_reg (alt_mutex_dev* dev)
{
 410e228:	defffc04 	addi	sp,sp,-16
 410e22c:	dfc00315 	stw	ra,12(sp)
 410e230:	df000215 	stw	fp,8(sp)
 410e234:	df000204 	addi	fp,sp,8
 410e238:	e13ffe15 	stw	r4,-8(fp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
 410e23c:	0005883a 	mov	r2,zero
  int ret_code;
  extern alt_llist alt_mutex_list;
  ret_code = ALT_SEM_CREATE (&dev->lock, 1);
 410e240:	e0bfff15 	stw	r2,-4(fp)
  if (!ret_code)
 410e244:	e0bfff17 	ldw	r2,-4(fp)
 410e248:	1000051e 	bne	r2,zero,410e260 <alt_avalon_mutex_reg+0x38>
  {
    ret_code = alt_dev_llist_insert((alt_dev_llist*) dev, &alt_mutex_list);
 410e24c:	d1600d04 	addi	r5,gp,-32716
 410e250:	e13ffe17 	ldw	r4,-8(fp)
 410e254:	410fcf40 	call	410fcf4 <alt_dev_llist_insert>
 410e258:	e0bfff15 	stw	r2,-4(fp)
 410e25c:	00000606 	br	410e278 <alt_avalon_mutex_reg+0x50>
  }
  else
  {
    ALT_ERRNO = ENOMEM;
 410e260:	410e1ec0 	call	410e1ec <alt_get_errno>
 410e264:	1007883a 	mov	r3,r2
 410e268:	00800304 	movi	r2,12
 410e26c:	18800015 	stw	r2,0(r3)
    ret_code = -ENOMEM;
 410e270:	00bffd04 	movi	r2,-12
 410e274:	e0bfff15 	stw	r2,-4(fp)
  }

  return ret_code;
 410e278:	e0bfff17 	ldw	r2,-4(fp)
}
 410e27c:	e037883a 	mov	sp,fp
 410e280:	dfc00117 	ldw	ra,4(sp)
 410e284:	df000017 	ldw	fp,0(sp)
 410e288:	dec00204 	addi	sp,sp,8
 410e28c:	f800283a 	ret

0410e290 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 410e290:	defffd04 	addi	sp,sp,-12
 410e294:	dfc00215 	stw	ra,8(sp)
 410e298:	df000115 	stw	fp,4(sp)
 410e29c:	df000104 	addi	fp,sp,4
 410e2a0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_1, nios2_gen2_1);
 410e2a4:	41107200 	call	4110720 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 410e2a8:	00800044 	movi	r2,1
 410e2ac:	1001703a 	wrctl	status,r2
}
 410e2b0:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
 410e2b4:	0001883a 	nop
 410e2b8:	e037883a 	mov	sp,fp
 410e2bc:	dfc00117 	ldw	ra,4(sp)
 410e2c0:	df000017 	ldw	fp,0(sp)
 410e2c4:	dec00204 	addi	sp,sp,8
 410e2c8:	f800283a 	ret

0410e2cc <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 410e2cc:	defffe04 	addi	sp,sp,-8
 410e2d0:	dfc00115 	stw	ra,4(sp)
 410e2d4:	df000015 	stw	fp,0(sp)
 410e2d8:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 410e2dc:	000d883a 	mov	r6,zero
 410e2e0:	000b883a 	mov	r5,zero
 410e2e4:	01010474 	movhi	r4,1041
 410e2e8:	21079e04 	addi	r4,r4,7800
 410e2ec:	410e4c80 	call	410e4c8 <altera_avalon_jtag_uart_init>
 410e2f0:	01010474 	movhi	r4,1041
 410e2f4:	21079404 	addi	r4,r4,7760
 410e2f8:	410e1b80 	call	410e1b8 <alt_dev_reg>
    ALTERA_AVALON_MAILBOX_SIMPLE_INIT ( MAILBOX_1, mailbox_1);
 410e2fc:	01bfffc4 	movi	r6,-1
 410e300:	000b883a 	mov	r5,zero
 410e304:	01010474 	movhi	r4,1041
 410e308:	210bac04 	addi	r4,r4,11952
 410e30c:	410f0c40 	call	410f0c4 <altera_avalon_mailbox_simple_init>
    ALTERA_AVALON_MAILBOX_SIMPLE_INIT ( MAILBOX_4, mailbox_4);
 410e310:	01bfffc4 	movi	r6,-1
 410e314:	000b883a 	mov	r5,zero
 410e318:	01010474 	movhi	r4,1041
 410e31c:	210bbe04 	addi	r4,r4,12024
 410e320:	410f0c40 	call	410f0c4 <altera_avalon_mailbox_simple_init>
    ALTERA_AVALON_MUTEX_INIT ( MUTEX_0, mutex_0);
 410e324:	01010474 	movhi	r4,1041
 410e328:	210bd004 	addi	r4,r4,12096
 410e32c:	410e2280 	call	410e228 <alt_avalon_mutex_reg>
    ALTERA_AVALON_MUTEX_INIT ( MUTEX_1, mutex_1);
 410e330:	01010474 	movhi	r4,1041
 410e334:	210bd404 	addi	r4,r4,12112
 410e338:	410e2280 	call	410e228 <alt_avalon_mutex_reg>
    ALTERA_AVALON_MUTEX_INIT ( MUTEX_2, mutex_2);
 410e33c:	01010474 	movhi	r4,1041
 410e340:	210bd804 	addi	r4,r4,12128
 410e344:	410e2280 	call	410e228 <alt_avalon_mutex_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
 410e348:	0001883a 	nop
}
 410e34c:	0001883a 	nop
 410e350:	e037883a 	mov	sp,fp
 410e354:	dfc00117 	ldw	ra,4(sp)
 410e358:	df000017 	ldw	fp,0(sp)
 410e35c:	dec00204 	addi	sp,sp,8
 410e360:	f800283a 	ret

0410e364 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 410e364:	defffa04 	addi	sp,sp,-24
 410e368:	dfc00515 	stw	ra,20(sp)
 410e36c:	df000415 	stw	fp,16(sp)
 410e370:	df000404 	addi	fp,sp,16
 410e374:	e13ffe15 	stw	r4,-8(fp)
 410e378:	e17ffd15 	stw	r5,-12(fp)
 410e37c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 410e380:	e0bffe17 	ldw	r2,-8(fp)
 410e384:	10800017 	ldw	r2,0(r2)
 410e388:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 410e38c:	e0bfff17 	ldw	r2,-4(fp)
 410e390:	10c00a04 	addi	r3,r2,40
 410e394:	e0bffe17 	ldw	r2,-8(fp)
 410e398:	10800217 	ldw	r2,8(r2)
 410e39c:	100f883a 	mov	r7,r2
 410e3a0:	e1bffc17 	ldw	r6,-16(fp)
 410e3a4:	e17ffd17 	ldw	r5,-12(fp)
 410e3a8:	1809883a 	mov	r4,r3
 410e3ac:	410e9900 	call	410e990 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 410e3b0:	e037883a 	mov	sp,fp
 410e3b4:	dfc00117 	ldw	ra,4(sp)
 410e3b8:	df000017 	ldw	fp,0(sp)
 410e3bc:	dec00204 	addi	sp,sp,8
 410e3c0:	f800283a 	ret

0410e3c4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 410e3c4:	defffa04 	addi	sp,sp,-24
 410e3c8:	dfc00515 	stw	ra,20(sp)
 410e3cc:	df000415 	stw	fp,16(sp)
 410e3d0:	df000404 	addi	fp,sp,16
 410e3d4:	e13ffe15 	stw	r4,-8(fp)
 410e3d8:	e17ffd15 	stw	r5,-12(fp)
 410e3dc:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 410e3e0:	e0bffe17 	ldw	r2,-8(fp)
 410e3e4:	10800017 	ldw	r2,0(r2)
 410e3e8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 410e3ec:	e0bfff17 	ldw	r2,-4(fp)
 410e3f0:	10c00a04 	addi	r3,r2,40
 410e3f4:	e0bffe17 	ldw	r2,-8(fp)
 410e3f8:	10800217 	ldw	r2,8(r2)
 410e3fc:	100f883a 	mov	r7,r2
 410e400:	e1bffc17 	ldw	r6,-16(fp)
 410e404:	e17ffd17 	ldw	r5,-12(fp)
 410e408:	1809883a 	mov	r4,r3
 410e40c:	410ebb00 	call	410ebb0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 410e410:	e037883a 	mov	sp,fp
 410e414:	dfc00117 	ldw	ra,4(sp)
 410e418:	df000017 	ldw	fp,0(sp)
 410e41c:	dec00204 	addi	sp,sp,8
 410e420:	f800283a 	ret

0410e424 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 410e424:	defffc04 	addi	sp,sp,-16
 410e428:	dfc00315 	stw	ra,12(sp)
 410e42c:	df000215 	stw	fp,8(sp)
 410e430:	df000204 	addi	fp,sp,8
 410e434:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 410e438:	e0bffe17 	ldw	r2,-8(fp)
 410e43c:	10800017 	ldw	r2,0(r2)
 410e440:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 410e444:	e0bfff17 	ldw	r2,-4(fp)
 410e448:	10c00a04 	addi	r3,r2,40
 410e44c:	e0bffe17 	ldw	r2,-8(fp)
 410e450:	10800217 	ldw	r2,8(r2)
 410e454:	100b883a 	mov	r5,r2
 410e458:	1809883a 	mov	r4,r3
 410e45c:	410e8340 	call	410e834 <altera_avalon_jtag_uart_close>
}
 410e460:	e037883a 	mov	sp,fp
 410e464:	dfc00117 	ldw	ra,4(sp)
 410e468:	df000017 	ldw	fp,0(sp)
 410e46c:	dec00204 	addi	sp,sp,8
 410e470:	f800283a 	ret

0410e474 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 410e474:	defffa04 	addi	sp,sp,-24
 410e478:	dfc00515 	stw	ra,20(sp)
 410e47c:	df000415 	stw	fp,16(sp)
 410e480:	df000404 	addi	fp,sp,16
 410e484:	e13ffe15 	stw	r4,-8(fp)
 410e488:	e17ffd15 	stw	r5,-12(fp)
 410e48c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 410e490:	e0bffe17 	ldw	r2,-8(fp)
 410e494:	10800017 	ldw	r2,0(r2)
 410e498:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 410e49c:	e0bfff17 	ldw	r2,-4(fp)
 410e4a0:	10800a04 	addi	r2,r2,40
 410e4a4:	e1bffc17 	ldw	r6,-16(fp)
 410e4a8:	e17ffd17 	ldw	r5,-12(fp)
 410e4ac:	1009883a 	mov	r4,r2
 410e4b0:	410e89c0 	call	410e89c <altera_avalon_jtag_uart_ioctl>
}
 410e4b4:	e037883a 	mov	sp,fp
 410e4b8:	dfc00117 	ldw	ra,4(sp)
 410e4bc:	df000017 	ldw	fp,0(sp)
 410e4c0:	dec00204 	addi	sp,sp,8
 410e4c4:	f800283a 	ret

0410e4c8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 410e4c8:	defffa04 	addi	sp,sp,-24
 410e4cc:	dfc00515 	stw	ra,20(sp)
 410e4d0:	df000415 	stw	fp,16(sp)
 410e4d4:	df000404 	addi	fp,sp,16
 410e4d8:	e13fff15 	stw	r4,-4(fp)
 410e4dc:	e17ffe15 	stw	r5,-8(fp)
 410e4e0:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 410e4e4:	e0bfff17 	ldw	r2,-4(fp)
 410e4e8:	00c00044 	movi	r3,1
 410e4ec:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 410e4f0:	e0bfff17 	ldw	r2,-4(fp)
 410e4f4:	10800017 	ldw	r2,0(r2)
 410e4f8:	10800104 	addi	r2,r2,4
 410e4fc:	1007883a 	mov	r3,r2
 410e500:	e0bfff17 	ldw	r2,-4(fp)
 410e504:	10800817 	ldw	r2,32(r2)
 410e508:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 410e50c:	e0bffe17 	ldw	r2,-8(fp)
 410e510:	e0fffd17 	ldw	r3,-12(fp)
 410e514:	d8000015 	stw	zero,0(sp)
 410e518:	e1ffff17 	ldw	r7,-4(fp)
 410e51c:	01810474 	movhi	r6,1041
 410e520:	31b96204 	addi	r6,r6,-6776
 410e524:	180b883a 	mov	r5,r3
 410e528:	1009883a 	mov	r4,r2
 410e52c:	410ff140 	call	410ff14 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 410e530:	e0bfff17 	ldw	r2,-4(fp)
 410e534:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 410e538:	e0bfff17 	ldw	r2,-4(fp)
 410e53c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 410e540:	d0e74917 	ldw	r3,-25308(gp)
 410e544:	e1ffff17 	ldw	r7,-4(fp)
 410e548:	01810474 	movhi	r6,1041
 410e54c:	31b9e504 	addi	r6,r6,-6252
 410e550:	180b883a 	mov	r5,r3
 410e554:	1009883a 	mov	r4,r2
 410e558:	410fa0c0 	call	410fa0c <alt_alarm_start>
 410e55c:	1000040e 	bge	r2,zero,410e570 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 410e560:	e0ffff17 	ldw	r3,-4(fp)
 410e564:	00a00034 	movhi	r2,32768
 410e568:	10bfffc4 	addi	r2,r2,-1
 410e56c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 410e570:	0001883a 	nop
 410e574:	e037883a 	mov	sp,fp
 410e578:	dfc00117 	ldw	ra,4(sp)
 410e57c:	df000017 	ldw	fp,0(sp)
 410e580:	dec00204 	addi	sp,sp,8
 410e584:	f800283a 	ret

0410e588 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 410e588:	defff804 	addi	sp,sp,-32
 410e58c:	df000715 	stw	fp,28(sp)
 410e590:	df000704 	addi	fp,sp,28
 410e594:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 410e598:	e0bff917 	ldw	r2,-28(fp)
 410e59c:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
 410e5a0:	e0bffd17 	ldw	r2,-12(fp)
 410e5a4:	10800017 	ldw	r2,0(r2)
 410e5a8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 410e5ac:	e0bffc17 	ldw	r2,-16(fp)
 410e5b0:	10800104 	addi	r2,r2,4
 410e5b4:	10800037 	ldwio	r2,0(r2)
 410e5b8:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 410e5bc:	e0bffb17 	ldw	r2,-20(fp)
 410e5c0:	1080c00c 	andi	r2,r2,768
 410e5c4:	10006d26 	beq	r2,zero,410e77c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 410e5c8:	e0bffb17 	ldw	r2,-20(fp)
 410e5cc:	1080400c 	andi	r2,r2,256
 410e5d0:	10003526 	beq	r2,zero,410e6a8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 410e5d4:	00800074 	movhi	r2,1
 410e5d8:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 410e5dc:	e0bffd17 	ldw	r2,-12(fp)
 410e5e0:	10800a17 	ldw	r2,40(r2)
 410e5e4:	10800044 	addi	r2,r2,1
 410e5e8:	1081ffcc 	andi	r2,r2,2047
 410e5ec:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
 410e5f0:	e0bffd17 	ldw	r2,-12(fp)
 410e5f4:	10800b17 	ldw	r2,44(r2)
 410e5f8:	e0fffa17 	ldw	r3,-24(fp)
 410e5fc:	18801526 	beq	r3,r2,410e654 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 410e600:	e0bffc17 	ldw	r2,-16(fp)
 410e604:	10800037 	ldwio	r2,0(r2)
 410e608:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 410e60c:	e0bfff17 	ldw	r2,-4(fp)
 410e610:	10a0000c 	andi	r2,r2,32768
 410e614:	10001126 	beq	r2,zero,410e65c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 410e618:	e0bffd17 	ldw	r2,-12(fp)
 410e61c:	10800a17 	ldw	r2,40(r2)
 410e620:	e0ffff17 	ldw	r3,-4(fp)
 410e624:	1809883a 	mov	r4,r3
 410e628:	e0fffd17 	ldw	r3,-12(fp)
 410e62c:	1885883a 	add	r2,r3,r2
 410e630:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 410e634:	e0bffd17 	ldw	r2,-12(fp)
 410e638:	10800a17 	ldw	r2,40(r2)
 410e63c:	10800044 	addi	r2,r2,1
 410e640:	10c1ffcc 	andi	r3,r2,2047
 410e644:	e0bffd17 	ldw	r2,-12(fp)
 410e648:	10c00a15 	stw	r3,40(r2)
 410e64c:	0001883a 	nop
      {
 410e650:	003fe206 	br	410e5dc <altera_avalon_jtag_uart_irq+0x54>
          break;
 410e654:	0001883a 	nop
 410e658:	00000106 	br	410e660 <altera_avalon_jtag_uart_irq+0xd8>
          break;
 410e65c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 410e660:	e0bfff17 	ldw	r2,-4(fp)
 410e664:	10bfffec 	andhi	r2,r2,65535
 410e668:	10000f26 	beq	r2,zero,410e6a8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 410e66c:	e0bffd17 	ldw	r2,-12(fp)
 410e670:	10c00817 	ldw	r3,32(r2)
 410e674:	00bfff84 	movi	r2,-2
 410e678:	1886703a 	and	r3,r3,r2
 410e67c:	e0bffd17 	ldw	r2,-12(fp)
 410e680:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 410e684:	e0bffc17 	ldw	r2,-16(fp)
 410e688:	10800104 	addi	r2,r2,4
 410e68c:	1007883a 	mov	r3,r2
 410e690:	e0bffd17 	ldw	r2,-12(fp)
 410e694:	10800817 	ldw	r2,32(r2)
 410e698:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 410e69c:	e0bffc17 	ldw	r2,-16(fp)
 410e6a0:	10800104 	addi	r2,r2,4
 410e6a4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 410e6a8:	e0bffb17 	ldw	r2,-20(fp)
 410e6ac:	1080800c 	andi	r2,r2,512
 410e6b0:	103fbe26 	beq	r2,zero,410e5ac <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 410e6b4:	e0bffb17 	ldw	r2,-20(fp)
 410e6b8:	1004d43a 	srli	r2,r2,16
 410e6bc:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 410e6c0:	00001406 	br	410e714 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 410e6c4:	e0bffc17 	ldw	r2,-16(fp)
 410e6c8:	e0fffd17 	ldw	r3,-12(fp)
 410e6cc:	18c00d17 	ldw	r3,52(r3)
 410e6d0:	e13ffd17 	ldw	r4,-12(fp)
 410e6d4:	20c7883a 	add	r3,r4,r3
 410e6d8:	18c20e03 	ldbu	r3,2104(r3)
 410e6dc:	18c03fcc 	andi	r3,r3,255
 410e6e0:	18c0201c 	xori	r3,r3,128
 410e6e4:	18ffe004 	addi	r3,r3,-128
 410e6e8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 410e6ec:	e0bffd17 	ldw	r2,-12(fp)
 410e6f0:	10800d17 	ldw	r2,52(r2)
 410e6f4:	10800044 	addi	r2,r2,1
 410e6f8:	10c1ffcc 	andi	r3,r2,2047
 410e6fc:	e0bffd17 	ldw	r2,-12(fp)
 410e700:	10c00d15 	stw	r3,52(r2)
 410e704:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 410e708:	e0bffe17 	ldw	r2,-8(fp)
 410e70c:	10bfffc4 	addi	r2,r2,-1
 410e710:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
 410e714:	e0bffe17 	ldw	r2,-8(fp)
 410e718:	10000526 	beq	r2,zero,410e730 <altera_avalon_jtag_uart_irq+0x1a8>
 410e71c:	e0bffd17 	ldw	r2,-12(fp)
 410e720:	10c00d17 	ldw	r3,52(r2)
 410e724:	e0bffd17 	ldw	r2,-12(fp)
 410e728:	10800c17 	ldw	r2,48(r2)
 410e72c:	18bfe51e 	bne	r3,r2,410e6c4 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
 410e730:	e0bffe17 	ldw	r2,-8(fp)
 410e734:	103f9d26 	beq	r2,zero,410e5ac <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 410e738:	e0bffd17 	ldw	r2,-12(fp)
 410e73c:	10c00817 	ldw	r3,32(r2)
 410e740:	00bfff44 	movi	r2,-3
 410e744:	1886703a 	and	r3,r3,r2
 410e748:	e0bffd17 	ldw	r2,-12(fp)
 410e74c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 410e750:	e0bffd17 	ldw	r2,-12(fp)
 410e754:	10800017 	ldw	r2,0(r2)
 410e758:	10800104 	addi	r2,r2,4
 410e75c:	1007883a 	mov	r3,r2
 410e760:	e0bffd17 	ldw	r2,-12(fp)
 410e764:	10800817 	ldw	r2,32(r2)
 410e768:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 410e76c:	e0bffc17 	ldw	r2,-16(fp)
 410e770:	10800104 	addi	r2,r2,4
 410e774:	10800037 	ldwio	r2,0(r2)
  {
 410e778:	003f8c06 	br	410e5ac <altera_avalon_jtag_uart_irq+0x24>
      break;
 410e77c:	0001883a 	nop
      }
    }
  }
}
 410e780:	0001883a 	nop
 410e784:	e037883a 	mov	sp,fp
 410e788:	df000017 	ldw	fp,0(sp)
 410e78c:	dec00104 	addi	sp,sp,4
 410e790:	f800283a 	ret

0410e794 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 410e794:	defffc04 	addi	sp,sp,-16
 410e798:	df000315 	stw	fp,12(sp)
 410e79c:	df000304 	addi	fp,sp,12
 410e7a0:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 410e7a4:	e0bffd17 	ldw	r2,-12(fp)
 410e7a8:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 410e7ac:	e0bfff17 	ldw	r2,-4(fp)
 410e7b0:	10800017 	ldw	r2,0(r2)
 410e7b4:	10800104 	addi	r2,r2,4
 410e7b8:	10800037 	ldwio	r2,0(r2)
 410e7bc:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 410e7c0:	e0bffe17 	ldw	r2,-8(fp)
 410e7c4:	1081000c 	andi	r2,r2,1024
 410e7c8:	10000b26 	beq	r2,zero,410e7f8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 410e7cc:	e0bfff17 	ldw	r2,-4(fp)
 410e7d0:	10800017 	ldw	r2,0(r2)
 410e7d4:	10800104 	addi	r2,r2,4
 410e7d8:	1007883a 	mov	r3,r2
 410e7dc:	e0bfff17 	ldw	r2,-4(fp)
 410e7e0:	10800817 	ldw	r2,32(r2)
 410e7e4:	10810014 	ori	r2,r2,1024
 410e7e8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 410e7ec:	e0bfff17 	ldw	r2,-4(fp)
 410e7f0:	10000915 	stw	zero,36(r2)
 410e7f4:	00000a06 	br	410e820 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 410e7f8:	e0bfff17 	ldw	r2,-4(fp)
 410e7fc:	10c00917 	ldw	r3,36(r2)
 410e800:	00a00034 	movhi	r2,32768
 410e804:	10bfff04 	addi	r2,r2,-4
 410e808:	10c00536 	bltu	r2,r3,410e820 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 410e80c:	e0bfff17 	ldw	r2,-4(fp)
 410e810:	10800917 	ldw	r2,36(r2)
 410e814:	10c00044 	addi	r3,r2,1
 410e818:	e0bfff17 	ldw	r2,-4(fp)
 410e81c:	10c00915 	stw	r3,36(r2)
 410e820:	d0a74917 	ldw	r2,-25308(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 410e824:	e037883a 	mov	sp,fp
 410e828:	df000017 	ldw	fp,0(sp)
 410e82c:	dec00104 	addi	sp,sp,4
 410e830:	f800283a 	ret

0410e834 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 410e834:	defffd04 	addi	sp,sp,-12
 410e838:	df000215 	stw	fp,8(sp)
 410e83c:	df000204 	addi	fp,sp,8
 410e840:	e13fff15 	stw	r4,-4(fp)
 410e844:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 410e848:	00000506 	br	410e860 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 410e84c:	e0bffe17 	ldw	r2,-8(fp)
 410e850:	1090000c 	andi	r2,r2,16384
 410e854:	10000226 	beq	r2,zero,410e860 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 410e858:	00bffd44 	movi	r2,-11
 410e85c:	00000b06 	br	410e88c <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 410e860:	e0bfff17 	ldw	r2,-4(fp)
 410e864:	10c00d17 	ldw	r3,52(r2)
 410e868:	e0bfff17 	ldw	r2,-4(fp)
 410e86c:	10800c17 	ldw	r2,48(r2)
 410e870:	18800526 	beq	r3,r2,410e888 <altera_avalon_jtag_uart_close+0x54>
 410e874:	e0bfff17 	ldw	r2,-4(fp)
 410e878:	10c00917 	ldw	r3,36(r2)
 410e87c:	e0bfff17 	ldw	r2,-4(fp)
 410e880:	10800117 	ldw	r2,4(r2)
 410e884:	18bff136 	bltu	r3,r2,410e84c <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
 410e888:	0005883a 	mov	r2,zero
}
 410e88c:	e037883a 	mov	sp,fp
 410e890:	df000017 	ldw	fp,0(sp)
 410e894:	dec00104 	addi	sp,sp,4
 410e898:	f800283a 	ret

0410e89c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 410e89c:	defffa04 	addi	sp,sp,-24
 410e8a0:	df000515 	stw	fp,20(sp)
 410e8a4:	df000504 	addi	fp,sp,20
 410e8a8:	e13ffd15 	stw	r4,-12(fp)
 410e8ac:	e17ffc15 	stw	r5,-16(fp)
 410e8b0:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
 410e8b4:	00bff9c4 	movi	r2,-25
 410e8b8:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
 410e8bc:	e0bffc17 	ldw	r2,-16(fp)
 410e8c0:	109a8060 	cmpeqi	r2,r2,27137
 410e8c4:	1000041e 	bne	r2,zero,410e8d8 <altera_avalon_jtag_uart_ioctl+0x3c>
 410e8c8:	e0bffc17 	ldw	r2,-16(fp)
 410e8cc:	109a80a0 	cmpeqi	r2,r2,27138
 410e8d0:	1000181e 	bne	r2,zero,410e934 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 410e8d4:	00002906 	br	410e97c <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
 410e8d8:	e0bffd17 	ldw	r2,-12(fp)
 410e8dc:	10c00117 	ldw	r3,4(r2)
 410e8e0:	00a00034 	movhi	r2,32768
 410e8e4:	10bfffc4 	addi	r2,r2,-1
 410e8e8:	18802126 	beq	r3,r2,410e970 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
 410e8ec:	e0bffb17 	ldw	r2,-20(fp)
 410e8f0:	10800017 	ldw	r2,0(r2)
 410e8f4:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 410e8f8:	e0bffe17 	ldw	r2,-8(fp)
 410e8fc:	10800090 	cmplti	r2,r2,2
 410e900:	1000061e 	bne	r2,zero,410e91c <altera_avalon_jtag_uart_ioctl+0x80>
 410e904:	e0fffe17 	ldw	r3,-8(fp)
 410e908:	00a00034 	movhi	r2,32768
 410e90c:	10bfffc4 	addi	r2,r2,-1
 410e910:	18800226 	beq	r3,r2,410e91c <altera_avalon_jtag_uart_ioctl+0x80>
 410e914:	e0bffe17 	ldw	r2,-8(fp)
 410e918:	00000206 	br	410e924 <altera_avalon_jtag_uart_ioctl+0x88>
 410e91c:	00a00034 	movhi	r2,32768
 410e920:	10bfff84 	addi	r2,r2,-2
 410e924:	e0fffd17 	ldw	r3,-12(fp)
 410e928:	18800115 	stw	r2,4(r3)
      rc = 0;
 410e92c:	e03fff15 	stw	zero,-4(fp)
    break;
 410e930:	00000f06 	br	410e970 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
 410e934:	e0bffd17 	ldw	r2,-12(fp)
 410e938:	10c00117 	ldw	r3,4(r2)
 410e93c:	00a00034 	movhi	r2,32768
 410e940:	10bfffc4 	addi	r2,r2,-1
 410e944:	18800c26 	beq	r3,r2,410e978 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 410e948:	e0bffd17 	ldw	r2,-12(fp)
 410e94c:	10c00917 	ldw	r3,36(r2)
 410e950:	e0bffd17 	ldw	r2,-12(fp)
 410e954:	10800117 	ldw	r2,4(r2)
 410e958:	1885803a 	cmpltu	r2,r3,r2
 410e95c:	10c03fcc 	andi	r3,r2,255
 410e960:	e0bffb17 	ldw	r2,-20(fp)
 410e964:	10c00015 	stw	r3,0(r2)
      rc = 0;
 410e968:	e03fff15 	stw	zero,-4(fp)
    break;
 410e96c:	00000206 	br	410e978 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
 410e970:	0001883a 	nop
 410e974:	00000106 	br	410e97c <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
 410e978:	0001883a 	nop
  }

  return rc;
 410e97c:	e0bfff17 	ldw	r2,-4(fp)
}
 410e980:	e037883a 	mov	sp,fp
 410e984:	df000017 	ldw	fp,0(sp)
 410e988:	dec00104 	addi	sp,sp,4
 410e98c:	f800283a 	ret

0410e990 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 410e990:	defff304 	addi	sp,sp,-52
 410e994:	dfc00c15 	stw	ra,48(sp)
 410e998:	df000b15 	stw	fp,44(sp)
 410e99c:	df000b04 	addi	fp,sp,44
 410e9a0:	e13ff815 	stw	r4,-32(fp)
 410e9a4:	e17ff715 	stw	r5,-36(fp)
 410e9a8:	e1bff615 	stw	r6,-40(fp)
 410e9ac:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
 410e9b0:	e0bff717 	ldw	r2,-36(fp)
 410e9b4:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 410e9b8:	00004706 	br	410ead8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 410e9bc:	e0bff817 	ldw	r2,-32(fp)
 410e9c0:	10800a17 	ldw	r2,40(r2)
 410e9c4:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
 410e9c8:	e0bff817 	ldw	r2,-32(fp)
 410e9cc:	10800b17 	ldw	r2,44(r2)
 410e9d0:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
 410e9d4:	e0fffd17 	ldw	r3,-12(fp)
 410e9d8:	e0bffc17 	ldw	r2,-16(fp)
 410e9dc:	18800536 	bltu	r3,r2,410e9f4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 410e9e0:	e0fffd17 	ldw	r3,-12(fp)
 410e9e4:	e0bffc17 	ldw	r2,-16(fp)
 410e9e8:	1885c83a 	sub	r2,r3,r2
 410e9ec:	e0bffe15 	stw	r2,-8(fp)
 410e9f0:	00000406 	br	410ea04 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 410e9f4:	00c20004 	movi	r3,2048
 410e9f8:	e0bffc17 	ldw	r2,-16(fp)
 410e9fc:	1885c83a 	sub	r2,r3,r2
 410ea00:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
 410ea04:	e0bffe17 	ldw	r2,-8(fp)
 410ea08:	10001e26 	beq	r2,zero,410ea84 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 410ea0c:	e0fff617 	ldw	r3,-40(fp)
 410ea10:	e0bffe17 	ldw	r2,-8(fp)
 410ea14:	1880022e 	bgeu	r3,r2,410ea20 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 410ea18:	e0bff617 	ldw	r2,-40(fp)
 410ea1c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 410ea20:	e0bff817 	ldw	r2,-32(fp)
 410ea24:	10c00e04 	addi	r3,r2,56
 410ea28:	e0bffc17 	ldw	r2,-16(fp)
 410ea2c:	1885883a 	add	r2,r3,r2
 410ea30:	e1bffe17 	ldw	r6,-8(fp)
 410ea34:	100b883a 	mov	r5,r2
 410ea38:	e13fff17 	ldw	r4,-4(fp)
 410ea3c:	41059dc0 	call	41059dc <memcpy>
      ptr   += n;
 410ea40:	e0ffff17 	ldw	r3,-4(fp)
 410ea44:	e0bffe17 	ldw	r2,-8(fp)
 410ea48:	1885883a 	add	r2,r3,r2
 410ea4c:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
 410ea50:	e0fff617 	ldw	r3,-40(fp)
 410ea54:	e0bffe17 	ldw	r2,-8(fp)
 410ea58:	1885c83a 	sub	r2,r3,r2
 410ea5c:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 410ea60:	e0fffc17 	ldw	r3,-16(fp)
 410ea64:	e0bffe17 	ldw	r2,-8(fp)
 410ea68:	1885883a 	add	r2,r3,r2
 410ea6c:	10c1ffcc 	andi	r3,r2,2047
 410ea70:	e0bff817 	ldw	r2,-32(fp)
 410ea74:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 410ea78:	e0bff617 	ldw	r2,-40(fp)
 410ea7c:	00bfcf16 	blt	zero,r2,410e9bc <altera_avalon_jtag_uart_read+0x2c>
 410ea80:	00000106 	br	410ea88 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
 410ea84:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
 410ea88:	e0ffff17 	ldw	r3,-4(fp)
 410ea8c:	e0bff717 	ldw	r2,-36(fp)
 410ea90:	1880141e 	bne	r3,r2,410eae4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 410ea94:	e0bff517 	ldw	r2,-44(fp)
 410ea98:	1090000c 	andi	r2,r2,16384
 410ea9c:	1000131e 	bne	r2,zero,410eaec <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 410eaa0:	0001883a 	nop
 410eaa4:	e0bff817 	ldw	r2,-32(fp)
 410eaa8:	10800a17 	ldw	r2,40(r2)
 410eaac:	e0fffd17 	ldw	r3,-12(fp)
 410eab0:	1880051e 	bne	r3,r2,410eac8 <altera_avalon_jtag_uart_read+0x138>
 410eab4:	e0bff817 	ldw	r2,-32(fp)
 410eab8:	10c00917 	ldw	r3,36(r2)
 410eabc:	e0bff817 	ldw	r2,-32(fp)
 410eac0:	10800117 	ldw	r2,4(r2)
 410eac4:	18bff736 	bltu	r3,r2,410eaa4 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 410eac8:	e0bff817 	ldw	r2,-32(fp)
 410eacc:	10800a17 	ldw	r2,40(r2)
 410ead0:	e0fffd17 	ldw	r3,-12(fp)
 410ead4:	18800726 	beq	r3,r2,410eaf4 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
 410ead8:	e0bff617 	ldw	r2,-40(fp)
 410eadc:	00bfb716 	blt	zero,r2,410e9bc <altera_avalon_jtag_uart_read+0x2c>
 410eae0:	00000506 	br	410eaf8 <altera_avalon_jtag_uart_read+0x168>
      break;
 410eae4:	0001883a 	nop
 410eae8:	00000306 	br	410eaf8 <altera_avalon_jtag_uart_read+0x168>
      break;
 410eaec:	0001883a 	nop
 410eaf0:	00000106 	br	410eaf8 <altera_avalon_jtag_uart_read+0x168>
      break;
 410eaf4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 410eaf8:	e0ffff17 	ldw	r3,-4(fp)
 410eafc:	e0bff717 	ldw	r2,-36(fp)
 410eb00:	18801926 	beq	r3,r2,410eb68 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
 410eb04:	0005303a 	rdctl	r2,status
 410eb08:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 410eb0c:	e0fff917 	ldw	r3,-28(fp)
 410eb10:	00bfff84 	movi	r2,-2
 410eb14:	1884703a 	and	r2,r3,r2
 410eb18:	1001703a 	wrctl	status,r2
  return context;
 410eb1c:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 410eb20:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 410eb24:	e0bff817 	ldw	r2,-32(fp)
 410eb28:	10800817 	ldw	r2,32(r2)
 410eb2c:	10c00054 	ori	r3,r2,1
 410eb30:	e0bff817 	ldw	r2,-32(fp)
 410eb34:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 410eb38:	e0bff817 	ldw	r2,-32(fp)
 410eb3c:	10800017 	ldw	r2,0(r2)
 410eb40:	10800104 	addi	r2,r2,4
 410eb44:	1007883a 	mov	r3,r2
 410eb48:	e0bff817 	ldw	r2,-32(fp)
 410eb4c:	10800817 	ldw	r2,32(r2)
 410eb50:	18800035 	stwio	r2,0(r3)
 410eb54:	e0bffb17 	ldw	r2,-20(fp)
 410eb58:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
 410eb5c:	e0bffa17 	ldw	r2,-24(fp)
 410eb60:	1001703a 	wrctl	status,r2
}
 410eb64:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 410eb68:	e0ffff17 	ldw	r3,-4(fp)
 410eb6c:	e0bff717 	ldw	r2,-36(fp)
 410eb70:	18800426 	beq	r3,r2,410eb84 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
 410eb74:	e0ffff17 	ldw	r3,-4(fp)
 410eb78:	e0bff717 	ldw	r2,-36(fp)
 410eb7c:	1885c83a 	sub	r2,r3,r2
 410eb80:	00000606 	br	410eb9c <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
 410eb84:	e0bff517 	ldw	r2,-44(fp)
 410eb88:	1090000c 	andi	r2,r2,16384
 410eb8c:	10000226 	beq	r2,zero,410eb98 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
 410eb90:	00bffd44 	movi	r2,-11
 410eb94:	00000106 	br	410eb9c <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
 410eb98:	00bffec4 	movi	r2,-5
}
 410eb9c:	e037883a 	mov	sp,fp
 410eba0:	dfc00117 	ldw	ra,4(sp)
 410eba4:	df000017 	ldw	fp,0(sp)
 410eba8:	dec00204 	addi	sp,sp,8
 410ebac:	f800283a 	ret

0410ebb0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 410ebb0:	defff304 	addi	sp,sp,-52
 410ebb4:	dfc00c15 	stw	ra,48(sp)
 410ebb8:	df000b15 	stw	fp,44(sp)
 410ebbc:	df000b04 	addi	fp,sp,44
 410ebc0:	e13ff815 	stw	r4,-32(fp)
 410ebc4:	e17ff715 	stw	r5,-36(fp)
 410ebc8:	e1bff615 	stw	r6,-40(fp)
 410ebcc:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 410ebd0:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 410ebd4:	e0bff717 	ldw	r2,-36(fp)
 410ebd8:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 410ebdc:	00003706 	br	410ecbc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 410ebe0:	e0bff817 	ldw	r2,-32(fp)
 410ebe4:	10800c17 	ldw	r2,48(r2)
 410ebe8:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
 410ebec:	e0bff817 	ldw	r2,-32(fp)
 410ebf0:	10800d17 	ldw	r2,52(r2)
 410ebf4:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
 410ebf8:	e0fffc17 	ldw	r3,-16(fp)
 410ebfc:	e0bfff17 	ldw	r2,-4(fp)
 410ec00:	1880062e 	bgeu	r3,r2,410ec1c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 410ec04:	e0ffff17 	ldw	r3,-4(fp)
 410ec08:	e0bffc17 	ldw	r2,-16(fp)
 410ec0c:	1885c83a 	sub	r2,r3,r2
 410ec10:	10bfffc4 	addi	r2,r2,-1
 410ec14:	e0bffe15 	stw	r2,-8(fp)
 410ec18:	00000b06 	br	410ec48 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 410ec1c:	e0bfff17 	ldw	r2,-4(fp)
 410ec20:	10000526 	beq	r2,zero,410ec38 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 410ec24:	00c20004 	movi	r3,2048
 410ec28:	e0bffc17 	ldw	r2,-16(fp)
 410ec2c:	1885c83a 	sub	r2,r3,r2
 410ec30:	e0bffe15 	stw	r2,-8(fp)
 410ec34:	00000406 	br	410ec48 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 410ec38:	00c1ffc4 	movi	r3,2047
 410ec3c:	e0bffc17 	ldw	r2,-16(fp)
 410ec40:	1885c83a 	sub	r2,r3,r2
 410ec44:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
 410ec48:	e0bffe17 	ldw	r2,-8(fp)
 410ec4c:	10001e26 	beq	r2,zero,410ecc8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 410ec50:	e0fff617 	ldw	r3,-40(fp)
 410ec54:	e0bffe17 	ldw	r2,-8(fp)
 410ec58:	1880022e 	bgeu	r3,r2,410ec64 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 410ec5c:	e0bff617 	ldw	r2,-40(fp)
 410ec60:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 410ec64:	e0bff817 	ldw	r2,-32(fp)
 410ec68:	10c20e04 	addi	r3,r2,2104
 410ec6c:	e0bffc17 	ldw	r2,-16(fp)
 410ec70:	1885883a 	add	r2,r3,r2
 410ec74:	e1bffe17 	ldw	r6,-8(fp)
 410ec78:	e17ff717 	ldw	r5,-36(fp)
 410ec7c:	1009883a 	mov	r4,r2
 410ec80:	41059dc0 	call	41059dc <memcpy>
      ptr   += n;
 410ec84:	e0fff717 	ldw	r3,-36(fp)
 410ec88:	e0bffe17 	ldw	r2,-8(fp)
 410ec8c:	1885883a 	add	r2,r3,r2
 410ec90:	e0bff715 	stw	r2,-36(fp)
      count -= n;
 410ec94:	e0fff617 	ldw	r3,-40(fp)
 410ec98:	e0bffe17 	ldw	r2,-8(fp)
 410ec9c:	1885c83a 	sub	r2,r3,r2
 410eca0:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 410eca4:	e0fffc17 	ldw	r3,-16(fp)
 410eca8:	e0bffe17 	ldw	r2,-8(fp)
 410ecac:	1885883a 	add	r2,r3,r2
 410ecb0:	10c1ffcc 	andi	r3,r2,2047
 410ecb4:	e0bff817 	ldw	r2,-32(fp)
 410ecb8:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
 410ecbc:	e0bff617 	ldw	r2,-40(fp)
 410ecc0:	00bfc716 	blt	zero,r2,410ebe0 <altera_avalon_jtag_uart_write+0x30>
 410ecc4:	00000106 	br	410eccc <altera_avalon_jtag_uart_write+0x11c>
        break;
 410ecc8:	0001883a 	nop
  NIOS2_READ_STATUS (context);
 410eccc:	0005303a 	rdctl	r2,status
 410ecd0:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 410ecd4:	e0fff917 	ldw	r3,-28(fp)
 410ecd8:	00bfff84 	movi	r2,-2
 410ecdc:	1884703a 	and	r2,r3,r2
 410ece0:	1001703a 	wrctl	status,r2
  return context;
 410ece4:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 410ece8:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 410ecec:	e0bff817 	ldw	r2,-32(fp)
 410ecf0:	10800817 	ldw	r2,32(r2)
 410ecf4:	10c00094 	ori	r3,r2,2
 410ecf8:	e0bff817 	ldw	r2,-32(fp)
 410ecfc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 410ed00:	e0bff817 	ldw	r2,-32(fp)
 410ed04:	10800017 	ldw	r2,0(r2)
 410ed08:	10800104 	addi	r2,r2,4
 410ed0c:	1007883a 	mov	r3,r2
 410ed10:	e0bff817 	ldw	r2,-32(fp)
 410ed14:	10800817 	ldw	r2,32(r2)
 410ed18:	18800035 	stwio	r2,0(r3)
 410ed1c:	e0bffb17 	ldw	r2,-20(fp)
 410ed20:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
 410ed24:	e0bffa17 	ldw	r2,-24(fp)
 410ed28:	1001703a 	wrctl	status,r2
}
 410ed2c:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 410ed30:	e0bff617 	ldw	r2,-40(fp)
 410ed34:	0080100e 	bge	zero,r2,410ed78 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 410ed38:	e0bff517 	ldw	r2,-44(fp)
 410ed3c:	1090000c 	andi	r2,r2,16384
 410ed40:	1000101e 	bne	r2,zero,410ed84 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 410ed44:	0001883a 	nop
 410ed48:	e0bff817 	ldw	r2,-32(fp)
 410ed4c:	10800d17 	ldw	r2,52(r2)
 410ed50:	e0ffff17 	ldw	r3,-4(fp)
 410ed54:	1880051e 	bne	r3,r2,410ed6c <altera_avalon_jtag_uart_write+0x1bc>
 410ed58:	e0bff817 	ldw	r2,-32(fp)
 410ed5c:	10c00917 	ldw	r3,36(r2)
 410ed60:	e0bff817 	ldw	r2,-32(fp)
 410ed64:	10800117 	ldw	r2,4(r2)
 410ed68:	18bff736 	bltu	r3,r2,410ed48 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 410ed6c:	e0bff817 	ldw	r2,-32(fp)
 410ed70:	10800917 	ldw	r2,36(r2)
 410ed74:	1000051e 	bne	r2,zero,410ed8c <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
 410ed78:	e0bff617 	ldw	r2,-40(fp)
 410ed7c:	00bfcf16 	blt	zero,r2,410ecbc <altera_avalon_jtag_uart_write+0x10c>
 410ed80:	00000306 	br	410ed90 <altera_avalon_jtag_uart_write+0x1e0>
        break;
 410ed84:	0001883a 	nop
 410ed88:	00000106 	br	410ed90 <altera_avalon_jtag_uart_write+0x1e0>
         break;
 410ed8c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 410ed90:	e0fff717 	ldw	r3,-36(fp)
 410ed94:	e0bffd17 	ldw	r2,-12(fp)
 410ed98:	18800426 	beq	r3,r2,410edac <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
 410ed9c:	e0fff717 	ldw	r3,-36(fp)
 410eda0:	e0bffd17 	ldw	r2,-12(fp)
 410eda4:	1885c83a 	sub	r2,r3,r2
 410eda8:	00000606 	br	410edc4 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
 410edac:	e0bff517 	ldw	r2,-44(fp)
 410edb0:	1090000c 	andi	r2,r2,16384
 410edb4:	10000226 	beq	r2,zero,410edc0 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
 410edb8:	00bffd44 	movi	r2,-11
 410edbc:	00000106 	br	410edc4 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 410edc0:	00bffec4 	movi	r2,-5
}
 410edc4:	e037883a 	mov	sp,fp
 410edc8:	dfc00117 	ldw	ra,4(sp)
 410edcc:	df000017 	ldw	fp,0(sp)
 410edd0:	dec00204 	addi	sp,sp,8
 410edd4:	f800283a 	ret

0410edd8 <altera_avalon_mailbox_identify>:
 * Check an instance open match
 * with the callback register
 */

static void altera_avalon_mailbox_identify (altera_avalon_mailbox_dev *dev)
{
 410edd8:	defffd04 	addi	sp,sp,-12
 410eddc:	df000215 	stw	fp,8(sp)
 410ede0:	df000204 	addi	fp,sp,8
 410ede4:	e13ffe15 	stw	r4,-8(fp)
    /* Random signature to test mailbox ownership */
    alt_u32 magic_num = 0x3A11B045;
 410ede8:	008e84b4 	movhi	r2,14866
 410edec:	10ac1144 	addi	r2,r2,-20411
 410edf0:	e0bfff15 	stw	r2,-4(fp)

    IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST, magic_num);
 410edf4:	e0bffe17 	ldw	r2,-8(fp)
 410edf8:	10800a17 	ldw	r2,40(r2)
 410edfc:	10800104 	addi	r2,r2,4
 410ee00:	1007883a 	mov	r3,r2
 410ee04:	e0bfff17 	ldw	r2,-4(fp)
 410ee08:	18800035 	stwio	r2,0(r3)
    if((IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST)) == magic_num)
 410ee0c:	e0bffe17 	ldw	r2,-8(fp)
 410ee10:	10800a17 	ldw	r2,40(r2)
 410ee14:	10800104 	addi	r2,r2,4
 410ee18:	10c00037 	ldwio	r3,0(r2)
 410ee1c:	e0bfff17 	ldw	r2,-4(fp)
 410ee20:	1880081e 	bne	r3,r2,410ee44 <altera_avalon_mailbox_identify+0x6c>
    {
        dev-> mbox_type = MBOX_TX;
 410ee24:	e0bffe17 	ldw	r2,-8(fp)
 410ee28:	10000f15 	stw	zero,60(r2)
        /* Clear message_ptr to default */
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST, 0x0);
 410ee2c:	e0bffe17 	ldw	r2,-8(fp)
 410ee30:	10800a17 	ldw	r2,40(r2)
 410ee34:	10800104 	addi	r2,r2,4
 410ee38:	0007883a 	mov	r3,zero
 410ee3c:	10c00035 	stwio	r3,0(r2)
    } else
    {
	    dev->mbox_type = MBOX_RX;
    }
}
 410ee40:	00000306 	br	410ee50 <altera_avalon_mailbox_identify+0x78>
	    dev->mbox_type = MBOX_RX;
 410ee44:	e0bffe17 	ldw	r2,-8(fp)
 410ee48:	00c00044 	movi	r3,1
 410ee4c:	10c00f15 	stw	r3,60(r2)
}
 410ee50:	0001883a 	nop
 410ee54:	e037883a 	mov	sp,fp
 410ee58:	df000017 	ldw	fp,0(sp)
 410ee5c:	dec00104 	addi	sp,sp,4
 410ee60:	f800283a 	ret

0410ee64 <altera_avalon_mailbox_post>:
/*
 *   altera_avalon_mailbox_post
 *   This function post message out through sender mailbox
 */
static alt_32 altera_avalon_mailbox_post (altera_avalon_mailbox_dev *dev,  void *message)
{
 410ee64:	defffc04 	addi	sp,sp,-16
 410ee68:	df000315 	stw	fp,12(sp)
 410ee6c:	df000304 	addi	fp,sp,12
 410ee70:	e13ffe15 	stw	r4,-8(fp)
 410ee74:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 *mbox_msg = (alt_u32*) message ;
 410ee78:	e0bffd17 	ldw	r2,-12(fp)
 410ee7c:	e0bfff15 	stw	r2,-4(fp)

    if (mbox_msg != NULL) {
 410ee80:	e0bfff17 	ldw	r2,-4(fp)
 410ee84:	10001026 	beq	r2,zero,410eec8 <altera_avalon_mailbox_post+0x64>
        /* When message space available, post the message out */
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST, mbox_msg[1]);
 410ee88:	e0bffe17 	ldw	r2,-8(fp)
 410ee8c:	10800a17 	ldw	r2,40(r2)
 410ee90:	10800104 	addi	r2,r2,4
 410ee94:	1007883a 	mov	r3,r2
 410ee98:	e0bfff17 	ldw	r2,-4(fp)
 410ee9c:	10800104 	addi	r2,r2,4
 410eea0:	10800017 	ldw	r2,0(r2)
 410eea4:	18800035 	stwio	r2,0(r3)
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_CMD_OFST, mbox_msg[0]);
 410eea8:	e0bffe17 	ldw	r2,-8(fp)
 410eeac:	10800a17 	ldw	r2,40(r2)
 410eeb0:	1007883a 	mov	r3,r2
 410eeb4:	e0bfff17 	ldw	r2,-4(fp)
 410eeb8:	10800017 	ldw	r2,0(r2)
 410eebc:	18800035 	stwio	r2,0(r3)
        return 0;
 410eec0:	0005883a 	mov	r2,zero
 410eec4:	00000106 	br	410eecc <altera_avalon_mailbox_post+0x68>
    }
    /* Invalid NULL message received */
    return -EINVAL;
 410eec8:	00bffa84 	movi	r2,-22
}
 410eecc:	e037883a 	mov	sp,fp
 410eed0:	df000017 	ldw	fp,0(sp)
 410eed4:	dec00104 	addi	sp,sp,4
 410eed8:	f800283a 	ret

0410eedc <altera_avalon_mailbox_simple_tx_isr>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_mailbox_simple_tx_isr(void *context)
#else
static void altera_avalon_mailbox_simple_tx_isr(void *context, alt_u32 id)
#endif
{
 410eedc:	defff604 	addi	sp,sp,-40
 410eee0:	dfc00915 	stw	ra,36(sp)
 410eee4:	df000815 	stw	fp,32(sp)
 410eee8:	df000804 	addi	fp,sp,32
 410eeec:	e13ff815 	stw	r4,-32(fp)
    altera_avalon_mailbox_dev *dev = (altera_avalon_mailbox_dev*) context;
 410eef0:	e0bff817 	ldw	r2,-32(fp)
 410eef4:	e0bfff15 	stw	r2,-4(fp)
    int status = 0;
 410eef8:	e03ffe15 	stw	zero,-8(fp)
    alt_u32 data;
    alt_irq_context cpu_sr;
    alt_u32 *message = dev->mbox_msg;
 410eefc:	e0bfff17 	ldw	r2,-4(fp)
 410ef00:	10801017 	ldw	r2,64(r2)
 410ef04:	e0bffd15 	stw	r2,-12(fp)

    /* Mask mailbox interrupt */
    data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST) &
 410ef08:	e0bfff17 	ldw	r2,-4(fp)
 410ef0c:	10800a17 	ldw	r2,40(r2)
 410ef10:	10800304 	addi	r2,r2,12
 410ef14:	10800037 	ldwio	r2,0(r2)
 410ef18:	1007883a 	mov	r3,r2
 410ef1c:	00bfff44 	movi	r2,-3
 410ef20:	1884703a 	and	r2,r3,r2
 410ef24:	e0bffc15 	stw	r2,-16(fp)
               (~ALTERA_AVALON_MAILBOX_SIMPLE_INTR_SPACE_MSK);
    IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
 410ef28:	e0bfff17 	ldw	r2,-4(fp)
 410ef2c:	10800a17 	ldw	r2,40(r2)
 410ef30:	10800304 	addi	r2,r2,12
 410ef34:	1007883a 	mov	r3,r2
 410ef38:	e0bffc17 	ldw	r2,-16(fp)
 410ef3c:	18800035 	stwio	r2,0(r3)

    if (message != NULL)
 410ef40:	e0bffd17 	ldw	r2,-12(fp)
 410ef44:	10002e26 	beq	r2,zero,410f000 <altera_avalon_mailbox_simple_tx_isr+0x124>
    {
        /* Post out message requested */
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST, message[1]);
 410ef48:	e0bfff17 	ldw	r2,-4(fp)
 410ef4c:	10800a17 	ldw	r2,40(r2)
 410ef50:	10800104 	addi	r2,r2,4
 410ef54:	1007883a 	mov	r3,r2
 410ef58:	e0bffd17 	ldw	r2,-12(fp)
 410ef5c:	10800104 	addi	r2,r2,4
 410ef60:	10800017 	ldw	r2,0(r2)
 410ef64:	18800035 	stwio	r2,0(r3)
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_CMD_OFST, message[0]);
 410ef68:	e0bfff17 	ldw	r2,-4(fp)
 410ef6c:	10800a17 	ldw	r2,40(r2)
 410ef70:	1007883a 	mov	r3,r2
 410ef74:	e0bffd17 	ldw	r2,-12(fp)
 410ef78:	10800017 	ldw	r2,0(r2)
 410ef7c:	18800035 	stwio	r2,0(r3)
    /*
     * Other interrupts are explicitly disabled if callbacks are registered
     * because there is no guarantee that they are preemption-safe.
     */
        status = (IORD_ALTERA_AVALON_MAILBOX_STS(dev->base)
 410ef80:	e0bfff17 	ldw	r2,-4(fp)
 410ef84:	10800a17 	ldw	r2,40(r2)
 410ef88:	10800204 	addi	r2,r2,8
 410ef8c:	10800037 	ldwio	r2,0(r2)
        		  & ALTERA_AVALON_MAILBOX_SIMPLE_STS_FULL_MSK) >> 1;
 410ef90:	1005d07a 	srai	r2,r2,1
        status = (IORD_ALTERA_AVALON_MAILBOX_STS(dev->base)
 410ef94:	1080004c 	andi	r2,r2,1
 410ef98:	e0bffe15 	stw	r2,-8(fp)
        if (dev->tx_cb)
 410ef9c:	e0bfff17 	ldw	r2,-4(fp)
 410efa0:	10800d17 	ldw	r2,52(r2)
 410efa4:	10001226 	beq	r2,zero,410eff0 <altera_avalon_mailbox_simple_tx_isr+0x114>
  NIOS2_READ_STATUS (context);
 410efa8:	0005303a 	rdctl	r2,status
 410efac:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 410efb0:	e0fff917 	ldw	r3,-28(fp)
 410efb4:	00bfff84 	movi	r2,-2
 410efb8:	1884703a 	and	r2,r3,r2
 410efbc:	1001703a 	wrctl	status,r2
  return context;
 410efc0:	e0bff917 	ldw	r2,-28(fp)
        {
            cpu_sr = alt_irq_disable_all();
 410efc4:	e0bffb15 	stw	r2,-20(fp)
  	        (dev->tx_cb)(message, status);
 410efc8:	e0bfff17 	ldw	r2,-4(fp)
 410efcc:	10800d17 	ldw	r2,52(r2)
 410efd0:	e17ffe17 	ldw	r5,-8(fp)
 410efd4:	e13ffd17 	ldw	r4,-12(fp)
 410efd8:	103ee83a 	callr	r2
 410efdc:	e0bffb17 	ldw	r2,-20(fp)
 410efe0:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
 410efe4:	e0bffa17 	ldw	r2,-24(fp)
 410efe8:	1001703a 	wrctl	status,r2
}
 410efec:	0001883a 	nop
            alt_irq_enable_all(cpu_sr);
        }
        /* Clear mailbox message to NULL after message being posted */
        dev->mbox_msg = NULL;
 410eff0:	e0bfff17 	ldw	r2,-4(fp)
 410eff4:	10001015 	stw	zero,64(r2)
        dev->lock = 0;
 410eff8:	e0bfff17 	ldw	r2,-4(fp)
 410effc:	10001105 	stb	zero,68(r2)
    }
}
 410f000:	0001883a 	nop
 410f004:	e037883a 	mov	sp,fp
 410f008:	dfc00117 	ldw	ra,4(sp)
 410f00c:	df000017 	ldw	fp,0(sp)
 410f010:	dec00204 	addi	sp,sp,8
 410f014:	f800283a 	ret

0410f018 <altera_avalon_mailbox_simple_rx_isr>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_mailbox_simple_rx_isr(void *context)
#else
static void altera_avalon_mailbox_simple_rx_isr(void *context, alt_u32 id)
#endif
{
 410f018:	defff704 	addi	sp,sp,-36
 410f01c:	dfc00815 	stw	ra,32(sp)
 410f020:	df000715 	stw	fp,28(sp)
 410f024:	df000704 	addi	fp,sp,28
 410f028:	e13ff915 	stw	r4,-28(fp)
    altera_avalon_mailbox_dev *dev = (altera_avalon_mailbox_dev*) context;
 410f02c:	e0bff917 	ldw	r2,-28(fp)
 410f030:	e0bfff15 	stw	r2,-4(fp)
    alt_irq_context cpu_sr;
    alt_u32 inbox[2];

    inbox[1] = (IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST));
 410f034:	e0bfff17 	ldw	r2,-4(fp)
 410f038:	10800a17 	ldw	r2,40(r2)
 410f03c:	10800104 	addi	r2,r2,4
 410f040:	10800037 	ldwio	r2,0(r2)
 410f044:	e0bffb15 	stw	r2,-20(fp)
    inbox[0] = (IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_CMD_OFST));
 410f048:	e0bfff17 	ldw	r2,-4(fp)
 410f04c:	10800a17 	ldw	r2,40(r2)
 410f050:	10800037 	ldwio	r2,0(r2)
 410f054:	e0bffa15 	stw	r2,-24(fp)

    /*
     * Other interrupts are explicitly disabled if callbacks are registered
     * because there is no guarantee that they are preemption-safe.
     */
    if (dev->rx_cb)
 410f058:	e0bfff17 	ldw	r2,-4(fp)
 410f05c:	10800e17 	ldw	r2,56(r2)
 410f060:	10001226 	beq	r2,zero,410f0ac <altera_avalon_mailbox_simple_rx_isr+0x94>
  NIOS2_READ_STATUS (context);
 410f064:	0005303a 	rdctl	r2,status
 410f068:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 410f06c:	e0fffc17 	ldw	r3,-16(fp)
 410f070:	00bfff84 	movi	r2,-2
 410f074:	1884703a 	and	r2,r3,r2
 410f078:	1001703a 	wrctl	status,r2
  return context;
 410f07c:	e0bffc17 	ldw	r2,-16(fp)
    {
        cpu_sr = alt_irq_disable_all();
 410f080:	e0bffe15 	stw	r2,-8(fp)
        (dev->rx_cb)(inbox);
 410f084:	e0bfff17 	ldw	r2,-4(fp)
 410f088:	10800e17 	ldw	r2,56(r2)
 410f08c:	e0fffa04 	addi	r3,fp,-24
 410f090:	1809883a 	mov	r4,r3
 410f094:	103ee83a 	callr	r2
 410f098:	e0bffe17 	ldw	r2,-8(fp)
 410f09c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context);
 410f0a0:	e0bffd17 	ldw	r2,-12(fp)
 410f0a4:	1001703a 	wrctl	status,r2
}
 410f0a8:	0001883a 	nop
        alt_irq_enable_all(cpu_sr);
    }
}
 410f0ac:	0001883a 	nop
 410f0b0:	e037883a 	mov	sp,fp
 410f0b4:	dfc00117 	ldw	ra,4(sp)
 410f0b8:	df000017 	ldw	fp,0(sp)
 410f0bc:	dec00204 	addi	sp,sp,8
 410f0c0:	f800283a 	ret

0410f0c4 <altera_avalon_mailbox_simple_init>:
 * Altera avalon mailbox init
 * Initialize mailbox device and identify sender/receiver mailbox
 */
void altera_avalon_mailbox_simple_init (altera_avalon_mailbox_dev *dev,
		                               int intr_id, int irq)
{
 410f0c4:	defffb04 	addi	sp,sp,-20
 410f0c8:	dfc00415 	stw	ra,16(sp)
 410f0cc:	df000315 	stw	fp,12(sp)
 410f0d0:	df000304 	addi	fp,sp,12
 410f0d4:	e13fff15 	stw	r4,-4(fp)
 410f0d8:	e17ffe15 	stw	r5,-8(fp)
 410f0dc:	e1bffd15 	stw	r6,-12(fp)
    alt_dev_llist_insert((alt_dev_llist*) dev, &alt_mailbox_simple_list);
 410f0e0:	d1600b04 	addi	r5,gp,-32724
 410f0e4:	e13fff17 	ldw	r4,-4(fp)
 410f0e8:	410fcf40 	call	410fcf4 <alt_dev_llist_insert>
    
    dev->mailbox_irq    = irq;
 410f0ec:	e0fffd17 	ldw	r3,-12(fp)
 410f0f0:	e0bfff17 	ldw	r2,-4(fp)
 410f0f4:	10c00b15 	stw	r3,44(r2)
    dev->mailbox_intr_ctrl_id = intr_id;
 410f0f8:	e0fffe17 	ldw	r3,-8(fp)
 410f0fc:	e0bfff17 	ldw	r2,-4(fp)
 410f100:	10c00c15 	stw	r3,48(r2)
    dev->rx_cb = NULL;
 410f104:	e0bfff17 	ldw	r2,-4(fp)
 410f108:	10000e15 	stw	zero,56(r2)
    dev->tx_cb = NULL;
 410f10c:	e0bfff17 	ldw	r2,-4(fp)
 410f110:	10000d15 	stw	zero,52(r2)
    dev->mbox_msg = NULL;
 410f114:	e0bfff17 	ldw	r2,-4(fp)
 410f118:	10001015 	stw	zero,64(r2)
    
    ALT_SEM_CREATE (&dev->write_lock, 1);

    altera_avalon_mailbox_identify(dev);
 410f11c:	e13fff17 	ldw	r4,-4(fp)
 410f120:	410edd80 	call	410edd8 <altera_avalon_mailbox_identify>
}
 410f124:	0001883a 	nop
 410f128:	e037883a 	mov	sp,fp
 410f12c:	dfc00117 	ldw	ra,4(sp)
 410f130:	df000017 	ldw	fp,0(sp)
 410f134:	dec00204 	addi	sp,sp,8
 410f138:	f800283a 	ret

0410f13c <altera_avalon_mailbox_open>:
 * Search the list of registered mailboxes for one with the supplied name.
 * The return value will be NULL on failure, and non-NULL otherwise.
 */
altera_avalon_mailbox_dev* altera_avalon_mailbox_open (const char *name,
		altera_mailbox_tx_cb tx_callback, altera_mailbox_rx_cb rx_callback)
{
 410f13c:	defff804 	addi	sp,sp,-32
 410f140:	dfc00715 	stw	ra,28(sp)
 410f144:	df000615 	stw	fp,24(sp)
 410f148:	df000604 	addi	fp,sp,24
 410f14c:	e13ffd15 	stw	r4,-12(fp)
 410f150:	e17ffc15 	stw	r5,-16(fp)
 410f154:	e1bffb15 	stw	r6,-20(fp)
    altera_avalon_mailbox_dev *dev;
    alt_u32 data;

    /* Find requested device */
    dev = (altera_avalon_mailbox_dev*) alt_find_dev (name, &alt_mailbox_simple_list);
 410f158:	d1600b04 	addi	r5,gp,-32724
 410f15c:	e13ffd17 	ldw	r4,-12(fp)
 410f160:	410fe640 	call	410fe64 <alt_find_dev>
 410f164:	e0bfff15 	stw	r2,-4(fp)
    if (dev == NULL)
 410f168:	e0bfff17 	ldw	r2,-4(fp)
 410f16c:	1000021e 	bne	r2,zero,410f178 <altera_avalon_mailbox_open+0x3c>
    {
        return NULL;
 410f170:	0005883a 	mov	r2,zero
 410f174:	00006506 	br	410f30c <altera_avalon_mailbox_open+0x1d0>
    }

    /* Mask mailbox interrupt before ISR is being registered. */
    data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST);
 410f178:	e0bfff17 	ldw	r2,-4(fp)
 410f17c:	10800a17 	ldw	r2,40(r2)
 410f180:	10800304 	addi	r2,r2,12
 410f184:	10800037 	ldwio	r2,0(r2)
 410f188:	e0bffe15 	stw	r2,-8(fp)
    if (dev->mbox_type == MBOX_TX) {
 410f18c:	e0bfff17 	ldw	r2,-4(fp)
 410f190:	10800f17 	ldw	r2,60(r2)
 410f194:	1000081e 	bne	r2,zero,410f1b8 <altera_avalon_mailbox_open+0x7c>
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, \
 410f198:	e0bfff17 	ldw	r2,-4(fp)
 410f19c:	10800a17 	ldw	r2,40(r2)
 410f1a0:	10800304 	addi	r2,r2,12
 410f1a4:	1009883a 	mov	r4,r2
 410f1a8:	e0fffe17 	ldw	r3,-8(fp)
 410f1ac:	00bfff44 	movi	r2,-3
 410f1b0:	1884703a 	and	r2,r3,r2
 410f1b4:	20800035 	stwio	r2,0(r4)
            (data & ~(ALTERA_AVALON_MAILBOX_SIMPLE_INTR_SPACE_MSK)));
    }
    if (dev->mbox_type == MBOX_RX) {
 410f1b8:	e0bfff17 	ldw	r2,-4(fp)
 410f1bc:	10800f17 	ldw	r2,60(r2)
 410f1c0:	10800058 	cmpnei	r2,r2,1
 410f1c4:	1000081e 	bne	r2,zero,410f1e8 <altera_avalon_mailbox_open+0xac>
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, \
 410f1c8:	e0bfff17 	ldw	r2,-4(fp)
 410f1cc:	10800a17 	ldw	r2,40(r2)
 410f1d0:	10800304 	addi	r2,r2,12
 410f1d4:	1009883a 	mov	r4,r2
 410f1d8:	e0fffe17 	ldw	r3,-8(fp)
 410f1dc:	00bfff84 	movi	r2,-2
 410f1e0:	1884703a 	and	r2,r3,r2
 410f1e4:	20800035 	stwio	r2,0(r4)
    }

    /* If IRQ not connected, return device pointer without ISR register,
     * in polling mode.
     */
    if (dev->mailbox_irq == ALT_IRQ_NOT_CONNECTED)
 410f1e8:	e0bfff17 	ldw	r2,-4(fp)
 410f1ec:	10800b17 	ldw	r2,44(r2)
 410f1f0:	10bfffd8 	cmpnei	r2,r2,-1
 410f1f4:	1000021e 	bne	r2,zero,410f200 <altera_avalon_mailbox_open+0xc4>
        return dev;
 410f1f8:	e0bfff17 	ldw	r2,-4(fp)
 410f1fc:	00004306 	br	410f30c <altera_avalon_mailbox_open+0x1d0>

    /* For IRQ connected case */

    if ((tx_callback == NULL) && (rx_callback == NULL))
 410f200:	e0bffc17 	ldw	r2,-16(fp)
 410f204:	1000041e 	bne	r2,zero,410f218 <altera_avalon_mailbox_open+0xdc>
 410f208:	e0bffb17 	ldw	r2,-20(fp)
 410f20c:	1000021e 	bne	r2,zero,410f218 <altera_avalon_mailbox_open+0xdc>
    {
    /* No callback, polling mode */
        return dev;
 410f210:	e0bfff17 	ldw	r2,-4(fp)
 410f214:	00003d06 	br	410f30c <altera_avalon_mailbox_open+0x1d0>
    }

    /* Ensure user correctly use the mailbox
     * Return - Null if wrong direction set
     */
    if (((dev->mbox_type == MBOX_TX) && (rx_callback != NULL)) ||
 410f218:	e0bfff17 	ldw	r2,-4(fp)
 410f21c:	10800f17 	ldw	r2,60(r2)
 410f220:	1000021e 	bne	r2,zero,410f22c <altera_avalon_mailbox_open+0xf0>
 410f224:	e0bffb17 	ldw	r2,-20(fp)
 410f228:	1000061e 	bne	r2,zero,410f244 <altera_avalon_mailbox_open+0x108>
	    ((dev->mbox_type == MBOX_RX) && (tx_callback != NULL)))
 410f22c:	e0bfff17 	ldw	r2,-4(fp)
 410f230:	10800f17 	ldw	r2,60(r2)
    if (((dev->mbox_type == MBOX_TX) && (rx_callback != NULL)) ||
 410f234:	10800058 	cmpnei	r2,r2,1
 410f238:	1000041e 	bne	r2,zero,410f24c <altera_avalon_mailbox_open+0x110>
	    ((dev->mbox_type == MBOX_RX) && (tx_callback != NULL)))
 410f23c:	e0bffc17 	ldw	r2,-16(fp)
 410f240:	10000226 	beq	r2,zero,410f24c <altera_avalon_mailbox_open+0x110>
  	  /* Invalid callback  */
        return NULL;
 410f244:	0005883a 	mov	r2,zero
 410f248:	00003006 	br	410f30c <altera_avalon_mailbox_open+0x1d0>

    /* IRQ is valid register callback
     * to current mailbox device
     */
    dev->tx_cb  = tx_callback;
 410f24c:	e0bfff17 	ldw	r2,-4(fp)
 410f250:	e0fffc17 	ldw	r3,-16(fp)
 410f254:	10c00d15 	stw	r3,52(r2)
    dev->rx_cb  = rx_callback;
 410f258:	e0bfff17 	ldw	r2,-4(fp)
 410f25c:	e0fffb17 	ldw	r3,-20(fp)
 410f260:	10c00e15 	stw	r3,56(r2)

    /* Register Mailbox's ISR */
    if (dev->mbox_type == MBOX_TX)
 410f264:	e0bfff17 	ldw	r2,-4(fp)
 410f268:	10800f17 	ldw	r2,60(r2)
 410f26c:	10000b1e 	bne	r2,zero,410f29c <altera_avalon_mailbox_open+0x160>
    {
    #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_ic_isr_register(dev->mailbox_intr_ctrl_id, dev->mailbox_irq, altera_avalon_mailbox_simple_tx_isr,
 410f270:	e0bfff17 	ldw	r2,-4(fp)
 410f274:	10c00c17 	ldw	r3,48(r2)
 410f278:	e0bfff17 	ldw	r2,-4(fp)
 410f27c:	10800b17 	ldw	r2,44(r2)
 410f280:	d8000015 	stw	zero,0(sp)
 410f284:	e1ffff17 	ldw	r7,-4(fp)
 410f288:	01810474 	movhi	r6,1041
 410f28c:	31bbb704 	addi	r6,r6,-4388
 410f290:	100b883a 	mov	r5,r2
 410f294:	1809883a 	mov	r4,r3
 410f298:	410ff140 	call	410ff14 <alt_ic_isr_register>
    #else
        alt_irq_register(dev->mailbox_irq, dev, altera_avalon_mailbox_simple_tx_isr);
    #endif
    }
  
    if (dev->mbox_type == MBOX_RX)
 410f29c:	e0bfff17 	ldw	r2,-4(fp)
 410f2a0:	10800f17 	ldw	r2,60(r2)
 410f2a4:	10800058 	cmpnei	r2,r2,1
 410f2a8:	1000171e 	bne	r2,zero,410f308 <altera_avalon_mailbox_open+0x1cc>
    {
    #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_ic_isr_register(dev->mailbox_intr_ctrl_id, dev->mailbox_irq, altera_avalon_mailbox_simple_rx_isr,
 410f2ac:	e0bfff17 	ldw	r2,-4(fp)
 410f2b0:	10c00c17 	ldw	r3,48(r2)
 410f2b4:	e0bfff17 	ldw	r2,-4(fp)
 410f2b8:	10800b17 	ldw	r2,44(r2)
 410f2bc:	d8000015 	stw	zero,0(sp)
 410f2c0:	e1ffff17 	ldw	r7,-4(fp)
 410f2c4:	01810474 	movhi	r6,1041
 410f2c8:	31bc0604 	addi	r6,r6,-4072
 410f2cc:	100b883a 	mov	r5,r2
 410f2d0:	1809883a 	mov	r4,r3
 410f2d4:	410ff140 	call	410ff14 <alt_ic_isr_register>
                            dev, NULL);
    #else
        alt_irq_register(dev->mailbox_irq, dev, altera_avalon_mailbox_simple_rx_isr);
    #endif
        /* Enable Receiver interrupt to listen mode */
        data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST) |
 410f2d8:	e0bfff17 	ldw	r2,-4(fp)
 410f2dc:	10800a17 	ldw	r2,40(r2)
 410f2e0:	10800304 	addi	r2,r2,12
 410f2e4:	10800037 	ldwio	r2,0(r2)
 410f2e8:	10800054 	ori	r2,r2,1
 410f2ec:	e0bffe15 	stw	r2,-8(fp)
  	             (ALTERA_AVALON_MAILBOX_SIMPLE_INTR_PEN_MSK);
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
 410f2f0:	e0bfff17 	ldw	r2,-4(fp)
 410f2f4:	10800a17 	ldw	r2,40(r2)
 410f2f8:	10800304 	addi	r2,r2,12
 410f2fc:	1007883a 	mov	r3,r2
 410f300:	e0bffe17 	ldw	r2,-8(fp)
 410f304:	18800035 	stwio	r2,0(r3)
    }
    return dev;
 410f308:	e0bfff17 	ldw	r2,-4(fp)
}
 410f30c:	e037883a 	mov	sp,fp
 410f310:	dfc00117 	ldw	ra,4(sp)
 410f314:	df000017 	ldw	fp,0(sp)
 410f318:	dec00204 	addi	sp,sp,8
 410f31c:	f800283a 	ret

0410f320 <altera_avalon_mailbox_close>:
/*
 * altera_avalon_mailbox_close
 * Disable mailbox interrupt and irq
 */
void altera_avalon_mailbox_close (altera_avalon_mailbox_dev *dev)
{
 410f320:	defffb04 	addi	sp,sp,-20
 410f324:	dfc00415 	stw	ra,16(sp)
 410f328:	df000315 	stw	fp,12(sp)
 410f32c:	df000304 	addi	fp,sp,12
 410f330:	e13ffe15 	stw	r4,-8(fp)
    alt_u32 data;
    if ((dev != NULL) && (dev->mailbox_irq != ALT_IRQ_NOT_CONNECTED))
 410f334:	e0bffe17 	ldw	r2,-8(fp)
 410f338:	10003926 	beq	r2,zero,410f420 <altera_avalon_mailbox_close+0x100>
 410f33c:	e0bffe17 	ldw	r2,-8(fp)
 410f340:	10800b17 	ldw	r2,44(r2)
 410f344:	10bfffe0 	cmpeqi	r2,r2,-1
 410f348:	1000351e 	bne	r2,zero,410f420 <altera_avalon_mailbox_close+0x100>
    {
        /* Mask interrupt */
        if (dev->mbox_type == MBOX_TX)
 410f34c:	e0bffe17 	ldw	r2,-8(fp)
 410f350:	10800f17 	ldw	r2,60(r2)
 410f354:	10000e1e 	bne	r2,zero,410f390 <altera_avalon_mailbox_close+0x70>
        {
            data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST) &
 410f358:	e0bffe17 	ldw	r2,-8(fp)
 410f35c:	10800a17 	ldw	r2,40(r2)
 410f360:	10800304 	addi	r2,r2,12
 410f364:	10800037 	ldwio	r2,0(r2)
 410f368:	1007883a 	mov	r3,r2
 410f36c:	00bfff44 	movi	r2,-3
 410f370:	1884703a 	and	r2,r3,r2
 410f374:	e0bfff15 	stw	r2,-4(fp)
                       (~ALTERA_AVALON_MAILBOX_SIMPLE_INTR_SPACE_MSK);
            IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
 410f378:	e0bffe17 	ldw	r2,-8(fp)
 410f37c:	10800a17 	ldw	r2,40(r2)
 410f380:	10800304 	addi	r2,r2,12
 410f384:	1007883a 	mov	r3,r2
 410f388:	e0bfff17 	ldw	r2,-4(fp)
 410f38c:	18800035 	stwio	r2,0(r3)
        }
        if (dev->mbox_type == MBOX_RX)
 410f390:	e0bffe17 	ldw	r2,-8(fp)
 410f394:	10800f17 	ldw	r2,60(r2)
 410f398:	10800058 	cmpnei	r2,r2,1
 410f39c:	10000e1e 	bne	r2,zero,410f3d8 <altera_avalon_mailbox_close+0xb8>
        {
            data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST) &
 410f3a0:	e0bffe17 	ldw	r2,-8(fp)
 410f3a4:	10800a17 	ldw	r2,40(r2)
 410f3a8:	10800304 	addi	r2,r2,12
 410f3ac:	10800037 	ldwio	r2,0(r2)
 410f3b0:	1007883a 	mov	r3,r2
 410f3b4:	00bfff84 	movi	r2,-2
 410f3b8:	1884703a 	and	r2,r3,r2
 410f3bc:	e0bfff15 	stw	r2,-4(fp)
                       (~ALTERA_AVALON_MAILBOX_SIMPLE_INTR_PEN_MSK);
            IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
 410f3c0:	e0bffe17 	ldw	r2,-8(fp)
 410f3c4:	10800a17 	ldw	r2,40(r2)
 410f3c8:	10800304 	addi	r2,r2,12
 410f3cc:	1007883a 	mov	r3,r2
 410f3d0:	e0bfff17 	ldw	r2,-4(fp)
 410f3d4:	18800035 	stwio	r2,0(r3)
        }
  
        /* De-register mailbox irq) */
        if (dev->mailbox_irq != ALT_IRQ_NOT_CONNECTED)
 410f3d8:	e0bffe17 	ldw	r2,-8(fp)
 410f3dc:	10800b17 	ldw	r2,44(r2)
 410f3e0:	10bfffe0 	cmpeqi	r2,r2,-1
 410f3e4:	10000a1e 	bne	r2,zero,410f410 <altera_avalon_mailbox_close+0xf0>
        {
        #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
            alt_ic_isr_register(dev->mailbox_intr_ctrl_id, dev->mailbox_irq, NULL,
 410f3e8:	e0bffe17 	ldw	r2,-8(fp)
 410f3ec:	10c00c17 	ldw	r3,48(r2)
 410f3f0:	e0bffe17 	ldw	r2,-8(fp)
 410f3f4:	10800b17 	ldw	r2,44(r2)
 410f3f8:	d8000015 	stw	zero,0(sp)
 410f3fc:	e1fffe17 	ldw	r7,-8(fp)
 410f400:	000d883a 	mov	r6,zero
 410f404:	100b883a 	mov	r5,r2
 410f408:	1809883a 	mov	r4,r3
 410f40c:	410ff140 	call	410ff14 <alt_ic_isr_register>
        #else
            alt_irq_register(dev->mailbox_irq, dev, NULL);
        #endif
        }
        /* De-registering callback to mailbox */
        dev->tx_cb  = NULL;
 410f410:	e0bffe17 	ldw	r2,-8(fp)
 410f414:	10000d15 	stw	zero,52(r2)
        dev->rx_cb  = NULL;
 410f418:	e0bffe17 	ldw	r2,-8(fp)
 410f41c:	10000e15 	stw	zero,56(r2)
    }
}
 410f420:	0001883a 	nop
 410f424:	e037883a 	mov	sp,fp
 410f428:	dfc00117 	ldw	ra,4(sp)
 410f42c:	df000017 	ldw	fp,0(sp)
 410f430:	dec00204 	addi	sp,sp,8
 410f434:	f800283a 	ret

0410f438 <altera_avalon_mailbox_status>:
 *   Return 0 when mailbox is empty or no pending message
 *   Return 1 when mailbox space is full or there is a message pending
 */

alt_u32 altera_avalon_mailbox_status (altera_avalon_mailbox_dev *dev)
{
 410f438:	defffd04 	addi	sp,sp,-12
 410f43c:	df000215 	stw	fp,8(sp)
 410f440:	df000204 	addi	fp,sp,8
 410f444:	e13ffe15 	stw	r4,-8(fp)
    alt_u32 mailbox_sts = 0;
 410f448:	e03fff15 	stw	zero,-4(fp)

    mailbox_sts = (IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_STS_OFST) & ALTERA_AVALON_MAILBOX_SIMPLE_STS_MSK);
 410f44c:	e0bffe17 	ldw	r2,-8(fp)
 410f450:	10800a17 	ldw	r2,40(r2)
 410f454:	10800204 	addi	r2,r2,8
 410f458:	10800037 	ldwio	r2,0(r2)
 410f45c:	108000cc 	andi	r2,r2,3
 410f460:	e0bfff15 	stw	r2,-4(fp)

    if (dev->mbox_type == MBOX_TX)
 410f464:	e0bffe17 	ldw	r2,-8(fp)
 410f468:	10800f17 	ldw	r2,60(r2)
 410f46c:	1000041e 	bne	r2,zero,410f480 <altera_avalon_mailbox_status+0x48>
        mailbox_sts = (mailbox_sts & ALTERA_AVALON_MAILBOX_SIMPLE_STS_FULL_MSK) >> 1;
 410f470:	e0bfff17 	ldw	r2,-4(fp)
 410f474:	1004d07a 	srli	r2,r2,1
 410f478:	1080004c 	andi	r2,r2,1
 410f47c:	e0bfff15 	stw	r2,-4(fp)

    if (dev->mbox_type == MBOX_RX)
 410f480:	e0bffe17 	ldw	r2,-8(fp)
 410f484:	10800f17 	ldw	r2,60(r2)
 410f488:	10800058 	cmpnei	r2,r2,1
 410f48c:	1000031e 	bne	r2,zero,410f49c <altera_avalon_mailbox_status+0x64>
        mailbox_sts = mailbox_sts & ALTERA_AVALON_MAILBOX_SIMPLE_STS_PENDING_MSK;
 410f490:	e0bfff17 	ldw	r2,-4(fp)
 410f494:	1080004c 	andi	r2,r2,1
 410f498:	e0bfff15 	stw	r2,-4(fp)

    return mailbox_sts;
 410f49c:	e0bfff17 	ldw	r2,-4(fp)
}
 410f4a0:	e037883a 	mov	sp,fp
 410f4a4:	df000017 	ldw	fp,0(sp)
 410f4a8:	dec00104 	addi	sp,sp,4
 410f4ac:	f800283a 	ret

0410f4b0 <altera_avalon_mailbox_send>:
 * For polling mode, '0' timeout value for infinite polling
 * otherwise timeout when expired
 */
int altera_avalon_mailbox_send
(altera_avalon_mailbox_dev *dev, void *message, int timeout, EventType event)
{
 410f4b0:	defff704 	addi	sp,sp,-36
 410f4b4:	dfc00815 	stw	ra,32(sp)
 410f4b8:	df000715 	stw	fp,28(sp)
 410f4bc:	df000704 	addi	fp,sp,28
 410f4c0:	e13ffc15 	stw	r4,-16(fp)
 410f4c4:	e17ffb15 	stw	r5,-20(fp)
 410f4c8:	e1bffa15 	stw	r6,-24(fp)
 410f4cc:	e1fff915 	stw	r7,-28(fp)
    int status = 0;
 410f4d0:	e03fff15 	stw	zero,-4(fp)
     * Obtain the "write_lock"semaphore to ensures 
     * that writing to the device is thread-safe in multi-thread enviroment
     */
    ALT_SEM_PEND (dev->write_lock, 0);

    if (dev->lock || (IORD_ALTERA_AVALON_MAILBOX_STS(dev->base)
 410f4d4:	e0bffc17 	ldw	r2,-16(fp)
 410f4d8:	10801103 	ldbu	r2,68(r2)
 410f4dc:	10803fcc 	andi	r2,r2,255
 410f4e0:	1000061e 	bne	r2,zero,410f4fc <altera_avalon_mailbox_send+0x4c>
 410f4e4:	e0bffc17 	ldw	r2,-16(fp)
 410f4e8:	10800a17 	ldw	r2,40(r2)
 410f4ec:	10800204 	addi	r2,r2,8
 410f4f0:	10800037 	ldwio	r2,0(r2)
    		          & ALTERA_AVALON_MAILBOX_SIMPLE_STS_FULL_MSK))
 410f4f4:	1080008c 	andi	r2,r2,2
    if (dev->lock || (IORD_ALTERA_AVALON_MAILBOX_STS(dev->base)
 410f4f8:	10000226 	beq	r2,zero,410f504 <altera_avalon_mailbox_send+0x54>
    {
    	/* dev is lock or no free space to send */
    	return -1;
 410f4fc:	00bfffc4 	movi	r2,-1
 410f500:	00003a06 	br	410f5ec <altera_avalon_mailbox_send+0x13c>
    }
    else
    {
        dev->mbox_msg = message;
 410f504:	e0bffc17 	ldw	r2,-16(fp)
 410f508:	e0fffb17 	ldw	r3,-20(fp)
 410f50c:	10c01015 	stw	r3,64(r2)
        dev->lock = 1;
 410f510:	e0bffc17 	ldw	r2,-16(fp)
 410f514:	00c00044 	movi	r3,1
 410f518:	10c01105 	stb	r3,68(r2)
     */
    ALT_SEM_POST (dev->write_lock);



    if ((dev->mailbox_irq == ALT_IRQ_NOT_CONNECTED) || (event==POLL))
 410f51c:	e0bffc17 	ldw	r2,-16(fp)
 410f520:	10800b17 	ldw	r2,44(r2)
 410f524:	10bfffe0 	cmpeqi	r2,r2,-1
 410f528:	1000031e 	bne	r2,zero,410f538 <altera_avalon_mailbox_send+0x88>
 410f52c:	e0bff917 	ldw	r2,-28(fp)
 410f530:	10800058 	cmpnei	r2,r2,1
 410f534:	1000201e 	bne	r2,zero,410f5b8 <altera_avalon_mailbox_send+0x108>
    {
        /* Polling mode */
        if (timeout ==0)
 410f538:	e0bffa17 	ldw	r2,-24(fp)
 410f53c:	1000061e 	bne	r2,zero,410f558 <altera_avalon_mailbox_send+0xa8>
        {
            do
            {
                mbox_status = altera_avalon_mailbox_status(dev);
 410f540:	e13ffc17 	ldw	r4,-16(fp)
 410f544:	410f4380 	call	410f438 <altera_avalon_mailbox_status>
 410f548:	e0bffd15 	stw	r2,-12(fp)
            } while (mbox_status);
 410f54c:	e0bffd17 	ldw	r2,-12(fp)
 410f550:	103ffb1e 	bne	r2,zero,410f540 <altera_avalon_mailbox_send+0x90>
 410f554:	00000e06 	br	410f590 <altera_avalon_mailbox_send+0xe0>
        } else
        {
            do
            {
                mbox_status = altera_avalon_mailbox_status(dev);
 410f558:	e13ffc17 	ldw	r4,-16(fp)
 410f55c:	410f4380 	call	410f438 <altera_avalon_mailbox_status>
 410f560:	e0bffd15 	stw	r2,-12(fp)
                timeout--;
 410f564:	e0bffa17 	ldw	r2,-24(fp)
 410f568:	10bfffc4 	addi	r2,r2,-1
 410f56c:	e0bffa15 	stw	r2,-24(fp)
            } while (mbox_status && (timeout != 0));
 410f570:	e0bffd17 	ldw	r2,-12(fp)
 410f574:	10000226 	beq	r2,zero,410f580 <altera_avalon_mailbox_send+0xd0>
 410f578:	e0bffa17 	ldw	r2,-24(fp)
 410f57c:	103ff61e 	bne	r2,zero,410f558 <altera_avalon_mailbox_send+0xa8>
            if (timeout == 0)
 410f580:	e0bffa17 	ldw	r2,-24(fp)
 410f584:	1000021e 	bne	r2,zero,410f590 <altera_avalon_mailbox_send+0xe0>
            {    /* Timeout occur or fail sending */
                return -ETIME;
 410f588:	00bff084 	movi	r2,-62
 410f58c:	00001706 	br	410f5ec <altera_avalon_mailbox_send+0x13c>
            }
        }
        status = altera_avalon_mailbox_post (dev, message);
 410f590:	e17ffb17 	ldw	r5,-20(fp)
 410f594:	e13ffc17 	ldw	r4,-16(fp)
 410f598:	410ee640 	call	410ee64 <altera_avalon_mailbox_post>
 410f59c:	e0bfff15 	stw	r2,-4(fp)
        /* Clear mailbox message to NULL after message being posted */
        dev->mbox_msg = NULL;
 410f5a0:	e0bffc17 	ldw	r2,-16(fp)
 410f5a4:	10001015 	stw	zero,64(r2)
        /* Release lock when message posted */
        dev->lock =0;
 410f5a8:	e0bffc17 	ldw	r2,-16(fp)
 410f5ac:	10001105 	stb	zero,68(r2)
        return status;
 410f5b0:	e0bfff17 	ldw	r2,-4(fp)
 410f5b4:	00000d06 	br	410f5ec <altera_avalon_mailbox_send+0x13c>
    } else
    {
        /* Enable Sender interrupt */
        data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST) |
 410f5b8:	e0bffc17 	ldw	r2,-16(fp)
 410f5bc:	10800a17 	ldw	r2,40(r2)
 410f5c0:	10800304 	addi	r2,r2,12
 410f5c4:	10800037 	ldwio	r2,0(r2)
 410f5c8:	10800094 	ori	r2,r2,2
 410f5cc:	e0bffe15 	stw	r2,-8(fp)
                   (ALTERA_AVALON_MAILBOX_SIMPLE_INTR_SPACE_MSK);
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
 410f5d0:	e0bffc17 	ldw	r2,-16(fp)
 410f5d4:	10800a17 	ldw	r2,40(r2)
 410f5d8:	10800304 	addi	r2,r2,12
 410f5dc:	1007883a 	mov	r3,r2
 410f5e0:	e0bffe17 	ldw	r2,-8(fp)
 410f5e4:	18800035 	stwio	r2,0(r3)
    }
  return 0;
 410f5e8:	0005883a 	mov	r2,zero
}
 410f5ec:	e037883a 	mov	sp,fp
 410f5f0:	dfc00117 	ldw	ra,4(sp)
 410f5f4:	df000017 	ldw	fp,0(sp)
 410f5f8:	dec00204 	addi	sp,sp,8
 410f5fc:	f800283a 	ret

0410f600 <altera_avalon_mailbox_retrieve_poll>:
 * If a message is available in the mailbox return it otherwise return NULL
 * This function is blocking
 *
 */
int altera_avalon_mailbox_retrieve_poll (altera_avalon_mailbox_dev *dev, alt_u32 *message, alt_u32 timeout)
{
 410f600:	defff904 	addi	sp,sp,-28
 410f604:	dfc00615 	stw	ra,24(sp)
 410f608:	df000515 	stw	fp,20(sp)
 410f60c:	df000504 	addi	fp,sp,20
 410f610:	e13ffd15 	stw	r4,-12(fp)
 410f614:	e17ffc15 	stw	r5,-16(fp)
 410f618:	e1bffb15 	stw	r6,-20(fp)
    alt_u32 status = 0;
 410f61c:	e03fff15 	stw	zero,-4(fp)
    alt_u32 data;

    if (dev != NULL && message != NULL)
 410f620:	e0bffd17 	ldw	r2,-12(fp)
 410f624:	10003a26 	beq	r2,zero,410f710 <altera_avalon_mailbox_retrieve_poll+0x110>
 410f628:	e0bffc17 	ldw	r2,-16(fp)
 410f62c:	10003826 	beq	r2,zero,410f710 <altera_avalon_mailbox_retrieve_poll+0x110>
    {
        /* Mask receiver mailbox interrupt when in polling mode */
        data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST);
 410f630:	e0bffd17 	ldw	r2,-12(fp)
 410f634:	10800a17 	ldw	r2,40(r2)
 410f638:	10800304 	addi	r2,r2,12
 410f63c:	10800037 	ldwio	r2,0(r2)
 410f640:	e0bffe15 	stw	r2,-8(fp)
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST,
 410f644:	e0bffd17 	ldw	r2,-12(fp)
 410f648:	10800a17 	ldw	r2,40(r2)
 410f64c:	10800304 	addi	r2,r2,12
 410f650:	1009883a 	mov	r4,r2
 410f654:	e0fffe17 	ldw	r3,-8(fp)
 410f658:	00bfff84 	movi	r2,-2
 410f65c:	1884703a 	and	r2,r3,r2
 410f660:	20800035 	stwio	r2,0(r4)
            (data & (~ALTERA_AVALON_MAILBOX_SIMPLE_INTR_PEN_MSK)));


        /* If timeout is '0', poll till message availabe in mailbox */
        if (timeout == 0)
 410f664:	e0bffb17 	ldw	r2,-20(fp)
 410f668:	1000061e 	bne	r2,zero,410f684 <altera_avalon_mailbox_retrieve_poll+0x84>
        {
            do
            {
                status = altera_avalon_mailbox_status (dev);
 410f66c:	e13ffd17 	ldw	r4,-12(fp)
 410f670:	410f4380 	call	410f438 <altera_avalon_mailbox_status>
 410f674:	e0bfff15 	stw	r2,-4(fp)
            } while (status == 0);
 410f678:	e0bfff17 	ldw	r2,-4(fp)
 410f67c:	103ffb26 	beq	r2,zero,410f66c <altera_avalon_mailbox_retrieve_poll+0x6c>
 410f680:	00000a06 	br	410f6ac <altera_avalon_mailbox_retrieve_poll+0xac>
        } else
        {
            do
            {
                 status = altera_avalon_mailbox_status (dev);
 410f684:	e13ffd17 	ldw	r4,-12(fp)
 410f688:	410f4380 	call	410f438 <altera_avalon_mailbox_status>
 410f68c:	e0bfff15 	stw	r2,-4(fp)
                 timeout-- ;
 410f690:	e0bffb17 	ldw	r2,-20(fp)
 410f694:	10bfffc4 	addi	r2,r2,-1
 410f698:	e0bffb15 	stw	r2,-20(fp)
            } while ((status == 0) && timeout);
 410f69c:	e0bfff17 	ldw	r2,-4(fp)
 410f6a0:	1000021e 	bne	r2,zero,410f6ac <altera_avalon_mailbox_retrieve_poll+0xac>
 410f6a4:	e0bffb17 	ldw	r2,-20(fp)
 410f6a8:	103ff61e 	bne	r2,zero,410f684 <altera_avalon_mailbox_retrieve_poll+0x84>
        }

        /* if timeout, status remain 0 */
        if (status)
 410f6ac:	e0bfff17 	ldw	r2,-4(fp)
 410f6b0:	10000d26 	beq	r2,zero,410f6e8 <altera_avalon_mailbox_retrieve_poll+0xe8>
        {
            message[1] = (IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST));
 410f6b4:	e0bffd17 	ldw	r2,-12(fp)
 410f6b8:	10800a17 	ldw	r2,40(r2)
 410f6bc:	10800104 	addi	r2,r2,4
 410f6c0:	10c00037 	ldwio	r3,0(r2)
 410f6c4:	e0bffc17 	ldw	r2,-16(fp)
 410f6c8:	10800104 	addi	r2,r2,4
 410f6cc:	10c00015 	stw	r3,0(r2)
            message[0] = (IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_CMD_OFST));
 410f6d0:	e0bffd17 	ldw	r2,-12(fp)
 410f6d4:	10800a17 	ldw	r2,40(r2)
 410f6d8:	10800037 	ldwio	r2,0(r2)
 410f6dc:	1007883a 	mov	r3,r2
 410f6e0:	e0bffc17 	ldw	r2,-16(fp)
 410f6e4:	10c00015 	stw	r3,0(r2)
        }
        /* Restore original state of interrupt mask */
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
 410f6e8:	e0bffd17 	ldw	r2,-12(fp)
 410f6ec:	10800a17 	ldw	r2,40(r2)
 410f6f0:	10800304 	addi	r2,r2,12
 410f6f4:	1007883a 	mov	r3,r2
 410f6f8:	e0bffe17 	ldw	r2,-8(fp)
 410f6fc:	18800035 	stwio	r2,0(r3)

        /* Return success on complete retrieve message
         * otherwise timeout and exit with error
         */
        if (status)
 410f700:	e0bfff17 	ldw	r2,-4(fp)
 410f704:	10000226 	beq	r2,zero,410f710 <altera_avalon_mailbox_retrieve_poll+0x110>
          return 0;
 410f708:	0005883a 	mov	r2,zero
 410f70c:	00000606 	br	410f728 <altera_avalon_mailbox_retrieve_poll+0x128>
      }
      /* Invalid Null dev and message */
      message[1] = 0;
 410f710:	e0bffc17 	ldw	r2,-16(fp)
 410f714:	10800104 	addi	r2,r2,4
 410f718:	10000015 	stw	zero,0(r2)
      message[0] = 0;
 410f71c:	e0bffc17 	ldw	r2,-16(fp)
 410f720:	10000015 	stw	zero,0(r2)
      return -EINVAL;
 410f724:	00bffa84 	movi	r2,-22
}
 410f728:	e037883a 	mov	sp,fp
 410f72c:	dfc00117 	ldw	ra,4(sp)
 410f730:	df000017 	ldw	fp,0(sp)
 410f734:	dec00204 	addi	sp,sp,8
 410f738:	f800283a 	ret

0410f73c <alt_get_errno>:
{
 410f73c:	defffe04 	addi	sp,sp,-8
 410f740:	dfc00115 	stw	ra,4(sp)
 410f744:	df000015 	stw	fp,0(sp)
 410f748:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 410f74c:	d0a00917 	ldw	r2,-32732(gp)
 410f750:	10000326 	beq	r2,zero,410f760 <alt_get_errno+0x24>
 410f754:	d0a00917 	ldw	r2,-32732(gp)
 410f758:	103ee83a 	callr	r2
 410f75c:	00000106 	br	410f764 <alt_get_errno+0x28>
 410f760:	d0a74304 	addi	r2,gp,-25332
}
 410f764:	e037883a 	mov	sp,fp
 410f768:	dfc00117 	ldw	ra,4(sp)
 410f76c:	df000017 	ldw	fp,0(sp)
 410f770:	dec00204 	addi	sp,sp,8
 410f774:	f800283a 	ret

0410f778 <alt_mutex_trylock>:
 *
 * returns 0 on success -1 otherwise
 *
 */
static int alt_mutex_trylock( alt_mutex_dev* dev, alt_u32 value )
{
 410f778:	defff904 	addi	sp,sp,-28
 410f77c:	df000615 	stw	fp,24(sp)
 410f780:	df000604 	addi	fp,sp,24
 410f784:	e13ffb15 	stw	r4,-20(fp)
 410f788:	e17ffa15 	stw	r5,-24(fp)
  alt_u32 id, data, check;
  int ret_code = -1;
 410f78c:	00bfffc4 	movi	r2,-1
 410f790:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_READ_CPUID(id);
 410f794:	0005317a 	rdctl	r2,cpuid
 410f798:	e0bffe15 	stw	r2,-8(fp)

  /* the data we want the mutex to hold */
  data = (id << ALTERA_AVALON_MUTEX_MUTEX_OWNER_OFST) | value;
 410f79c:	e0bffe17 	ldw	r2,-8(fp)
 410f7a0:	1004943a 	slli	r2,r2,16
 410f7a4:	e0fffa17 	ldw	r3,-24(fp)
 410f7a8:	1884b03a 	or	r2,r3,r2
 410f7ac:	e0bffd15 	stw	r2,-12(fp)

  /* attempt to write to the mutex */
  IOWR_ALTERA_AVALON_MUTEX_MUTEX(dev->mutex_base, data);
 410f7b0:	e0bffb17 	ldw	r2,-20(fp)
 410f7b4:	10800317 	ldw	r2,12(r2)
 410f7b8:	e0fffd17 	ldw	r3,-12(fp)
 410f7bc:	10c00035 	stwio	r3,0(r2)
  
  check = IORD_ALTERA_AVALON_MUTEX_MUTEX(dev->mutex_base);
 410f7c0:	e0bffb17 	ldw	r2,-20(fp)
 410f7c4:	10800317 	ldw	r2,12(r2)
 410f7c8:	10800037 	ldwio	r2,0(r2)
 410f7cc:	e0bffc15 	stw	r2,-16(fp)

  if ( check == data)
 410f7d0:	e0fffc17 	ldw	r3,-16(fp)
 410f7d4:	e0bffd17 	ldw	r2,-12(fp)
 410f7d8:	1880011e 	bne	r3,r2,410f7e0 <alt_mutex_trylock+0x68>
  {
    ret_code = 0;
 410f7dc:	e03fff15 	stw	zero,-4(fp)
  }

  return ret_code;
 410f7e0:	e0bfff17 	ldw	r2,-4(fp)
}
 410f7e4:	e037883a 	mov	sp,fp
 410f7e8:	df000017 	ldw	fp,0(sp)
 410f7ec:	dec00104 	addi	sp,sp,4
 410f7f0:	f800283a 	ret

0410f7f4 <altera_avalon_mutex_open>:
 * Search the list of registered mutexes for one with the supplied name.
 *
 * The return value will be NULL on failure, and non-NULL otherwise.
 */
alt_mutex_dev* altera_avalon_mutex_open (const char* name)
{
 410f7f4:	defffc04 	addi	sp,sp,-16
 410f7f8:	dfc00315 	stw	ra,12(sp)
 410f7fc:	df000215 	stw	fp,8(sp)
 410f800:	df000204 	addi	fp,sp,8
 410f804:	e13ffe15 	stw	r4,-8(fp)
  alt_mutex_dev* dev;

  dev = (alt_mutex_dev*) alt_find_dev (name, &alt_mutex_list);
 410f808:	d1600d04 	addi	r5,gp,-32716
 410f80c:	e13ffe17 	ldw	r4,-8(fp)
 410f810:	410fe640 	call	410fe64 <alt_find_dev>
 410f814:	e0bfff15 	stw	r2,-4(fp)

  if (NULL == dev)
 410f818:	e0bfff17 	ldw	r2,-4(fp)
 410f81c:	1000041e 	bne	r2,zero,410f830 <altera_avalon_mutex_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
 410f820:	410f73c0 	call	410f73c <alt_get_errno>
 410f824:	1007883a 	mov	r3,r2
 410f828:	008004c4 	movi	r2,19
 410f82c:	18800015 	stw	r2,0(r3)
  }

  return dev;
 410f830:	e0bfff17 	ldw	r2,-4(fp)
}
 410f834:	e037883a 	mov	sp,fp
 410f838:	dfc00117 	ldw	ra,4(sp)
 410f83c:	df000017 	ldw	fp,0(sp)
 410f840:	dec00204 	addi	sp,sp,8
 410f844:	f800283a 	ret

0410f848 <altera_avalon_mutex_close>:
 * altera_avalon_mutex_close - Does nothing at the moment, but included for 
 * completeness
 *
 */
void altera_avalon_mutex_close (alt_mutex_dev* dev)
{
 410f848:	defffe04 	addi	sp,sp,-8
 410f84c:	df000115 	stw	fp,4(sp)
 410f850:	df000104 	addi	fp,sp,4
 410f854:	e13fff15 	stw	r4,-4(fp)
  return;
 410f858:	0001883a 	nop
}
 410f85c:	e037883a 	mov	sp,fp
 410f860:	df000017 	ldw	fp,0(sp)
 410f864:	dec00104 	addi	sp,sp,4
 410f868:	f800283a 	ret

0410f86c <altera_avalon_mutex_lock>:
/*
 * altera_avalon_mutex_lock - Lock the hardware mutex
 *
 */
void altera_avalon_mutex_lock( alt_mutex_dev* dev, alt_u32 value )
{
 410f86c:	defffc04 	addi	sp,sp,-16
 410f870:	dfc00315 	stw	ra,12(sp)
 410f874:	df000215 	stw	fp,8(sp)
 410f878:	df000204 	addi	fp,sp,8
 410f87c:	e13fff15 	stw	r4,-4(fp)
 410f880:	e17ffe15 	stw	r5,-8(fp)
   * semaphore. This ensures that reading from the device is thread-safe.
   */

  ALT_SEM_PEND (dev->lock, 0);

  while ( alt_mutex_trylock( dev, value ) != 0);
 410f884:	0001883a 	nop
 410f888:	e17ffe17 	ldw	r5,-8(fp)
 410f88c:	e13fff17 	ldw	r4,-4(fp)
 410f890:	410f7780 	call	410f778 <alt_mutex_trylock>
 410f894:	103ffc1e 	bne	r2,zero,410f888 <altera_avalon_mutex_lock+0x1c>
}
 410f898:	0001883a 	nop
 410f89c:	0001883a 	nop
 410f8a0:	e037883a 	mov	sp,fp
 410f8a4:	dfc00117 	ldw	ra,4(sp)
 410f8a8:	df000017 	ldw	fp,0(sp)
 410f8ac:	dec00204 	addi	sp,sp,8
 410f8b0:	f800283a 	ret

0410f8b4 <altera_avalon_mutex_trylock>:
 *
 * returns 0 on success -1 otherwise
 *
 */
int altera_avalon_mutex_trylock( alt_mutex_dev* dev, alt_u32 value )
{
 410f8b4:	defffb04 	addi	sp,sp,-20
 410f8b8:	dfc00415 	stw	ra,16(sp)
 410f8bc:	df000315 	stw	fp,12(sp)
 410f8c0:	df000304 	addi	fp,sp,12
 410f8c4:	e13ffe15 	stw	r4,-8(fp)
 410f8c8:	e17ffd15 	stw	r5,-12(fp)
  int ret_code;

  ALT_SEM_PEND (dev->lock, 0);

  ret_code = alt_mutex_trylock( dev, value);
 410f8cc:	e17ffd17 	ldw	r5,-12(fp)
 410f8d0:	e13ffe17 	ldw	r4,-8(fp)
 410f8d4:	410f7780 	call	410f778 <alt_mutex_trylock>
 410f8d8:	e0bfff15 	stw	r2,-4(fp)
  if (ret_code)
  {
    ALT_SEM_POST (dev->lock);
  }

  return ret_code;
 410f8dc:	e0bfff17 	ldw	r2,-4(fp)
}
 410f8e0:	e037883a 	mov	sp,fp
 410f8e4:	dfc00117 	ldw	ra,4(sp)
 410f8e8:	df000017 	ldw	fp,0(sp)
 410f8ec:	dec00204 	addi	sp,sp,8
 410f8f0:	f800283a 	ret

0410f8f4 <altera_avalon_mutex_unlock>:
 * This function does not check that you own the Mutex if you try to release
 * a Mutex you do not own the behaviour is undefined
 *
 */
void altera_avalon_mutex_unlock( alt_mutex_dev* dev )
{
 410f8f4:	defffd04 	addi	sp,sp,-12
 410f8f8:	df000215 	stw	fp,8(sp)
 410f8fc:	df000204 	addi	fp,sp,8
 410f900:	e13ffe15 	stw	r4,-8(fp)
  alt_u32 id;
  NIOS2_READ_CPUID(id);
 410f904:	0005317a 	rdctl	r2,cpuid
 410f908:	e0bfff15 	stw	r2,-4(fp)

  /*
  * This Mutex has been claimed and released since Reset so clear the Reset bit
  * This MUST happen before we release the MUTEX
  */
  IOWR_ALTERA_AVALON_MUTEX_RESET(dev->mutex_base, 
 410f90c:	e0bffe17 	ldw	r2,-8(fp)
 410f910:	10800317 	ldw	r2,12(r2)
 410f914:	10800104 	addi	r2,r2,4
 410f918:	00c00044 	movi	r3,1
 410f91c:	10c00035 	stwio	r3,0(r2)
                                  ALTERA_AVALON_MUTEX_RESET_RESET_MSK);
  IOWR_ALTERA_AVALON_MUTEX_MUTEX(dev->mutex_base, 
 410f920:	e0bffe17 	ldw	r2,-8(fp)
 410f924:	10800317 	ldw	r2,12(r2)
 410f928:	e0ffff17 	ldw	r3,-4(fp)
 410f92c:	1806943a 	slli	r3,r3,16
 410f930:	10c00035 	stwio	r3,0(r2)

  /*
  * Now that access to the hardware Mutex is complete, release the thread lock
  */
  ALT_SEM_POST (dev->lock);
}
 410f934:	0001883a 	nop
 410f938:	e037883a 	mov	sp,fp
 410f93c:	df000017 	ldw	fp,0(sp)
 410f940:	dec00104 	addi	sp,sp,4
 410f944:	f800283a 	ret

0410f948 <altera_avalon_mutex_is_mine>:
 * altera_avalon_mutex_is_mine - Do I own the Mutex?
 *
 *  returns non zero if the mutex is owned by this CPU
 */
int altera_avalon_mutex_is_mine( alt_mutex_dev* dev )
{
 410f948:	defff904 	addi	sp,sp,-28
 410f94c:	df000615 	stw	fp,24(sp)
 410f950:	df000604 	addi	fp,sp,24
 410f954:	e13ffa15 	stw	r4,-24(fp)
  alt_u32 id, data, owner, value;
  int ret_code = 0;
 410f958:	e03fff15 	stw	zero,-4(fp)

  NIOS2_READ_CPUID(id);
 410f95c:	0005317a 	rdctl	r2,cpuid
 410f960:	e0bffe15 	stw	r2,-8(fp)

  /* retrieve the contents of the mutex */
  data = IORD_ALTERA_AVALON_MUTEX_MUTEX(dev->mutex_base);
 410f964:	e0bffa17 	ldw	r2,-24(fp)
 410f968:	10800317 	ldw	r2,12(r2)
 410f96c:	10800037 	ldwio	r2,0(r2)
 410f970:	e0bffd15 	stw	r2,-12(fp)
  owner = (data & ALTERA_AVALON_MUTEX_MUTEX_OWNER_MSK) >> 
 410f974:	e0bffd17 	ldw	r2,-12(fp)
 410f978:	1004d43a 	srli	r2,r2,16
 410f97c:	e0bffc15 	stw	r2,-16(fp)
              ALTERA_AVALON_MUTEX_MUTEX_OWNER_OFST;

  if (owner == id) 
 410f980:	e0fffc17 	ldw	r3,-16(fp)
 410f984:	e0bffe17 	ldw	r2,-8(fp)
 410f988:	1880071e 	bne	r3,r2,410f9a8 <altera_avalon_mutex_is_mine+0x60>
  {
    value = (data & ALTERA_AVALON_MUTEX_MUTEX_VALUE_MSK) >> 
 410f98c:	e0bffd17 	ldw	r2,-12(fp)
 410f990:	10bfffcc 	andi	r2,r2,65535
 410f994:	e0bffb15 	stw	r2,-20(fp)
                  ALTERA_AVALON_MUTEX_MUTEX_VALUE_OFST;
    if (value != 0)
 410f998:	e0bffb17 	ldw	r2,-20(fp)
 410f99c:	10000226 	beq	r2,zero,410f9a8 <altera_avalon_mutex_is_mine+0x60>
    {
      ret_code = 1;
 410f9a0:	00800044 	movi	r2,1
 410f9a4:	e0bfff15 	stw	r2,-4(fp)
    }
  }

  return ret_code;
 410f9a8:	e0bfff17 	ldw	r2,-4(fp)
}
 410f9ac:	e037883a 	mov	sp,fp
 410f9b0:	df000017 	ldw	fp,0(sp)
 410f9b4:	dec00104 	addi	sp,sp,4
 410f9b8:	f800283a 	ret

0410f9bc <altera_avalon_mutex_first_lock>:
 *
 * Has this Mutex been released since reset if not return 1
 * otherwise return 0
 */
int altera_avalon_mutex_first_lock( alt_mutex_dev* dev )
{
 410f9bc:	defffc04 	addi	sp,sp,-16
 410f9c0:	df000315 	stw	fp,12(sp)
 410f9c4:	df000304 	addi	fp,sp,12
 410f9c8:	e13ffd15 	stw	r4,-12(fp)
  alt_u32 data;
  int ret_code = 0;
 410f9cc:	e03fff15 	stw	zero,-4(fp)

  data = IORD_ALTERA_AVALON_MUTEX_RESET(dev->mutex_base);
 410f9d0:	e0bffd17 	ldw	r2,-12(fp)
 410f9d4:	10800317 	ldw	r2,12(r2)
 410f9d8:	10800104 	addi	r2,r2,4
 410f9dc:	10800037 	ldwio	r2,0(r2)
 410f9e0:	e0bffe15 	stw	r2,-8(fp)

  if (data & ALTERA_AVALON_MUTEX_RESET_RESET_MSK) 
 410f9e4:	e0bffe17 	ldw	r2,-8(fp)
 410f9e8:	1080004c 	andi	r2,r2,1
 410f9ec:	10000226 	beq	r2,zero,410f9f8 <altera_avalon_mutex_first_lock+0x3c>
  {
    ret_code = 1;
 410f9f0:	00800044 	movi	r2,1
 410f9f4:	e0bfff15 	stw	r2,-4(fp)
  }

  return ret_code;
 410f9f8:	e0bfff17 	ldw	r2,-4(fp)
}
 410f9fc:	e037883a 	mov	sp,fp
 410fa00:	df000017 	ldw	fp,0(sp)
 410fa04:	dec00104 	addi	sp,sp,4
 410fa08:	f800283a 	ret

0410fa0c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 410fa0c:	defff504 	addi	sp,sp,-44
 410fa10:	df000a15 	stw	fp,40(sp)
 410fa14:	df000a04 	addi	fp,sp,40
 410fa18:	e13ff915 	stw	r4,-28(fp)
 410fa1c:	e17ff815 	stw	r5,-32(fp)
 410fa20:	e1bff715 	stw	r6,-36(fp)
 410fa24:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 410fa28:	e03fff15 	stw	zero,-4(fp)
 410fa2c:	d0a74917 	ldw	r2,-25308(gp)
  
  if (alt_ticks_per_second ())
 410fa30:	10003e26 	beq	r2,zero,410fb2c <alt_alarm_start+0x120>
  {
    if (alarm)
 410fa34:	e0bff917 	ldw	r2,-28(fp)
 410fa38:	10003a26 	beq	r2,zero,410fb24 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
 410fa3c:	e0bff917 	ldw	r2,-28(fp)
 410fa40:	e0fff717 	ldw	r3,-36(fp)
 410fa44:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 410fa48:	e0bff917 	ldw	r2,-28(fp)
 410fa4c:	e0fff617 	ldw	r3,-40(fp)
 410fa50:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
 410fa54:	0005303a 	rdctl	r2,status
 410fa58:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 410fa5c:	e0fffd17 	ldw	r3,-12(fp)
 410fa60:	00bfff84 	movi	r2,-2
 410fa64:	1884703a 	and	r2,r3,r2
 410fa68:	1001703a 	wrctl	status,r2
  return context;
 410fa6c:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
 410fa70:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 410fa74:	d0a74a17 	ldw	r2,-25304(gp)
      
      current_nticks = alt_nticks();
 410fa78:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 410fa7c:	e0fff817 	ldw	r3,-32(fp)
 410fa80:	e0bfff17 	ldw	r2,-4(fp)
 410fa84:	1885883a 	add	r2,r3,r2
 410fa88:	10c00044 	addi	r3,r2,1
 410fa8c:	e0bff917 	ldw	r2,-28(fp)
 410fa90:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 410fa94:	e0bff917 	ldw	r2,-28(fp)
 410fa98:	10c00217 	ldw	r3,8(r2)
 410fa9c:	e0bfff17 	ldw	r2,-4(fp)
 410faa0:	1880042e 	bgeu	r3,r2,410fab4 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 410faa4:	e0bff917 	ldw	r2,-28(fp)
 410faa8:	00c00044 	movi	r3,1
 410faac:	10c00405 	stb	r3,16(r2)
 410fab0:	00000206 	br	410fabc <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 410fab4:	e0bff917 	ldw	r2,-28(fp)
 410fab8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 410fabc:	e0bff917 	ldw	r2,-28(fp)
 410fac0:	d0e01004 	addi	r3,gp,-32704
 410fac4:	e0fffb15 	stw	r3,-20(fp)
 410fac8:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 410facc:	e0bffa17 	ldw	r2,-24(fp)
 410fad0:	e0fffb17 	ldw	r3,-20(fp)
 410fad4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 410fad8:	e0bffb17 	ldw	r2,-20(fp)
 410fadc:	10c00017 	ldw	r3,0(r2)
 410fae0:	e0bffa17 	ldw	r2,-24(fp)
 410fae4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 410fae8:	e0bffb17 	ldw	r2,-20(fp)
 410faec:	10800017 	ldw	r2,0(r2)
 410faf0:	e0fffa17 	ldw	r3,-24(fp)
 410faf4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 410faf8:	e0bffb17 	ldw	r2,-20(fp)
 410fafc:	e0fffa17 	ldw	r3,-24(fp)
 410fb00:	10c00015 	stw	r3,0(r2)
}
 410fb04:	0001883a 	nop
 410fb08:	e0bffe17 	ldw	r2,-8(fp)
 410fb0c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 410fb10:	e0bffc17 	ldw	r2,-16(fp)
 410fb14:	1001703a 	wrctl	status,r2
}
 410fb18:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
 410fb1c:	0005883a 	mov	r2,zero
 410fb20:	00000306 	br	410fb30 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
 410fb24:	00bffa84 	movi	r2,-22
 410fb28:	00000106 	br	410fb30 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
 410fb2c:	00bfde84 	movi	r2,-134
  }
}
 410fb30:	e037883a 	mov	sp,fp
 410fb34:	df000017 	ldw	fp,0(sp)
 410fb38:	dec00104 	addi	sp,sp,4
 410fb3c:	f800283a 	ret

0410fb40 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 410fb40:	defffa04 	addi	sp,sp,-24
 410fb44:	dfc00515 	stw	ra,20(sp)
 410fb48:	df000415 	stw	fp,16(sp)
 410fb4c:	df000404 	addi	fp,sp,16
 410fb50:	e13ffc15 	stw	r4,-16(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
 410fb54:	00800244 	movi	r2,9
 410fb58:	e0bffe15 	stw	r2,-8(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 410fb5c:	014003f4 	movhi	r5,15
 410fb60:	29509004 	addi	r5,r5,16960
 410fb64:	e13ffe17 	ldw	r4,-8(fp)
 410fb68:	410aec00 	call	410aec0 <__mulsi3>
 410fb6c:	100b883a 	mov	r5,r2
 410fb70:	0100bef4 	movhi	r4,763
 410fb74:	213c2004 	addi	r4,r4,-3968
 410fb78:	410046c0 	call	410046c <__udivsi3>
  big_loops = us / (INT_MAX/
 410fb7c:	100b883a 	mov	r5,r2
 410fb80:	01200034 	movhi	r4,32768
 410fb84:	213fffc4 	addi	r4,r4,-1
 410fb88:	410046c0 	call	410046c <__udivsi3>
 410fb8c:	100b883a 	mov	r5,r2
 410fb90:	e13ffc17 	ldw	r4,-16(fp)
 410fb94:	410046c0 	call	410046c <__udivsi3>
 410fb98:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
 410fb9c:	e0bffd17 	ldw	r2,-12(fp)
 410fba0:	10002a26 	beq	r2,zero,410fc4c <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 410fba4:	e03fff15 	stw	zero,-4(fp)
 410fba8:	00001706 	br	410fc08 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 410fbac:	00a00034 	movhi	r2,32768
 410fbb0:	10bfffc4 	addi	r2,r2,-1
 410fbb4:	10bfffc4 	addi	r2,r2,-1
 410fbb8:	103ffe1e 	bne	r2,zero,410fbb4 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 410fbbc:	014003f4 	movhi	r5,15
 410fbc0:	29509004 	addi	r5,r5,16960
 410fbc4:	e13ffe17 	ldw	r4,-8(fp)
 410fbc8:	410aec00 	call	410aec0 <__mulsi3>
      us -= (INT_MAX/(ALT_CPU_FREQ/
 410fbcc:	100b883a 	mov	r5,r2
 410fbd0:	0100bef4 	movhi	r4,763
 410fbd4:	213c2004 	addi	r4,r4,-3968
 410fbd8:	410046c0 	call	410046c <__udivsi3>
 410fbdc:	100b883a 	mov	r5,r2
 410fbe0:	01200034 	movhi	r4,32768
 410fbe4:	213fffc4 	addi	r4,r4,-1
 410fbe8:	410046c0 	call	410046c <__udivsi3>
 410fbec:	1007883a 	mov	r3,r2
 410fbf0:	e0bffc17 	ldw	r2,-16(fp)
 410fbf4:	10c5c83a 	sub	r2,r2,r3
 410fbf8:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
 410fbfc:	e0bfff17 	ldw	r2,-4(fp)
 410fc00:	10800044 	addi	r2,r2,1
 410fc04:	e0bfff15 	stw	r2,-4(fp)
 410fc08:	e0ffff17 	ldw	r3,-4(fp)
 410fc0c:	e0bffd17 	ldw	r2,-12(fp)
 410fc10:	18bfe616 	blt	r3,r2,410fbac <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 410fc14:	014003f4 	movhi	r5,15
 410fc18:	29509004 	addi	r5,r5,16960
 410fc1c:	e13ffe17 	ldw	r4,-8(fp)
 410fc20:	410aec00 	call	410aec0 <__mulsi3>
 410fc24:	100b883a 	mov	r5,r2
 410fc28:	0100bef4 	movhi	r4,763
 410fc2c:	213c2004 	addi	r4,r4,-3968
 410fc30:	410046c0 	call	410046c <__udivsi3>
 410fc34:	e17ffc17 	ldw	r5,-16(fp)
 410fc38:	1009883a 	mov	r4,r2
 410fc3c:	410aec00 	call	410aec0 <__mulsi3>
    __asm__ volatile (
 410fc40:	10bfffc4 	addi	r2,r2,-1
 410fc44:	103ffe1e 	bne	r2,zero,410fc40 <alt_busy_sleep+0x100>
 410fc48:	00000d06 	br	410fc80 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 410fc4c:	014003f4 	movhi	r5,15
 410fc50:	29509004 	addi	r5,r5,16960
 410fc54:	e13ffe17 	ldw	r4,-8(fp)
 410fc58:	410aec00 	call	410aec0 <__mulsi3>
 410fc5c:	100b883a 	mov	r5,r2
 410fc60:	0100bef4 	movhi	r4,763
 410fc64:	213c2004 	addi	r4,r4,-3968
 410fc68:	410046c0 	call	410046c <__udivsi3>
 410fc6c:	e17ffc17 	ldw	r5,-16(fp)
 410fc70:	1009883a 	mov	r4,r2
 410fc74:	410aec00 	call	410aec0 <__mulsi3>
    __asm__ volatile (
 410fc78:	10bfffc4 	addi	r2,r2,-1
 410fc7c:	00bffe16 	blt	zero,r2,410fc78 <alt_busy_sleep+0x138>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 410fc80:	0005883a 	mov	r2,zero
}
 410fc84:	e037883a 	mov	sp,fp
 410fc88:	dfc00117 	ldw	ra,4(sp)
 410fc8c:	df000017 	ldw	fp,0(sp)
 410fc90:	dec00204 	addi	sp,sp,8
 410fc94:	f800283a 	ret

0410fc98 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 410fc98:	deffff04 	addi	sp,sp,-4
 410fc9c:	df000015 	stw	fp,0(sp)
 410fca0:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 410fca4:	0001883a 	nop
 410fca8:	e037883a 	mov	sp,fp
 410fcac:	df000017 	ldw	fp,0(sp)
 410fcb0:	dec00104 	addi	sp,sp,4
 410fcb4:	f800283a 	ret

0410fcb8 <alt_get_errno>:
{
 410fcb8:	defffe04 	addi	sp,sp,-8
 410fcbc:	dfc00115 	stw	ra,4(sp)
 410fcc0:	df000015 	stw	fp,0(sp)
 410fcc4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 410fcc8:	d0a00917 	ldw	r2,-32732(gp)
 410fccc:	10000326 	beq	r2,zero,410fcdc <alt_get_errno+0x24>
 410fcd0:	d0a00917 	ldw	r2,-32732(gp)
 410fcd4:	103ee83a 	callr	r2
 410fcd8:	00000106 	br	410fce0 <alt_get_errno+0x28>
 410fcdc:	d0a74304 	addi	r2,gp,-25332
}
 410fce0:	e037883a 	mov	sp,fp
 410fce4:	dfc00117 	ldw	ra,4(sp)
 410fce8:	df000017 	ldw	fp,0(sp)
 410fcec:	dec00204 	addi	sp,sp,8
 410fcf0:	f800283a 	ret

0410fcf4 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 410fcf4:	defffa04 	addi	sp,sp,-24
 410fcf8:	dfc00515 	stw	ra,20(sp)
 410fcfc:	df000415 	stw	fp,16(sp)
 410fd00:	df000404 	addi	fp,sp,16
 410fd04:	e13ffd15 	stw	r4,-12(fp)
 410fd08:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 410fd0c:	e0bffd17 	ldw	r2,-12(fp)
 410fd10:	10000326 	beq	r2,zero,410fd20 <alt_dev_llist_insert+0x2c>
 410fd14:	e0bffd17 	ldw	r2,-12(fp)
 410fd18:	10800217 	ldw	r2,8(r2)
 410fd1c:	1000061e 	bne	r2,zero,410fd38 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 410fd20:	410fcb80 	call	410fcb8 <alt_get_errno>
 410fd24:	1007883a 	mov	r3,r2
 410fd28:	00800584 	movi	r2,22
 410fd2c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 410fd30:	00bffa84 	movi	r2,-22
 410fd34:	00001406 	br	410fd88 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 410fd38:	e0bffd17 	ldw	r2,-12(fp)
 410fd3c:	e0fffc17 	ldw	r3,-16(fp)
 410fd40:	e0ffff15 	stw	r3,-4(fp)
 410fd44:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
 410fd48:	e0bffe17 	ldw	r2,-8(fp)
 410fd4c:	e0ffff17 	ldw	r3,-4(fp)
 410fd50:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 410fd54:	e0bfff17 	ldw	r2,-4(fp)
 410fd58:	10c00017 	ldw	r3,0(r2)
 410fd5c:	e0bffe17 	ldw	r2,-8(fp)
 410fd60:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
 410fd64:	e0bfff17 	ldw	r2,-4(fp)
 410fd68:	10800017 	ldw	r2,0(r2)
 410fd6c:	e0fffe17 	ldw	r3,-8(fp)
 410fd70:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 410fd74:	e0bfff17 	ldw	r2,-4(fp)
 410fd78:	e0fffe17 	ldw	r3,-8(fp)
 410fd7c:	10c00015 	stw	r3,0(r2)
}
 410fd80:	0001883a 	nop

  return 0;  
 410fd84:	0005883a 	mov	r2,zero
}
 410fd88:	e037883a 	mov	sp,fp
 410fd8c:	dfc00117 	ldw	ra,4(sp)
 410fd90:	df000017 	ldw	fp,0(sp)
 410fd94:	dec00204 	addi	sp,sp,8
 410fd98:	f800283a 	ret

0410fd9c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 410fd9c:	defffd04 	addi	sp,sp,-12
 410fda0:	dfc00215 	stw	ra,8(sp)
 410fda4:	df000115 	stw	fp,4(sp)
 410fda8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 410fdac:	00810474 	movhi	r2,1041
 410fdb0:	10830204 	addi	r2,r2,3080
 410fdb4:	e0bfff15 	stw	r2,-4(fp)
 410fdb8:	00000606 	br	410fdd4 <_do_ctors+0x38>
        (*ctor) (); 
 410fdbc:	e0bfff17 	ldw	r2,-4(fp)
 410fdc0:	10800017 	ldw	r2,0(r2)
 410fdc4:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 410fdc8:	e0bfff17 	ldw	r2,-4(fp)
 410fdcc:	10bfff04 	addi	r2,r2,-4
 410fdd0:	e0bfff15 	stw	r2,-4(fp)
 410fdd4:	e0ffff17 	ldw	r3,-4(fp)
 410fdd8:	00810474 	movhi	r2,1041
 410fddc:	10830304 	addi	r2,r2,3084
 410fde0:	18bff62e 	bgeu	r3,r2,410fdbc <_do_ctors+0x20>
}
 410fde4:	0001883a 	nop
 410fde8:	0001883a 	nop
 410fdec:	e037883a 	mov	sp,fp
 410fdf0:	dfc00117 	ldw	ra,4(sp)
 410fdf4:	df000017 	ldw	fp,0(sp)
 410fdf8:	dec00204 	addi	sp,sp,8
 410fdfc:	f800283a 	ret

0410fe00 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 410fe00:	defffd04 	addi	sp,sp,-12
 410fe04:	dfc00215 	stw	ra,8(sp)
 410fe08:	df000115 	stw	fp,4(sp)
 410fe0c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 410fe10:	00810474 	movhi	r2,1041
 410fe14:	10830204 	addi	r2,r2,3080
 410fe18:	e0bfff15 	stw	r2,-4(fp)
 410fe1c:	00000606 	br	410fe38 <_do_dtors+0x38>
        (*dtor) (); 
 410fe20:	e0bfff17 	ldw	r2,-4(fp)
 410fe24:	10800017 	ldw	r2,0(r2)
 410fe28:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 410fe2c:	e0bfff17 	ldw	r2,-4(fp)
 410fe30:	10bfff04 	addi	r2,r2,-4
 410fe34:	e0bfff15 	stw	r2,-4(fp)
 410fe38:	e0ffff17 	ldw	r3,-4(fp)
 410fe3c:	00810474 	movhi	r2,1041
 410fe40:	10830304 	addi	r2,r2,3084
 410fe44:	18bff62e 	bgeu	r3,r2,410fe20 <_do_dtors+0x20>
}
 410fe48:	0001883a 	nop
 410fe4c:	0001883a 	nop
 410fe50:	e037883a 	mov	sp,fp
 410fe54:	dfc00117 	ldw	ra,4(sp)
 410fe58:	df000017 	ldw	fp,0(sp)
 410fe5c:	dec00204 	addi	sp,sp,8
 410fe60:	f800283a 	ret

0410fe64 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 410fe64:	defffa04 	addi	sp,sp,-24
 410fe68:	dfc00515 	stw	ra,20(sp)
 410fe6c:	df000415 	stw	fp,16(sp)
 410fe70:	df000404 	addi	fp,sp,16
 410fe74:	e13ffd15 	stw	r4,-12(fp)
 410fe78:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
 410fe7c:	e0bffc17 	ldw	r2,-16(fp)
 410fe80:	10800017 	ldw	r2,0(r2)
 410fe84:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 410fe88:	e13ffd17 	ldw	r4,-12(fp)
 410fe8c:	4106f540 	call	4106f54 <strlen>
 410fe90:	10800044 	addi	r2,r2,1
 410fe94:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 410fe98:	00000d06 	br	410fed0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 410fe9c:	e0bfff17 	ldw	r2,-4(fp)
 410fea0:	10800217 	ldw	r2,8(r2)
 410fea4:	e0fffe17 	ldw	r3,-8(fp)
 410fea8:	180d883a 	mov	r6,r3
 410feac:	e17ffd17 	ldw	r5,-12(fp)
 410feb0:	1009883a 	mov	r4,r2
 410feb4:	41109e40 	call	41109e4 <memcmp>
 410feb8:	1000021e 	bne	r2,zero,410fec4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 410febc:	e0bfff17 	ldw	r2,-4(fp)
 410fec0:	00000706 	br	410fee0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 410fec4:	e0bfff17 	ldw	r2,-4(fp)
 410fec8:	10800017 	ldw	r2,0(r2)
 410fecc:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
 410fed0:	e0ffff17 	ldw	r3,-4(fp)
 410fed4:	e0bffc17 	ldw	r2,-16(fp)
 410fed8:	18bff01e 	bne	r3,r2,410fe9c <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
 410fedc:	0005883a 	mov	r2,zero
}
 410fee0:	e037883a 	mov	sp,fp
 410fee4:	dfc00117 	ldw	ra,4(sp)
 410fee8:	df000017 	ldw	fp,0(sp)
 410feec:	dec00204 	addi	sp,sp,8
 410fef0:	f800283a 	ret

0410fef4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 410fef4:	deffff04 	addi	sp,sp,-4
 410fef8:	df000015 	stw	fp,0(sp)
 410fefc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 410ff00:	0001883a 	nop
 410ff04:	e037883a 	mov	sp,fp
 410ff08:	df000017 	ldw	fp,0(sp)
 410ff0c:	dec00104 	addi	sp,sp,4
 410ff10:	f800283a 	ret

0410ff14 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 410ff14:	defff904 	addi	sp,sp,-28
 410ff18:	dfc00615 	stw	ra,24(sp)
 410ff1c:	df000515 	stw	fp,20(sp)
 410ff20:	df000504 	addi	fp,sp,20
 410ff24:	e13fff15 	stw	r4,-4(fp)
 410ff28:	e17ffe15 	stw	r5,-8(fp)
 410ff2c:	e1bffd15 	stw	r6,-12(fp)
 410ff30:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 410ff34:	e0800217 	ldw	r2,8(fp)
 410ff38:	d8800015 	stw	r2,0(sp)
 410ff3c:	e1fffc17 	ldw	r7,-16(fp)
 410ff40:	e1bffd17 	ldw	r6,-12(fp)
 410ff44:	e17ffe17 	ldw	r5,-8(fp)
 410ff48:	e13fff17 	ldw	r4,-4(fp)
 410ff4c:	41100c40 	call	41100c4 <alt_iic_isr_register>
}  
 410ff50:	e037883a 	mov	sp,fp
 410ff54:	dfc00117 	ldw	ra,4(sp)
 410ff58:	df000017 	ldw	fp,0(sp)
 410ff5c:	dec00204 	addi	sp,sp,8
 410ff60:	f800283a 	ret

0410ff64 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 410ff64:	defff904 	addi	sp,sp,-28
 410ff68:	df000615 	stw	fp,24(sp)
 410ff6c:	df000604 	addi	fp,sp,24
 410ff70:	e13ffb15 	stw	r4,-20(fp)
 410ff74:	e17ffa15 	stw	r5,-24(fp)
 410ff78:	e0bffa17 	ldw	r2,-24(fp)
 410ff7c:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
 410ff80:	0005303a 	rdctl	r2,status
 410ff84:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 410ff88:	e0fffe17 	ldw	r3,-8(fp)
 410ff8c:	00bfff84 	movi	r2,-2
 410ff90:	1884703a 	and	r2,r3,r2
 410ff94:	1001703a 	wrctl	status,r2
  return context;
 410ff98:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 410ff9c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
 410ffa0:	00c00044 	movi	r3,1
 410ffa4:	e0bfff17 	ldw	r2,-4(fp)
 410ffa8:	1884983a 	sll	r2,r3,r2
 410ffac:	1007883a 	mov	r3,r2
 410ffb0:	d0a74817 	ldw	r2,-25312(gp)
 410ffb4:	1884b03a 	or	r2,r3,r2
 410ffb8:	d0a74815 	stw	r2,-25312(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 410ffbc:	d0a74817 	ldw	r2,-25312(gp)
 410ffc0:	100170fa 	wrctl	ienable,r2
 410ffc4:	e0bffd17 	ldw	r2,-12(fp)
 410ffc8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 410ffcc:	e0bffc17 	ldw	r2,-16(fp)
 410ffd0:	1001703a 	wrctl	status,r2
}
 410ffd4:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
 410ffd8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
 410ffdc:	e037883a 	mov	sp,fp
 410ffe0:	df000017 	ldw	fp,0(sp)
 410ffe4:	dec00104 	addi	sp,sp,4
 410ffe8:	f800283a 	ret

0410ffec <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 410ffec:	defff904 	addi	sp,sp,-28
 410fff0:	df000615 	stw	fp,24(sp)
 410fff4:	df000604 	addi	fp,sp,24
 410fff8:	e13ffb15 	stw	r4,-20(fp)
 410fffc:	e17ffa15 	stw	r5,-24(fp)
 4110000:	e0bffa17 	ldw	r2,-24(fp)
 4110004:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
 4110008:	0005303a 	rdctl	r2,status
 411000c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4110010:	e0fffe17 	ldw	r3,-8(fp)
 4110014:	00bfff84 	movi	r2,-2
 4110018:	1884703a 	and	r2,r3,r2
 411001c:	1001703a 	wrctl	status,r2
  return context;
 4110020:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
 4110024:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
 4110028:	00c00044 	movi	r3,1
 411002c:	e0bfff17 	ldw	r2,-4(fp)
 4110030:	1884983a 	sll	r2,r3,r2
 4110034:	0084303a 	nor	r2,zero,r2
 4110038:	1007883a 	mov	r3,r2
 411003c:	d0a74817 	ldw	r2,-25312(gp)
 4110040:	1884703a 	and	r2,r3,r2
 4110044:	d0a74815 	stw	r2,-25312(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 4110048:	d0a74817 	ldw	r2,-25312(gp)
 411004c:	100170fa 	wrctl	ienable,r2
 4110050:	e0bffd17 	ldw	r2,-12(fp)
 4110054:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 4110058:	e0bffc17 	ldw	r2,-16(fp)
 411005c:	1001703a 	wrctl	status,r2
}
 4110060:	0001883a 	nop
  return 0;
 4110064:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
 4110068:	e037883a 	mov	sp,fp
 411006c:	df000017 	ldw	fp,0(sp)
 4110070:	dec00104 	addi	sp,sp,4
 4110074:	f800283a 	ret

04110078 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 4110078:	defffc04 	addi	sp,sp,-16
 411007c:	df000315 	stw	fp,12(sp)
 4110080:	df000304 	addi	fp,sp,12
 4110084:	e13ffe15 	stw	r4,-8(fp)
 4110088:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 411008c:	000530fa 	rdctl	r2,ienable
 4110090:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 4110094:	00c00044 	movi	r3,1
 4110098:	e0bffd17 	ldw	r2,-12(fp)
 411009c:	1884983a 	sll	r2,r3,r2
 41100a0:	1007883a 	mov	r3,r2
 41100a4:	e0bfff17 	ldw	r2,-4(fp)
 41100a8:	1884703a 	and	r2,r3,r2
 41100ac:	1004c03a 	cmpne	r2,r2,zero
 41100b0:	10803fcc 	andi	r2,r2,255
}
 41100b4:	e037883a 	mov	sp,fp
 41100b8:	df000017 	ldw	fp,0(sp)
 41100bc:	dec00104 	addi	sp,sp,4
 41100c0:	f800283a 	ret

041100c4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 41100c4:	defff504 	addi	sp,sp,-44
 41100c8:	dfc00a15 	stw	ra,40(sp)
 41100cc:	df000915 	stw	fp,36(sp)
 41100d0:	df000904 	addi	fp,sp,36
 41100d4:	e13ffa15 	stw	r4,-24(fp)
 41100d8:	e17ff915 	stw	r5,-28(fp)
 41100dc:	e1bff815 	stw	r6,-32(fp)
 41100e0:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
 41100e4:	00bffa84 	movi	r2,-22
 41100e8:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 41100ec:	e0bff917 	ldw	r2,-28(fp)
 41100f0:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 41100f4:	e0bffe17 	ldw	r2,-8(fp)
 41100f8:	10800808 	cmpgei	r2,r2,32
 41100fc:	1000251e 	bne	r2,zero,4110194 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
 4110100:	0005303a 	rdctl	r2,status
 4110104:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4110108:	e0fffc17 	ldw	r3,-16(fp)
 411010c:	00bfff84 	movi	r2,-2
 4110110:	1884703a 	and	r2,r3,r2
 4110114:	1001703a 	wrctl	status,r2
  return context;
 4110118:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 411011c:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
 4110120:	e0bffe17 	ldw	r2,-8(fp)
 4110124:	100890fa 	slli	r4,r2,3
 4110128:	e0fff817 	ldw	r3,-32(fp)
 411012c:	00810474 	movhi	r2,1041
 4110130:	2085883a 	add	r2,r4,r2
 4110134:	10d33215 	stw	r3,19656(r2)
    alt_irq[id].context = isr_context;
 4110138:	e0bffe17 	ldw	r2,-8(fp)
 411013c:	100890fa 	slli	r4,r2,3
 4110140:	e0fff717 	ldw	r3,-36(fp)
 4110144:	00810474 	movhi	r2,1041
 4110148:	2085883a 	add	r2,r4,r2
 411014c:	10d33315 	stw	r3,19660(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 4110150:	e0bff817 	ldw	r2,-32(fp)
 4110154:	10000526 	beq	r2,zero,411016c <alt_iic_isr_register+0xa8>
 4110158:	e0bffe17 	ldw	r2,-8(fp)
 411015c:	100b883a 	mov	r5,r2
 4110160:	e13ffa17 	ldw	r4,-24(fp)
 4110164:	410ff640 	call	410ff64 <alt_ic_irq_enable>
 4110168:	00000406 	br	411017c <alt_iic_isr_register+0xb8>
 411016c:	e0bffe17 	ldw	r2,-8(fp)
 4110170:	100b883a 	mov	r5,r2
 4110174:	e13ffa17 	ldw	r4,-24(fp)
 4110178:	410ffec0 	call	410ffec <alt_ic_irq_disable>
 411017c:	e0bfff15 	stw	r2,-4(fp)
 4110180:	e0bffd17 	ldw	r2,-12(fp)
 4110184:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
 4110188:	e0bffb17 	ldw	r2,-20(fp)
 411018c:	1001703a 	wrctl	status,r2
}
 4110190:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
 4110194:	e0bfff17 	ldw	r2,-4(fp)
}
 4110198:	e037883a 	mov	sp,fp
 411019c:	dfc00117 	ldw	ra,4(sp)
 41101a0:	df000017 	ldw	fp,0(sp)
 41101a4:	dec00204 	addi	sp,sp,8
 41101a8:	f800283a 	ret

041101ac <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 41101ac:	defff904 	addi	sp,sp,-28
 41101b0:	dfc00615 	stw	ra,24(sp)
 41101b4:	df000515 	stw	fp,20(sp)
 41101b8:	df000504 	addi	fp,sp,20
 41101bc:	e13ffe15 	stw	r4,-8(fp)
 41101c0:	e17ffd15 	stw	r5,-12(fp)
 41101c4:	e1bffc15 	stw	r6,-16(fp)
 41101c8:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
 41101cc:	e1bffb17 	ldw	r6,-20(fp)
 41101d0:	e17ffc17 	ldw	r5,-16(fp)
 41101d4:	e13ffd17 	ldw	r4,-12(fp)
 41101d8:	41104140 	call	4110414 <open>
 41101dc:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
 41101e0:	e0bfff17 	ldw	r2,-4(fp)
 41101e4:	10002016 	blt	r2,zero,4110268 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
 41101e8:	e0ffff17 	ldw	r3,-4(fp)
 41101ec:	1805883a 	mov	r2,r3
 41101f0:	1085883a 	add	r2,r2,r2
 41101f4:	10c5883a 	add	r2,r2,r3
 41101f8:	100490ba 	slli	r2,r2,2
 41101fc:	00c10474 	movhi	r3,1041
 4110200:	10c7883a 	add	r3,r2,r3
 4110204:	18c73417 	ldw	r3,7376(r3)
 4110208:	e0bffe17 	ldw	r2,-8(fp)
 411020c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 4110210:	e0ffff17 	ldw	r3,-4(fp)
 4110214:	1805883a 	mov	r2,r3
 4110218:	1085883a 	add	r2,r2,r2
 411021c:	10c5883a 	add	r2,r2,r3
 4110220:	100490ba 	slli	r2,r2,2
 4110224:	00c10474 	movhi	r3,1041
 4110228:	10c7883a 	add	r3,r2,r3
 411022c:	18c73517 	ldw	r3,7380(r3)
 4110230:	e0bffe17 	ldw	r2,-8(fp)
 4110234:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 4110238:	e0ffff17 	ldw	r3,-4(fp)
 411023c:	1805883a 	mov	r2,r3
 4110240:	1085883a 	add	r2,r2,r2
 4110244:	10c5883a 	add	r2,r2,r3
 4110248:	100490ba 	slli	r2,r2,2
 411024c:	00c10474 	movhi	r3,1041
 4110250:	10c7883a 	add	r3,r2,r3
 4110254:	18c73617 	ldw	r3,7384(r3)
 4110258:	e0bffe17 	ldw	r2,-8(fp)
 411025c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 4110260:	e13fff17 	ldw	r4,-4(fp)
 4110264:	410df200 	call	410df20 <alt_release_fd>
  }
} 
 4110268:	0001883a 	nop
 411026c:	e037883a 	mov	sp,fp
 4110270:	dfc00117 	ldw	ra,4(sp)
 4110274:	df000017 	ldw	fp,0(sp)
 4110278:	dec00204 	addi	sp,sp,8
 411027c:	f800283a 	ret

04110280 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 4110280:	defffb04 	addi	sp,sp,-20
 4110284:	dfc00415 	stw	ra,16(sp)
 4110288:	df000315 	stw	fp,12(sp)
 411028c:	df000304 	addi	fp,sp,12
 4110290:	e13fff15 	stw	r4,-4(fp)
 4110294:	e17ffe15 	stw	r5,-8(fp)
 4110298:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 411029c:	01c07fc4 	movi	r7,511
 41102a0:	01800044 	movi	r6,1
 41102a4:	e17fff17 	ldw	r5,-4(fp)
 41102a8:	01010474 	movhi	r4,1041
 41102ac:	21073704 	addi	r4,r4,7388
 41102b0:	41101ac0 	call	41101ac <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 41102b4:	01c07fc4 	movi	r7,511
 41102b8:	000d883a 	mov	r6,zero
 41102bc:	e17ffe17 	ldw	r5,-8(fp)
 41102c0:	01010474 	movhi	r4,1041
 41102c4:	21073404 	addi	r4,r4,7376
 41102c8:	41101ac0 	call	41101ac <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 41102cc:	01c07fc4 	movi	r7,511
 41102d0:	01800044 	movi	r6,1
 41102d4:	e17ffd17 	ldw	r5,-12(fp)
 41102d8:	01010474 	movhi	r4,1041
 41102dc:	21073a04 	addi	r4,r4,7400
 41102e0:	41101ac0 	call	41101ac <alt_open_fd>
}  
 41102e4:	0001883a 	nop
 41102e8:	e037883a 	mov	sp,fp
 41102ec:	dfc00117 	ldw	ra,4(sp)
 41102f0:	df000017 	ldw	fp,0(sp)
 41102f4:	dec00204 	addi	sp,sp,8
 41102f8:	f800283a 	ret

041102fc <alt_get_errno>:
{
 41102fc:	defffe04 	addi	sp,sp,-8
 4110300:	dfc00115 	stw	ra,4(sp)
 4110304:	df000015 	stw	fp,0(sp)
 4110308:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 411030c:	d0a00917 	ldw	r2,-32732(gp)
 4110310:	10000326 	beq	r2,zero,4110320 <alt_get_errno+0x24>
 4110314:	d0a00917 	ldw	r2,-32732(gp)
 4110318:	103ee83a 	callr	r2
 411031c:	00000106 	br	4110324 <alt_get_errno+0x28>
 4110320:	d0a74304 	addi	r2,gp,-25332
}
 4110324:	e037883a 	mov	sp,fp
 4110328:	dfc00117 	ldw	ra,4(sp)
 411032c:	df000017 	ldw	fp,0(sp)
 4110330:	dec00204 	addi	sp,sp,8
 4110334:	f800283a 	ret

04110338 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 4110338:	defffd04 	addi	sp,sp,-12
 411033c:	df000215 	stw	fp,8(sp)
 4110340:	df000204 	addi	fp,sp,8
 4110344:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 4110348:	e0bffe17 	ldw	r2,-8(fp)
 411034c:	10800217 	ldw	r2,8(r2)
 4110350:	10d00034 	orhi	r3,r2,16384
 4110354:	e0bffe17 	ldw	r2,-8(fp)
 4110358:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 411035c:	e03fff15 	stw	zero,-4(fp)
 4110360:	00002306 	br	41103f0 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 4110364:	e0ffff17 	ldw	r3,-4(fp)
 4110368:	1805883a 	mov	r2,r3
 411036c:	1085883a 	add	r2,r2,r2
 4110370:	10c5883a 	add	r2,r2,r3
 4110374:	100490ba 	slli	r2,r2,2
 4110378:	00c10474 	movhi	r3,1041
 411037c:	10c7883a 	add	r3,r2,r3
 4110380:	18c73417 	ldw	r3,7376(r3)
 4110384:	e0bffe17 	ldw	r2,-8(fp)
 4110388:	10800017 	ldw	r2,0(r2)
 411038c:	1880151e 	bne	r3,r2,41103e4 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 4110390:	e0ffff17 	ldw	r3,-4(fp)
 4110394:	1805883a 	mov	r2,r3
 4110398:	1085883a 	add	r2,r2,r2
 411039c:	10c5883a 	add	r2,r2,r3
 41103a0:	100490ba 	slli	r2,r2,2
 41103a4:	00c10474 	movhi	r3,1041
 41103a8:	10c7883a 	add	r3,r2,r3
 41103ac:	18873617 	ldw	r2,7384(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
 41103b0:	10000c0e 	bge	r2,zero,41103e4 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
 41103b4:	e0ffff17 	ldw	r3,-4(fp)
 41103b8:	1805883a 	mov	r2,r3
 41103bc:	1085883a 	add	r2,r2,r2
 41103c0:	10c5883a 	add	r2,r2,r3
 41103c4:	100490ba 	slli	r2,r2,2
 41103c8:	00c10474 	movhi	r3,1041
 41103cc:	18c73404 	addi	r3,r3,7376
 41103d0:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 41103d4:	e0fffe17 	ldw	r3,-8(fp)
 41103d8:	18800226 	beq	r3,r2,41103e4 <alt_file_locked+0xac>
    {
      return -EACCES;
 41103dc:	00bffcc4 	movi	r2,-13
 41103e0:	00000806 	br	4110404 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
 41103e4:	e0bfff17 	ldw	r2,-4(fp)
 41103e8:	10800044 	addi	r2,r2,1
 41103ec:	e0bfff15 	stw	r2,-4(fp)
 41103f0:	d0a00817 	ldw	r2,-32736(gp)
 41103f4:	1007883a 	mov	r3,r2
 41103f8:	e0bfff17 	ldw	r2,-4(fp)
 41103fc:	18bfd92e 	bgeu	r3,r2,4110364 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 4110400:	0005883a 	mov	r2,zero
}
 4110404:	e037883a 	mov	sp,fp
 4110408:	df000017 	ldw	fp,0(sp)
 411040c:	dec00104 	addi	sp,sp,4
 4110410:	f800283a 	ret

04110414 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 4110414:	defff604 	addi	sp,sp,-40
 4110418:	dfc00915 	stw	ra,36(sp)
 411041c:	df000815 	stw	fp,32(sp)
 4110420:	df000804 	addi	fp,sp,32
 4110424:	e13ffa15 	stw	r4,-24(fp)
 4110428:	e17ff915 	stw	r5,-28(fp)
 411042c:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 4110430:	00bfffc4 	movi	r2,-1
 4110434:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
 4110438:	00bffb44 	movi	r2,-19
 411043c:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
 4110440:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 4110444:	d1600604 	addi	r5,gp,-32744
 4110448:	e13ffa17 	ldw	r4,-24(fp)
 411044c:	410fe640 	call	410fe64 <alt_find_dev>
 4110450:	e0bfff15 	stw	r2,-4(fp)
 4110454:	e0bfff17 	ldw	r2,-4(fp)
 4110458:	1000051e 	bne	r2,zero,4110470 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 411045c:	e13ffa17 	ldw	r4,-24(fp)
 4110460:	41107440 	call	4110744 <alt_find_file>
 4110464:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
 4110468:	00800044 	movi	r2,1
 411046c:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 4110470:	e0bfff17 	ldw	r2,-4(fp)
 4110474:	10002c26 	beq	r2,zero,4110528 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
 4110478:	e13fff17 	ldw	r4,-4(fp)
 411047c:	411084c0 	call	411084c <alt_get_fd>
 4110480:	e0bffe15 	stw	r2,-8(fp)
 4110484:	e0bffe17 	ldw	r2,-8(fp)
 4110488:	1000030e 	bge	r2,zero,4110498 <open+0x84>
    {
      status = index;
 411048c:	e0bffe17 	ldw	r2,-8(fp)
 4110490:	e0bffd15 	stw	r2,-12(fp)
 4110494:	00002606 	br	4110530 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
 4110498:	e0fffe17 	ldw	r3,-8(fp)
 411049c:	1805883a 	mov	r2,r3
 41104a0:	1085883a 	add	r2,r2,r2
 41104a4:	10c5883a 	add	r2,r2,r3
 41104a8:	100490ba 	slli	r2,r2,2
 41104ac:	00c10474 	movhi	r3,1041
 41104b0:	18c73404 	addi	r3,r3,7376
 41104b4:	10c5883a 	add	r2,r2,r3
 41104b8:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 41104bc:	e0fff917 	ldw	r3,-28(fp)
 41104c0:	00900034 	movhi	r2,16384
 41104c4:	10bfffc4 	addi	r2,r2,-1
 41104c8:	1886703a 	and	r3,r3,r2
 41104cc:	e0bffb17 	ldw	r2,-20(fp)
 41104d0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 41104d4:	e0bffc17 	ldw	r2,-16(fp)
 41104d8:	1000051e 	bne	r2,zero,41104f0 <open+0xdc>
 41104dc:	e13ffb17 	ldw	r4,-20(fp)
 41104e0:	41103380 	call	4110338 <alt_file_locked>
 41104e4:	e0bffd15 	stw	r2,-12(fp)
 41104e8:	e0bffd17 	ldw	r2,-12(fp)
 41104ec:	10001016 	blt	r2,zero,4110530 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 41104f0:	e0bfff17 	ldw	r2,-4(fp)
 41104f4:	10800317 	ldw	r2,12(r2)
 41104f8:	10000826 	beq	r2,zero,411051c <open+0x108>
 41104fc:	e0bfff17 	ldw	r2,-4(fp)
 4110500:	10800317 	ldw	r2,12(r2)
 4110504:	e1fff817 	ldw	r7,-32(fp)
 4110508:	e1bff917 	ldw	r6,-28(fp)
 411050c:	e17ffa17 	ldw	r5,-24(fp)
 4110510:	e13ffb17 	ldw	r4,-20(fp)
 4110514:	103ee83a 	callr	r2
 4110518:	00000106 	br	4110520 <open+0x10c>
 411051c:	0005883a 	mov	r2,zero
 4110520:	e0bffd15 	stw	r2,-12(fp)
 4110524:	00000206 	br	4110530 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 4110528:	00bffb44 	movi	r2,-19
 411052c:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 4110530:	e0bffd17 	ldw	r2,-12(fp)
 4110534:	1000090e 	bge	r2,zero,411055c <open+0x148>
  {
    alt_release_fd (index);  
 4110538:	e13ffe17 	ldw	r4,-8(fp)
 411053c:	410df200 	call	410df20 <alt_release_fd>
    ALT_ERRNO = -status;
 4110540:	41102fc0 	call	41102fc <alt_get_errno>
 4110544:	1007883a 	mov	r3,r2
 4110548:	e0bffd17 	ldw	r2,-12(fp)
 411054c:	0085c83a 	sub	r2,zero,r2
 4110550:	18800015 	stw	r2,0(r3)
    return -1;
 4110554:	00bfffc4 	movi	r2,-1
 4110558:	00000106 	br	4110560 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
 411055c:	e0bffe17 	ldw	r2,-8(fp)
}
 4110560:	e037883a 	mov	sp,fp
 4110564:	dfc00117 	ldw	ra,4(sp)
 4110568:	df000017 	ldw	fp,0(sp)
 411056c:	dec00204 	addi	sp,sp,8
 4110570:	f800283a 	ret

04110574 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 4110574:	defffa04 	addi	sp,sp,-24
 4110578:	df000515 	stw	fp,20(sp)
 411057c:	df000504 	addi	fp,sp,20
 4110580:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
 4110584:	0005303a 	rdctl	r2,status
 4110588:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 411058c:	e0fffc17 	ldw	r3,-16(fp)
 4110590:	00bfff84 	movi	r2,-2
 4110594:	1884703a 	and	r2,r3,r2
 4110598:	1001703a 	wrctl	status,r2
  return context;
 411059c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 41105a0:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
 41105a4:	e0bffb17 	ldw	r2,-20(fp)
 41105a8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 41105ac:	e0bffd17 	ldw	r2,-12(fp)
 41105b0:	10800017 	ldw	r2,0(r2)
 41105b4:	e0fffd17 	ldw	r3,-12(fp)
 41105b8:	18c00117 	ldw	r3,4(r3)
 41105bc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 41105c0:	e0bffd17 	ldw	r2,-12(fp)
 41105c4:	10800117 	ldw	r2,4(r2)
 41105c8:	e0fffd17 	ldw	r3,-12(fp)
 41105cc:	18c00017 	ldw	r3,0(r3)
 41105d0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 41105d4:	e0bffd17 	ldw	r2,-12(fp)
 41105d8:	e0fffd17 	ldw	r3,-12(fp)
 41105dc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 41105e0:	e0bffd17 	ldw	r2,-12(fp)
 41105e4:	e0fffd17 	ldw	r3,-12(fp)
 41105e8:	10c00015 	stw	r3,0(r2)
} 
 41105ec:	0001883a 	nop
 41105f0:	e0bfff17 	ldw	r2,-4(fp)
 41105f4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
 41105f8:	e0bffe17 	ldw	r2,-8(fp)
 41105fc:	1001703a 	wrctl	status,r2
}
 4110600:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
 4110604:	0001883a 	nop
 4110608:	e037883a 	mov	sp,fp
 411060c:	df000017 	ldw	fp,0(sp)
 4110610:	dec00104 	addi	sp,sp,4
 4110614:	f800283a 	ret

04110618 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 4110618:	defffb04 	addi	sp,sp,-20
 411061c:	dfc00415 	stw	ra,16(sp)
 4110620:	df000315 	stw	fp,12(sp)
 4110624:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 4110628:	d0a01017 	ldw	r2,-32704(gp)
 411062c:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 4110630:	d0a74a17 	ldw	r2,-25304(gp)
 4110634:	10800044 	addi	r2,r2,1
 4110638:	d0a74a15 	stw	r2,-25304(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 411063c:	00002e06 	br	41106f8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 4110640:	e0bfff17 	ldw	r2,-4(fp)
 4110644:	10800017 	ldw	r2,0(r2)
 4110648:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 411064c:	e0bfff17 	ldw	r2,-4(fp)
 4110650:	10800403 	ldbu	r2,16(r2)
 4110654:	10803fcc 	andi	r2,r2,255
 4110658:	10000426 	beq	r2,zero,411066c <alt_tick+0x54>
 411065c:	d0a74a17 	ldw	r2,-25304(gp)
 4110660:	1000021e 	bne	r2,zero,411066c <alt_tick+0x54>
    {
      alarm->rollover = 0;
 4110664:	e0bfff17 	ldw	r2,-4(fp)
 4110668:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 411066c:	e0bfff17 	ldw	r2,-4(fp)
 4110670:	10800217 	ldw	r2,8(r2)
 4110674:	d0e74a17 	ldw	r3,-25304(gp)
 4110678:	18801d36 	bltu	r3,r2,41106f0 <alt_tick+0xd8>
 411067c:	e0bfff17 	ldw	r2,-4(fp)
 4110680:	10800403 	ldbu	r2,16(r2)
 4110684:	10803fcc 	andi	r2,r2,255
 4110688:	1000191e 	bne	r2,zero,41106f0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 411068c:	e0bfff17 	ldw	r2,-4(fp)
 4110690:	10800317 	ldw	r2,12(r2)
 4110694:	e0ffff17 	ldw	r3,-4(fp)
 4110698:	18c00517 	ldw	r3,20(r3)
 411069c:	1809883a 	mov	r4,r3
 41106a0:	103ee83a 	callr	r2
 41106a4:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 41106a8:	e0bffd17 	ldw	r2,-12(fp)
 41106ac:	1000031e 	bne	r2,zero,41106bc <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 41106b0:	e13fff17 	ldw	r4,-4(fp)
 41106b4:	41105740 	call	4110574 <alt_alarm_stop>
 41106b8:	00000d06 	br	41106f0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 41106bc:	e0bfff17 	ldw	r2,-4(fp)
 41106c0:	10c00217 	ldw	r3,8(r2)
 41106c4:	e0bffd17 	ldw	r2,-12(fp)
 41106c8:	1887883a 	add	r3,r3,r2
 41106cc:	e0bfff17 	ldw	r2,-4(fp)
 41106d0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 41106d4:	e0bfff17 	ldw	r2,-4(fp)
 41106d8:	10c00217 	ldw	r3,8(r2)
 41106dc:	d0a74a17 	ldw	r2,-25304(gp)
 41106e0:	1880032e 	bgeu	r3,r2,41106f0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 41106e4:	e0bfff17 	ldw	r2,-4(fp)
 41106e8:	00c00044 	movi	r3,1
 41106ec:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 41106f0:	e0bffe17 	ldw	r2,-8(fp)
 41106f4:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
 41106f8:	e0ffff17 	ldw	r3,-4(fp)
 41106fc:	d0a01004 	addi	r2,gp,-32704
 4110700:	18bfcf1e 	bne	r3,r2,4110640 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 4110704:	0001883a 	nop
}
 4110708:	0001883a 	nop
 411070c:	e037883a 	mov	sp,fp
 4110710:	dfc00117 	ldw	ra,4(sp)
 4110714:	df000017 	ldw	fp,0(sp)
 4110718:	dec00204 	addi	sp,sp,8
 411071c:	f800283a 	ret

04110720 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 4110720:	deffff04 	addi	sp,sp,-4
 4110724:	df000015 	stw	fp,0(sp)
 4110728:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 411072c:	000170fa 	wrctl	ienable,zero
}
 4110730:	0001883a 	nop
 4110734:	e037883a 	mov	sp,fp
 4110738:	df000017 	ldw	fp,0(sp)
 411073c:	dec00104 	addi	sp,sp,4
 4110740:	f800283a 	ret

04110744 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 4110744:	defffb04 	addi	sp,sp,-20
 4110748:	dfc00415 	stw	ra,16(sp)
 411074c:	df000315 	stw	fp,12(sp)
 4110750:	df000304 	addi	fp,sp,12
 4110754:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 4110758:	d0a00417 	ldw	r2,-32752(gp)
 411075c:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4110760:	00003106 	br	4110828 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 4110764:	e0bfff17 	ldw	r2,-4(fp)
 4110768:	10800217 	ldw	r2,8(r2)
 411076c:	1009883a 	mov	r4,r2
 4110770:	4106f540 	call	4106f54 <strlen>
 4110774:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 4110778:	e0bfff17 	ldw	r2,-4(fp)
 411077c:	10c00217 	ldw	r3,8(r2)
 4110780:	e0bffe17 	ldw	r2,-8(fp)
 4110784:	10bfffc4 	addi	r2,r2,-1
 4110788:	1885883a 	add	r2,r3,r2
 411078c:	10800003 	ldbu	r2,0(r2)
 4110790:	10803fcc 	andi	r2,r2,255
 4110794:	1080201c 	xori	r2,r2,128
 4110798:	10bfe004 	addi	r2,r2,-128
 411079c:	10800bd8 	cmpnei	r2,r2,47
 41107a0:	1000031e 	bne	r2,zero,41107b0 <alt_find_file+0x6c>
    {
      len -= 1;
 41107a4:	e0bffe17 	ldw	r2,-8(fp)
 41107a8:	10bfffc4 	addi	r2,r2,-1
 41107ac:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 41107b0:	e0bffe17 	ldw	r2,-8(fp)
 41107b4:	e0fffd17 	ldw	r3,-12(fp)
 41107b8:	1885883a 	add	r2,r3,r2
 41107bc:	10800003 	ldbu	r2,0(r2)
 41107c0:	10803fcc 	andi	r2,r2,255
 41107c4:	1080201c 	xori	r2,r2,128
 41107c8:	10bfe004 	addi	r2,r2,-128
 41107cc:	10800be0 	cmpeqi	r2,r2,47
 41107d0:	1000081e 	bne	r2,zero,41107f4 <alt_find_file+0xb0>
 41107d4:	e0bffe17 	ldw	r2,-8(fp)
 41107d8:	e0fffd17 	ldw	r3,-12(fp)
 41107dc:	1885883a 	add	r2,r3,r2
 41107e0:	10800003 	ldbu	r2,0(r2)
 41107e4:	10803fcc 	andi	r2,r2,255
 41107e8:	1080201c 	xori	r2,r2,128
 41107ec:	10bfe004 	addi	r2,r2,-128
 41107f0:	10000a1e 	bne	r2,zero,411081c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 41107f4:	e0bfff17 	ldw	r2,-4(fp)
 41107f8:	10800217 	ldw	r2,8(r2)
 41107fc:	e0fffe17 	ldw	r3,-8(fp)
 4110800:	180d883a 	mov	r6,r3
 4110804:	e17ffd17 	ldw	r5,-12(fp)
 4110808:	1009883a 	mov	r4,r2
 411080c:	41109e40 	call	41109e4 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
 4110810:	1000021e 	bne	r2,zero,411081c <alt_find_file+0xd8>
    {
      /* match found */

      return next;
 4110814:	e0bfff17 	ldw	r2,-4(fp)
 4110818:	00000706 	br	4110838 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 411081c:	e0bfff17 	ldw	r2,-4(fp)
 4110820:	10800017 	ldw	r2,0(r2)
 4110824:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
 4110828:	e0ffff17 	ldw	r3,-4(fp)
 411082c:	d0a00404 	addi	r2,gp,-32752
 4110830:	18bfcc1e 	bne	r3,r2,4110764 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
 4110834:	0005883a 	mov	r2,zero
}
 4110838:	e037883a 	mov	sp,fp
 411083c:	dfc00117 	ldw	ra,4(sp)
 4110840:	df000017 	ldw	fp,0(sp)
 4110844:	dec00204 	addi	sp,sp,8
 4110848:	f800283a 	ret

0411084c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 411084c:	defffc04 	addi	sp,sp,-16
 4110850:	df000315 	stw	fp,12(sp)
 4110854:	df000304 	addi	fp,sp,12
 4110858:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
 411085c:	00bffa04 	movi	r2,-24
 4110860:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 4110864:	e03fff15 	stw	zero,-4(fp)
 4110868:	00001d06 	br	41108e0 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
 411086c:	e0ffff17 	ldw	r3,-4(fp)
 4110870:	1805883a 	mov	r2,r3
 4110874:	1085883a 	add	r2,r2,r2
 4110878:	10c5883a 	add	r2,r2,r3
 411087c:	100490ba 	slli	r2,r2,2
 4110880:	00c10474 	movhi	r3,1041
 4110884:	10c7883a 	add	r3,r2,r3
 4110888:	18873417 	ldw	r2,7376(r3)
 411088c:	1000111e 	bne	r2,zero,41108d4 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
 4110890:	e0ffff17 	ldw	r3,-4(fp)
 4110894:	1805883a 	mov	r2,r3
 4110898:	1085883a 	add	r2,r2,r2
 411089c:	10c5883a 	add	r2,r2,r3
 41108a0:	100490ba 	slli	r2,r2,2
 41108a4:	e13ffd17 	ldw	r4,-12(fp)
 41108a8:	00c10474 	movhi	r3,1041
 41108ac:	10c7883a 	add	r3,r2,r3
 41108b0:	19073415 	stw	r4,7376(r3)
      if (i > alt_max_fd)
 41108b4:	d0e00817 	ldw	r3,-32736(gp)
 41108b8:	e0bfff17 	ldw	r2,-4(fp)
 41108bc:	1880020e 	bge	r3,r2,41108c8 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
 41108c0:	e0bfff17 	ldw	r2,-4(fp)
 41108c4:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
 41108c8:	e0bfff17 	ldw	r2,-4(fp)
 41108cc:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 41108d0:	00000706 	br	41108f0 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
 41108d4:	e0bfff17 	ldw	r2,-4(fp)
 41108d8:	10800044 	addi	r2,r2,1
 41108dc:	e0bfff15 	stw	r2,-4(fp)
 41108e0:	e0bfff17 	ldw	r2,-4(fp)
 41108e4:	10800810 	cmplti	r2,r2,32
 41108e8:	103fe01e 	bne	r2,zero,411086c <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
 41108ec:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 41108f0:	e0bffe17 	ldw	r2,-8(fp)
}
 41108f4:	e037883a 	mov	sp,fp
 41108f8:	df000017 	ldw	fp,0(sp)
 41108fc:	dec00104 	addi	sp,sp,4
 4110900:	f800283a 	ret

04110904 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 4110904:	defffe04 	addi	sp,sp,-8
 4110908:	df000115 	stw	fp,4(sp)
 411090c:	df000104 	addi	fp,sp,4
 4110910:	e13fff15 	stw	r4,-4(fp)
 4110914:	e0bfff17 	ldw	r2,-4(fp)
 4110918:	10bffe84 	addi	r2,r2,-6
 411091c:	10c00428 	cmpgeui	r3,r2,16
 4110920:	1800191e 	bne	r3,zero,4110988 <alt_exception_cause_generated_bad_addr+0x84>
 4110924:	100690ba 	slli	r3,r2,2
 4110928:	00810474 	movhi	r2,1041
 411092c:	1885883a 	add	r2,r3,r2
 4110930:	10824e17 	ldw	r2,2360(r2)
 4110934:	1000683a 	jmp	r2
 4110938:	04110978 	rdprs	r16,zero,17445
 411093c:	04110978 	rdprs	r16,zero,17445
 4110940:	04110988 	cmpgei	r16,zero,17446
 4110944:	04110988 	cmpgei	r16,zero,17446
 4110948:	04110988 	cmpgei	r16,zero,17446
 411094c:	04110978 	rdprs	r16,zero,17445
 4110950:	04110980 	call	411098 <__alt_mem_sdram_controller_0-0x3beef68>
 4110954:	04110988 	cmpgei	r16,zero,17446
 4110958:	04110978 	rdprs	r16,zero,17445
 411095c:	04110978 	rdprs	r16,zero,17445
 4110960:	04110988 	cmpgei	r16,zero,17446
 4110964:	04110978 	rdprs	r16,zero,17445
 4110968:	04110980 	call	411098 <__alt_mem_sdram_controller_0-0x3beef68>
 411096c:	04110988 	cmpgei	r16,zero,17446
 4110970:	04110988 	cmpgei	r16,zero,17446
 4110974:	04110978 	rdprs	r16,zero,17445
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 4110978:	00800044 	movi	r2,1
 411097c:	00000306 	br	411098c <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 4110980:	0005883a 	mov	r2,zero
 4110984:	00000106 	br	411098c <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
 4110988:	0005883a 	mov	r2,zero
  }
}
 411098c:	e037883a 	mov	sp,fp
 4110990:	df000017 	ldw	fp,0(sp)
 4110994:	dec00104 	addi	sp,sp,4
 4110998:	f800283a 	ret

0411099c <atexit>:
 411099c:	200b883a 	mov	r5,r4
 41109a0:	000f883a 	mov	r7,zero
 41109a4:	000d883a 	mov	r6,zero
 41109a8:	0009883a 	mov	r4,zero
 41109ac:	4110a5c1 	jmpi	4110a5c <__register_exitproc>

041109b0 <exit>:
 41109b0:	defffe04 	addi	sp,sp,-8
 41109b4:	000b883a 	mov	r5,zero
 41109b8:	dc000015 	stw	r16,0(sp)
 41109bc:	dfc00115 	stw	ra,4(sp)
 41109c0:	2021883a 	mov	r16,r4
 41109c4:	4110aec0 	call	4110aec <__call_exitprocs>
 41109c8:	00810474 	movhi	r2,1041
 41109cc:	110bdc17 	ldw	r4,12144(r2)
 41109d0:	20800f17 	ldw	r2,60(r4)
 41109d4:	10000126 	beq	r2,zero,41109dc <exit+0x2c>
 41109d8:	103ee83a 	callr	r2
 41109dc:	8009883a 	mov	r4,r16
 41109e0:	410d76c0 	call	410d76c <_exit>

041109e4 <memcmp>:
 41109e4:	30800130 	cmpltui	r2,r6,4
 41109e8:	10000b1e 	bne	r2,zero,4110a18 <memcmp+0x34>
 41109ec:	2144b03a 	or	r2,r4,r5
 41109f0:	108000cc 	andi	r2,r2,3
 41109f4:	1000171e 	bne	r2,zero,4110a54 <memcmp+0x70>
 41109f8:	20c00017 	ldw	r3,0(r4)
 41109fc:	28800017 	ldw	r2,0(r5)
 4110a00:	1880141e 	bne	r3,r2,4110a54 <memcmp+0x70>
 4110a04:	31bfff04 	addi	r6,r6,-4
 4110a08:	30800128 	cmpgeui	r2,r6,4
 4110a0c:	21000104 	addi	r4,r4,4
 4110a10:	29400104 	addi	r5,r5,4
 4110a14:	103ff81e 	bne	r2,zero,41109f8 <memcmp+0x14>
 4110a18:	30bfffc4 	addi	r2,r6,-1
 4110a1c:	30000b26 	beq	r6,zero,4110a4c <memcmp+0x68>
 4110a20:	11800044 	addi	r6,r2,1
 4110a24:	218d883a 	add	r6,r4,r6
 4110a28:	00000106 	br	4110a30 <memcmp+0x4c>
 4110a2c:	21800726 	beq	r4,r6,4110a4c <memcmp+0x68>
 4110a30:	20800003 	ldbu	r2,0(r4)
 4110a34:	28c00003 	ldbu	r3,0(r5)
 4110a38:	21000044 	addi	r4,r4,1
 4110a3c:	29400044 	addi	r5,r5,1
 4110a40:	10fffa26 	beq	r2,r3,4110a2c <memcmp+0x48>
 4110a44:	10c5c83a 	sub	r2,r2,r3
 4110a48:	f800283a 	ret
 4110a4c:	0005883a 	mov	r2,zero
 4110a50:	f800283a 	ret
 4110a54:	30bfffc4 	addi	r2,r6,-1
 4110a58:	003ff106 	br	4110a20 <memcmp+0x3c>

04110a5c <__register_exitproc>:
 4110a5c:	00810474 	movhi	r2,1041
 4110a60:	10cbdc17 	ldw	r3,12144(r2)
 4110a64:	18805217 	ldw	r2,328(r3)
 4110a68:	10001726 	beq	r2,zero,4110ac8 <__register_exitproc+0x6c>
 4110a6c:	10c00117 	ldw	r3,4(r2)
 4110a70:	1a000808 	cmpgei	r8,r3,32
 4110a74:	40001b1e 	bne	r8,zero,4110ae4 <__register_exitproc+0x88>
 4110a78:	20000b26 	beq	r4,zero,4110aa8 <__register_exitproc+0x4c>
 4110a7c:	181090ba 	slli	r8,r3,2
 4110a80:	02400044 	movi	r9,1
 4110a84:	48d2983a 	sll	r9,r9,r3
 4110a88:	1211883a 	add	r8,r2,r8
 4110a8c:	41802215 	stw	r6,136(r8)
 4110a90:	11806217 	ldw	r6,392(r2)
 4110a94:	21000098 	cmpnei	r4,r4,2
 4110a98:	324cb03a 	or	r6,r6,r9
 4110a9c:	11806215 	stw	r6,392(r2)
 4110aa0:	41c04215 	stw	r7,264(r8)
 4110aa4:	20000b26 	beq	r4,zero,4110ad4 <__register_exitproc+0x78>
 4110aa8:	19000084 	addi	r4,r3,2
 4110aac:	200890ba 	slli	r4,r4,2
 4110ab0:	18c00044 	addi	r3,r3,1
 4110ab4:	10c00115 	stw	r3,4(r2)
 4110ab8:	1105883a 	add	r2,r2,r4
 4110abc:	11400015 	stw	r5,0(r2)
 4110ac0:	0005883a 	mov	r2,zero
 4110ac4:	f800283a 	ret
 4110ac8:	18805304 	addi	r2,r3,332
 4110acc:	18805215 	stw	r2,328(r3)
 4110ad0:	003fe606 	br	4110a6c <__register_exitproc+0x10>
 4110ad4:	11006317 	ldw	r4,396(r2)
 4110ad8:	2252b03a 	or	r9,r4,r9
 4110adc:	12406315 	stw	r9,396(r2)
 4110ae0:	003ff106 	br	4110aa8 <__register_exitproc+0x4c>
 4110ae4:	00bfffc4 	movi	r2,-1
 4110ae8:	f800283a 	ret

04110aec <__call_exitprocs>:
 4110aec:	defff704 	addi	sp,sp,-36
 4110af0:	00810474 	movhi	r2,1041
 4110af4:	dcc00315 	stw	r19,12(sp)
 4110af8:	14cbdc17 	ldw	r19,12144(r2)
 4110afc:	dc800215 	stw	r18,8(sp)
 4110b00:	dfc00815 	stw	ra,32(sp)
 4110b04:	9c805217 	ldw	r18,328(r19)
 4110b08:	ddc00715 	stw	r23,28(sp)
 4110b0c:	dd800615 	stw	r22,24(sp)
 4110b10:	dd400515 	stw	r21,20(sp)
 4110b14:	dd000415 	stw	r20,16(sp)
 4110b18:	dc400115 	stw	r17,4(sp)
 4110b1c:	dc000015 	stw	r16,0(sp)
 4110b20:	90001026 	beq	r18,zero,4110b64 <__call_exitprocs+0x78>
 4110b24:	202b883a 	mov	r21,r4
 4110b28:	282d883a 	mov	r22,r5
 4110b2c:	05000044 	movi	r20,1
 4110b30:	94000117 	ldw	r16,4(r18)
 4110b34:	847fffc4 	addi	r17,r16,-1
 4110b38:	88000a16 	blt	r17,zero,4110b64 <__call_exitprocs+0x78>
 4110b3c:	84000044 	addi	r16,r16,1
 4110b40:	802090ba 	slli	r16,r16,2
 4110b44:	9421883a 	add	r16,r18,r16
 4110b48:	b0001126 	beq	r22,zero,4110b90 <__call_exitprocs+0xa4>
 4110b4c:	80804017 	ldw	r2,256(r16)
 4110b50:	15800f26 	beq	r2,r22,4110b90 <__call_exitprocs+0xa4>
 4110b54:	8c7fffc4 	addi	r17,r17,-1
 4110b58:	88bfffd8 	cmpnei	r2,r17,-1
 4110b5c:	843fff04 	addi	r16,r16,-4
 4110b60:	103ff91e 	bne	r2,zero,4110b48 <__call_exitprocs+0x5c>
 4110b64:	dfc00817 	ldw	ra,32(sp)
 4110b68:	ddc00717 	ldw	r23,28(sp)
 4110b6c:	dd800617 	ldw	r22,24(sp)
 4110b70:	dd400517 	ldw	r21,20(sp)
 4110b74:	dd000417 	ldw	r20,16(sp)
 4110b78:	dcc00317 	ldw	r19,12(sp)
 4110b7c:	dc800217 	ldw	r18,8(sp)
 4110b80:	dc400117 	ldw	r17,4(sp)
 4110b84:	dc000017 	ldw	r16,0(sp)
 4110b88:	dec00904 	addi	sp,sp,36
 4110b8c:	f800283a 	ret
 4110b90:	90800117 	ldw	r2,4(r18)
 4110b94:	81800017 	ldw	r6,0(r16)
 4110b98:	10bfffc4 	addi	r2,r2,-1
 4110b9c:	14401726 	beq	r2,r17,4110bfc <__call_exitprocs+0x110>
 4110ba0:	80000015 	stw	zero,0(r16)
 4110ba4:	303feb26 	beq	r6,zero,4110b54 <__call_exitprocs+0x68>
 4110ba8:	a446983a 	sll	r3,r20,r17
 4110bac:	90806217 	ldw	r2,392(r18)
 4110bb0:	95c00117 	ldw	r23,4(r18)
 4110bb4:	1884703a 	and	r2,r3,r2
 4110bb8:	1000081e 	bne	r2,zero,4110bdc <__call_exitprocs+0xf0>
 4110bbc:	303ee83a 	callr	r6
 4110bc0:	90c00117 	ldw	r3,4(r18)
 4110bc4:	98805217 	ldw	r2,328(r19)
 4110bc8:	1dc0011e 	bne	r3,r23,4110bd0 <__call_exitprocs+0xe4>
 4110bcc:	90bfe126 	beq	r18,r2,4110b54 <__call_exitprocs+0x68>
 4110bd0:	103fe426 	beq	r2,zero,4110b64 <__call_exitprocs+0x78>
 4110bd4:	1025883a 	mov	r18,r2
 4110bd8:	003fd506 	br	4110b30 <__call_exitprocs+0x44>
 4110bdc:	90806317 	ldw	r2,396(r18)
 4110be0:	81002017 	ldw	r4,128(r16)
 4110be4:	1886703a 	and	r3,r3,r2
 4110be8:	1800061e 	bne	r3,zero,4110c04 <__call_exitprocs+0x118>
 4110bec:	200b883a 	mov	r5,r4
 4110bf0:	a809883a 	mov	r4,r21
 4110bf4:	303ee83a 	callr	r6
 4110bf8:	003ff106 	br	4110bc0 <__call_exitprocs+0xd4>
 4110bfc:	94400115 	stw	r17,4(r18)
 4110c00:	003fe806 	br	4110ba4 <__call_exitprocs+0xb8>
 4110c04:	303ee83a 	callr	r6
 4110c08:	003fed06 	br	4110bc0 <__call_exitprocs+0xd4>
